[
{
  "prompt": "C4_UC_PainelFinanceiro",
  "code": "@startuml \"C4_UC_PainelFinanceiro\"...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["gestao financeira", "painel de visualizacao", "casos de uso"],
  "description": "Diagramme C4 montrant le contexte du système de gestion financière personnelle, avec les cas d'utilisation liés au painel de visualisation.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,
{
  "prompt": "@startuml title Notificacao top to bottom direction !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nContainer_Boundary(\"DemoModulithApplication.DemoModulithApplication_boundary\", \"DemoModulithApplication\", \"$tags=\\\"\\\") {\n  Component(DemoModulithApplication.DemoModulithApplication.Notificacao, \"Notificacao\", \"Module\", \"\", \"$tags=\\\"\\\"\")\n}\nSHOW_LEGEND(true)\n@enduml",
  "code": "@startuml title Notificacao top to bottom direction !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nContainer_Boundary(\"DemoModulithApplication.DemoModulithApplication_boundary\", \"DemoModulithApplication\", \"$tags=\\\"\\\") {\n  Component(DemoModulithApplication.DemoModulithApplication.Notificacao, \"Notificacao\", \"Module\", \"\", \"$tags=\\\"\\\"\")\n}\nSHOW_LEGEND(true)\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["C4", "PlantUML", "Container Boundary"],
  "description": "Diagramme C4 représentant un conteneur de bord avec une notification comme composant.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/"
}
,
{
  "prompt": "PlantUML",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\n' ... (reste du code)\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4",
    "container",
    "system_boundary",
    "rel"
  ],
  "description": "Diagramme C4 montrant la structure de la plateforme e-commerce, notamment le service de paiement et le gestionnaire de messages.",
  "source": "https://example.com/plantuml-code"
}

,
{
  "prompt": "Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Catalog Types Remove - C4 - Component level",
  "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n' ... reste du code ...\n@enduml",
  "language": "plantuml",
  "type": "c4_component",
  "tags": [
    "c4",
    "component",
    "level",
    "catalogapi",
    "infrastructure",
    "context"
  ],
  "description": "Diagramme de composants de bas niveau pour l'application Catalog Api. Les relations entre les éléments sont représentées par des flèches colorées.",
  "source": "https://github.com/plantuml/plantuml-samples/blob/master/diagrams/C4/Component.puml"
}

,
{
  "prompt": "@startuml\n!include ../../../../../../.c4s/C4_Context.puml\n...\n@enduml",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\nSHOW_LEGEND()\n@enduml",
  "language": "plantuml",
  "type": "c4_context",
  "tags": [
    "c4_context",
    "system",
    "system_ext",
    "rel",
    "tcp/ip"
  ],
  "description": "Diagramme de contexte montrant les relations entre Internet Banking et Mainframe Banking System.",
  "source": "https://github.com/plantuml/plantuml-samples/blob/master/diagrams/C4/Context.puml"
}

,
{
  "prompt": "Créer un diagramme de contexte C4 pour la banque en ligne Big Bank Plc",
  "code": "@startuml\n!include ..\\..\\..\\..\\....\\.c4s\\C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Big Bank Plc - Internet Banking - API Application - Get Account Transactions - C4 Static - Context level\n\nSystem(BigBankPlc.SoftwareSystems.InternetBanking, \"Internet Banking\", \"Provided Internet Banking services\")\nSystem_Ext(BigBankPlc.SoftwareSystems.MainframeBankingSystem, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n\nRel(BigBankPlc.SoftwareSystems.InternetBanking, BigBankPlc.SoftwareSystems.MainframeBankingSystem, \"Uses\", \"XML/HTTPS\", $tags=\"protocol:xml/https\")\n\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["c4", "context", "diagramme", "banque en ligne", "Big Bank Plc"],
  "description": "Diagramme de contexte C4 montrant les relations entre les composants de la banque en ligne Big Bank Plc.",
  "source": "https://github.com/plantuml/plantuml"
}
,
{
  "prompt": "SPA Metrics Components",
  "code": "@startuml SPA Metrics Components\n!include <C4/C4_Component>\n\nContainer_Boundary(spa, \"SPA\", \"React\") {\n  Boundary(metrics, \"Metrics\") {\n    Component(productsWithStockCard, \"Products with Stock\", \"Card\")\n    Component(productsWithoutStockCard, \"Products without Stock\", \"Card\")\n    Component(monthSalesCard, \"Current Month Sales\", \"Card\")\n    Component(monthEarningsCard, \"Current Month Earnings\", \"Card\")\n    Component(monthlySalesGraph, \"Monthly Sales\", \"Graph\")\n    Component(productsSalesTopTable, \"Best Selling Products All Time\", \"Table\")\n    Component(productsSalesTopMonthTable, \"Best Selling Products At Current Month\", \"Table\")\n    Component(balanceCard, \"Current Balance\", \"Card\")\n    Component(monthlyBalanceGraph, \"Monthly Balance\", \"Graph\")\n  }\n}\n\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "spa",
    "metrics",
    "components",
    "c4_diagram"
  ],
  "description": "Diagramme C4 illustrant la structure de composants d'une Single-Page Application (SPA) affichant des métriques.",
  "source": "https://github.com/plantuml/plantuml"
}

,
{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml\nLAYOUT_WITH_LEGEND()\nContainer(spa, \"Single Page Application\", \"javascript and react\", \"Provides all the internet banking functionality to customers via their web browser.\")\nContainer(ma, \"Mobile App\", \"Xamarin\", \"Provides a limited subset ot the internet banking functionality to customers via their mobile mobile device.\")\nContainerDb(db, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\")\nSystem_Ext(mbs, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\nContainer_Boundary(api, \"API Application\") {\n    Component(sign, \"Sign In Controller\", \"MVC Rest Controlle\", \"Allows users to sign in to the internet banking system\")\n    Component(accounts, \"Accounts Summary Controller\", \"MVC Rest Controlle\", \"Provides customers with a summory of their bank accounts\")\n    Component(security, \"Security Component\", \"Spring Bean\", \"Provides functionality related to singing in, changing passwords, etc.\")\n    Component(mbsfacade, \"Mainframe Banking System Facade\", \"Spring Bean\", \"A facade onto the mainframe banking system.\")\n\n    Rel(sign, security, \"Uses\")\n    Rel(accounts, mbsfacade, \"Uses\")\n    Rel(security, db, \"Read & write to\", \"JDBC\")\n    Rel(mbsfacade, mbs, \"Uses\", \"XML/HTTPS\")\n}\nRel(spa, sign, \"Uses\", \"JSON/HTTPS\")\nRel(spa, accounts, \"Uses\", \"JSON/HTTPS\")\nRel(ma, sign, \"Uses\", \"JSON/HTTPS\")\nRel(ma, accounts, \"Uses\", \"JSON/HTTPS\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": [
    "single-page-application",
    "mobile-app",
    "database",
    "mainframe-banking-system",
    "api-application",
    "sign-in-controller",
    "accounts-summary-controller",
    "security-component",
    "mainframe-banking-system-facade"
  ],
  "description": "Le diagramme représente l'architecture de l'internet banking système, comprenant une application web unique (spa), une application mobile (ma), un système de base de données (db) et un système de banque principale (mbs). L'API Application (api) est responsable des interactions entre les composants.",
  "source": ""
}
,
{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["API", "Middleware", "NodeJS", "Database"],
  "description": "Ce diagramme C4 montre l'architecture d'une API de vérification de token. Elle comprend un conteneur Web Momo X, des composants API et middleware pour la vérification de tokens JWT.",
  "source": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,
{
  "prompt": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\n...\n@enduml",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4",
    "container",
    "plantuml"
  ],
  "description": "Diagramme représentant le niveau conteneur pour l'application To Do App, incluant la base de données et les interactions entre les éléments.",
  "source": "https://github.com/plantuml/plantuml"
}

,
{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle getListCaraBayar API\\n[NodeJs Bengkel API]\n...\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle getListCaraBayar API\\n[NodeJs Bengkel API]\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_component",
  "tags": [
    "C4",
    "Component",
    "NodeJs",
    "API",
    "Bengkel"
  ],
  "description": "Diagramme C4 représentant la structure et le fonctionnement du getListCaraBayar API, un composant de l'application NodeJs Bengkel.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,
{
  "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\ntitle Dot Net E Shop - Basket Api - Data - Redis Basket Repository - Delete Basket Async - C4 Sequence - Component level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.BasketApi, \"Basket Api\") {\n    Container_Boundary(DotNetEShop.SoftwareSystems.BasketApi.Containers.Data, \"Data\") {\n        Component(DotNetEShop.SoftwareSystems.BasketApi.Containers.Data.Components.RedisBasketRepository, \"Redis Basket Repository\", \"\", \"\")\n        Component(DotNetEShop.SoftwareSystems.BasketApi.Containers.Data.Components.RedisDatabase, \"Redis Database\", \"\", \"\")\n    }\n}\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, DotNetEShop.SoftwareSystems.BasketApi.Containers.Data.Components.RedisBasketRepository, \"Delete Basket Async\")\nRel(DotNetEShop.SoftwareSystems.BasketApi.Containers.Data.Components.RedisBasketRepository, DotNetEShop.SoftwareSystems.BasketApi.Containers.Data.Components.RedisBasketRepository, \"Get Basket Key\")\nRel(DotNetEShop.SoftwareSystems.BasketApi.Containers.Data.Components.RedisBasketRepository, DotNetEShop.SoftwareSystems.BasketApi.Containers.Data.Components.RedisDatabase, \"Key Delete Async\")\n\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4",
    "sequence",
    "component",
    "container"
  ],
  "description": "Diagramme représentant la structure des composants du système de gestion de paniers, incluant le Redis Basket Repository et la base de données Redis.",
  "source": "https://github.com/plantuml-kt/PlantUML-Kotlin"
}

,
{
  "prompt": "@startuml\n'https://plantuml.com/sequence-diagram\n!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons\n!include <C4/C4_Container>\n!include <C4/C4_Context>\n!include <office/users/users.puml>\n!include <elastic/common>\n!include <elastic/elasticsearch/elasticsearch>\n!include DEVICONS/postgresql.puml\n!include DEVICONS/python.puml\n!include DEVICONS/webplatform.puml\n!include DEVICONS/django.puml\ndefine MOTIVATION\nskinparam backgroundColor MOTIVATION\n\ntitle [C1]: TO BE\nHIDE_STEREOTYPE()\nSHOW_PERSON_OUTLINE()\nAddElementTag(\"etl\", $fontColor=$ELEMENT_FONT_COLOR, $bgColor=\"#335DA5\", $shape=EightSidedShape())\nAddElementTag(\"new_service\", $bgColor=\"Cyan\", $fontColor=\"black\")",
  "code": "@startuml\n'https://plantuml.com/sequence-diagram\n!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons\n!include <C4/C4_Container>\n!include <C4/C4_Context>\n!include <office/users/users.puml>\n!include <elastic/common>\n!include <elastic/elasticsearch/elasticsearch>\n!include DEVICONS/postgresql.puml\n!include DEVICONS/python.puml\n!include DEVICONS/webplatform.puml\n!include DEVICONS/django.puml\ndefine MOTIVATION\nskinparam backgroundColor MOTIVATION\n\ntitle [C1]: TO BE\nHIDE_STEREOTYPE()\nSHOW_PERSON_OUTLINE()\nAddElementTag(\"etl\", $fontColor=$ELEMENT_FONT_COLOR, $bgColor=\"#335DA5\", $shape=EightSidedShape())\nAddElementTag(\"new_service\", $bgColor=\"Cyan\", $fontColor=\"black\")",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["etl", "db", "django", "elasticsearch", "webplatform", "python"],
  "description": "Diagramme de contexte montrant les composants et les relations entre eux.",
  "source": "@startuml\n'https://plantuml.com/sequence-diagram\n!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons\n!include <C4/C4_Container>\n!include <C4/C4_Context>\n!include <office/users/users.puml>\n!include <elastic/common>\n!include <elastic/elasticsearch/elasticsearch>\n!include DEVICONS/postgresql.puml\n!include DEVICONS/python.puml\n!include DEVICONS/webplatform.puml\n!include DEVICONS/django.puml\ndefine MOTIVATION\nskinparam backgroundColor MOTIVATION\n\ntitle [C1]: TO BE\nHIDE_STEREOTYPE()\nSHOW_PERSON_OUTLINE()\nAddElementTag(\"etl\", $fontColor=$ELEMENT_FONT_COLOR, $bgColor=\"#335DA5\", $shape=EightSidedShape())\nAddElementTag(\"new_service\", $bgColor=\"Cyan\", $fontColor=\"black\")",
  "diagramme": {
    "title": "TO BE",
    "contenu": "Diagramme de contexte montrant les composants et les relations entre eux."
  }
}
,
{
  "prompt": "",
  "code": "@startuml Overview\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.8.0/C4_Container.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.8.0/C4_Component.puml\n... (code complet)",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Context Diagram", "EEG", "Robot"],
  "description": "Diagramme de contexte C4 montrant les éléments du système, notamment le robot et la collecte de données EEG.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/v2.8.0"
}
,
{
  "prompt": "@startuml\n' !include https://raw.githubusercontent.com/iofoundry/ontopuml/refs/heads/Development/iof.iuml\n!include ../iof.iuml\n...\n@enduml",
  "code": "@startuml\n' !include https://raw.githubusercontent.com/iofoundry/ontopuml/refs/heads/Development/iof.iuml\n!include ../iof.iuml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["Mazak", "personnelm", "ontology"],
  "description": "Diagramme C4 context représentant l'ontologie de Mazak-personnelm, avec des individus et des propriétés.",
  "source": "https://raw.githubusercontent.com/iofoundry/ontopuml/refs/heads/Development/iof.iuml"
}
,
{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle checkUser Moservice API\\n[NodeJs User API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"checkUser Moservice API\\\\n[Component]\"{",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle checkUser Moservice API\\n[NodeJs User API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"checkUser Moservice API\\\\n[Component]\"{",
  "langage": "plantuml",
  "type": "c4_component",
  "tags": ["nodejs", "api", "user", "controller", "function"],
  "description": "Diagramme de la composante checkUser Moservice API, montrant les différents composants et leurs relations.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,
{
  "prompt": "@startuml",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\n!define ICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/refs/heads/main/icons\n!include ICONS/devicons/dotnet.puml\n!include ICONS/devicons/msql_server.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\ntitle To Do App Example - To Do App - Web Api - Delete Task - C4 Static - Container level\nSystem_Boundary(ToDoAppExample.SoftwareSystems.ToDoApp, \"To Do App\") {\n    Container(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.WebApi, \"Web Api\", \"\", \"\", \"dotnet\", $tags=\"c4interflow:lifecycle:changed\")\n    Container(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.Database, \"Database\", \"\", \"\", \"msql_server\", $tags=\"c4interflow:lifecycle:changed\")\n}\nRel(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.WebApi, ToDoAppExample.SoftwareSystems.ToDoApp.Containers.Database, \"Uses\")\nSHOW_LEGEND()\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4interflow:lifecycle:new",
    "c4interflow:lifecycle:changed",
    "c4interflow:lifecycle:removed"
  ],
  "description": "Diagramme représentant le système 'To Do App' avec son API Web et sa base de données. Les relations entre les éléments sont indiquées par des flèches colorées.",
  "source": ""
}

,
{
  "prompt": "@startuml C4_Elements",
  "code": "@startuml C4_Elements ...\n ... @enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "plantuml", "architecture", "diagramme"],
  "description": "Diagrame d'architecture de l'application Wee Ops, incluant les composants de déploiement, les conteneurs et les relations entre eux.",
  "source": "@startuml C4_Elements ...\n ... @enduml"
}
,
{
  "prompt": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\n...@enduml",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4",
    "container",
    "uml",
    "plantuml"
  ],
  "description": "Diagramme C4 représentant l'architecture d'un service de livraison pour une plateforme e-commerce.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}

,
{
  "prompt": "@startuml ... @enduml",
  "code": "voir ci-dessus",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Architecture de systèmes", "AWS"],
  "description": "Le diagramme représente le contexte d'un système composé d'une application web où les utilisateurs peuvent consulter des informations sur des films.",
  "source": "https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master"
}
,
{
  "prompt": "@startuml",
  "code": "votre_code_entier",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["Miridor Network Diagram", "C4_Context"],
  "description": "Ce diagramme décrit l'architecture du réseau Miridor, comprenant des régions de données (Edmonton et Calgary), des commutateurs de distribution et des hôtes LXD.",
  "source": "@startuml"
}
,
{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml",
  "code": "le code donné ci-dessus",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "C4-PlantUML",
    "diagramme",
    "internet banking",
    "système bancaire"
  ],
  "description": "Le diagramme représente un système de banque en ligne avec différents composants et leurs relations. Les conteneurs incluent l'application web, la SPA, l'application mobile, la base de données et l'API.",
  "source": "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons/angular.puml"
}
,
{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml ...\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml ...\n@enduml",
  "langage": "puml",
  "type": "c4_context",
  "tags": [
    "C4",
    "Context",
    "Internet Banking System",
    "Web Application",
    "Single-Page App",
    "Mobile App",
    "Database"
  ],
  "description": "Diagramme du contexte de l'Internet Banking System, montrant les conteneurs et leurs relations.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,
{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons\n!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5\n' uncomment the following line and comment the first to use locally\n' !include C4_Container.puml\n!include DEVICONS/angular.puml\n!include DEVICONS/dotnet.puml\n!include DEVICONS/java.puml\n!include DEVICONS/msql_server.puml\n!include FONTAWESOME/server.puml\n!include FONTAWESOME/envelope.puml\nclassDiagram\n\ntitle Container diagram for Internet Banking System\n\nPerson(customer, Customer, \"A customer of the bank, with personal bank accounts\")\n\nSystem_Boundary(c1, \"Internet Banking\") {\n  Container(web_app, \"Web Application\", \"Java, Spring MVC\", \"Delivers the static content and the Internet banking SPA\", \"java\")\n  Container(spa, \"Single-Page App\", \"JavaScript, Angular\", \"Provides all the Internet banking functionality to customers via their web browser\", \"angular\")\n  Container(mobile_app, \"Mobile App\", \"C#, Xamarin\", \"Provides a limited subset of the Internet banking functionality to customers via their mobile device\", \"dotnet\")\n  ContainerDb(database, \"Database\", \"SQL Database\", \"Stores user registration information, hashed auth credentials, access logs, etc.\", \"mysql_server\")\n  Container(backend_api, \"API Application\", \"Java, Docker Container\", \"Provides Internet banking functionality via API\", \"server\")\n}\n\nSystem_Ext(email_system, \"E-Mail System\", \"The internal Microsoft Exchange system\", \"envelope\")\nSystem_Ext(banking_system, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n\nRel(customer, web_app, \"Uses\", \"HTTPS\")\nRel(customer, spa, \"Uses\", \"HTTPS\")\nRel(customer, mobile_app, \"Uses\")\n\nRel_Neighbor(web_app, spa, \"Delivers\")\nRel(spa, backend_api, \"Uses\", \"async, JSON/HTTPS\")\nRel(mobile_app, backend_api, \"Uses\", \"async, JSON/HTTPS\")\nRel_Back_Neighbor(database, backend_api, \"Reads from and writes to\", \"sync, JDBC\")\n\nRel_Back(customer, email_system, \"Sends e-mails to\")\nRel_Back(email_system, backend_api, \"Sends e-mails using\", \"sync, SMTP\")\nRel_Neighbor(backend_api, banking_system, \"Uses\", \"sync/async, XML/HTTPS\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": [
    "C4",
    "PlantUML",
    "Internet Banking System",
    "Container diagram"
  ],
  "description": "Ce diagramme représente le système Internet Banking avec ses différents composants, notamment la web application, l'application mobile et la base de données.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/examples/Internet-Banking-C4.puml"
}
,
{
  "prompt": "@startuml C1 System Context\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml",
  "code": "@startuml C1 System Context\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nPerson(memberPerson, \"Member\", \"Organizer of meeting groups, meetings, member of group, meeting attendee\")\nPerson(adminPerson, \"Administrator\", \"Administrator of the system\")\nSystem(myMeetingsSystem, \"My Meetings\")\nSystem_Ext(emailSystem, \"Email Service\")\nSystem_Ext(paymentGatewaySystem, \"Payment Gateway\")\nRel(memberPerson, myMeetingsSystem, \"Organize meeting groups and participate in meetings\")\nRel(adminPerson, myMeetingsSystem, \"Manage members, meeting groups, meetings\")\nRel(myMeetingsSystem, emailSystem, \"Request email send\")\nRel(emailSystem, memberPerson, \"Send email\")\nRel(emailSystem, adminPerson, \"Send email\")\nRel(myMeetingsSystem, paymentGatewaySystem, \"Delegate the payment\")\nRel(paymentGatewaySystem, myMeetingsSystem , \"Return info about payment\")\nRel(memberPerson, paymentGatewaySystem , \"Pay in\")\nLAYOUT_WITH_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Context Diagram", "System Context"],
  "description": "Ce diagramme décrit le contexte de l'application My Meetings. Il montre les différents acteurs et systèmes impliqués dans la plateforme.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,
{
  "prompt": "@startuml C1 System Context\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml",
  "code": "@startuml C1 System Context\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nPerson(memberPerson, \"Member\", \"Organizer of meeting groups, meetings, member of group, meeting attendee\")\nPerson(adminPerson, \"Administrator\", \"Administrator of the system\")\nSystem(myMeetingsSystem, \"My Meetings\")\nSystem_Ext(emailSystem, \"Email Service\")\nSystem_Ext(paymentGatewaySystem, \"Payment Gateway\")\nRel(memberPerson, myMeetingsSystem, \"Organize meeting groups and participate in meetings\")\nRel(adminPerson, myMeetingsSystem, \"Manage members, meeting groups, meetings\")\nRel(myMeetingsSystem, emailSystem, \"Request email send\")\nRel(emailSystem, memberPerson, \"Send email\")\nRel(emailSystem, adminPerson, \"Send email\")\nRel(myMeetingsSystem, paymentGatewaySystem, \"Delegate the payment\")\nRel(paymentGatewaySystem, myMeetingsSystem , \"Return info about payment\")\nRel(memberPerson, paymentGatewaySystem , \"Pay in\")\nLAYOUT_WITH_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["context", "system", "person", "email", "payment"],
  "description": "Ce diagramme décrit le contexte du système de gestion des réunions. Il montre les personnes impliquées et les systèmes externes utilisés.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,
{
  "prompt": "@startuml Basic Sample",
  "code": "@startuml Basic Sample\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\nPerson(admin, \"Administrator\")\nSystem_Boundary(c1, \"Sample System\") {\n    Container(web_app, \"Web Application\", \"C#, ASP.NET Core 2.1 MVC\", \"Allows users to compare multiple Twitter timelines\")\n}\nSystem(twitter, \"Twitter\")\nRel(admin, web_app, \"Uses\", \"HTTPS\")\nRel(web_app, twitter, \"Gets tweets from\", \"HTTPS\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "PlantUML", "conteneur", "système"],
  "description": "Diagramme C4 montrant un conteneur de système, une application web et les relations entre elles.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,
{
  "prompt": "Component diagram for Internet Banking System - API Application",
  "code": "@startuml\n...\n@enduml",
  "langage": "puml",
  "type": "c4_component",
  "tags": ["internet banking", "api application", "single page application", "mobile app", "database", "mainframe banking system"],
  "description": "Le diagramme décrit les composants de l'application Internet Banking, notamment le système d'API, la base de données et le système principal de banque.",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml"
}
,
{
  "prompt": "Diagramme C4 du workflow de restauration",
  "code": "@startuml Restore Flow\n!include <C4/C4_Container>\n... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["c4", "context", "diagramme de workflow"],
  "description": "Ce diagramme C4 représente le contexte de restauration d'une application Wallet.",
  "source": "https://github.com/"
}
,
{
  "prompt": "@startuml Restore Flow\n!include <C4/C4_Container>\n...\n@enduml",
  "code": "@startuml Restore Flow\n!include <C4/C4_Container>\nactor User as \"User\"\nSystem_Boundary(walletSolution, \"User's Device\") {\n    ...\n}\nSystem_Ext(Issuer, \"Issuer\")\n' ...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "contenu", "restore", "wallet"],
  "description": "Diagramme de contexte montrant le flux de restauration d'un wallet, avec les différents composants et les relations entre eux.",
  "source": "PlantUML"
}
,
{
  "prompt": "@startuml Restore Flow\n!include <C4/C4_Container>\n...\n@enduml",
  "code": "@startuml Restore Flow\n!include <C4/C4_Container>\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "context",
    "système",
    "conteneur",
    "acteur",
    "relation"
  ],
  "description": "Diagramme C4 représentant le flux de restauration d'une application",
  "source": "https://github.com/plantuml-stdlib/C4/blob/master/C4_Container.puml"
}
,
{
  "prompt": "Exporter PlantUML",
  "code": "@startuml\n!include ..\\..\\.c4s\\C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\n\nclass skinparam linetype polyline\n\ntitle Trader X Example - TraderX - Trade Feed - Receive Trade Request - C4 - Container level\n\nSystem_Boundary(TraderXExample.SoftwareSystems.TraderX, \"TraderX\") {\n    ContainerQueue(TraderXExample.SoftwareSystems.TraderX.Containers.TradeFeed, \"Trade Feed\", \"\", \"Message bus for streaming updates to trades and positions\")\n}\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "C4",
    "Container",
    "Level",
    "TraderX"
  ],
  "description": "Diagramme C4 montrant le niveau de conteneur pour Trader X, incluant le système TraderX et son conteneur Trade Feed.",
  "source": "PlantUML"
}
,
{
  "prompt": "@startuml Architecture",
  "code": "@startuml Architecture\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml\nLAYOUT_WITH_LEGEND()\nContainer(spa, \"Single Page Application\", \"javascript and react\", \"Provides all the internet banking functionality to customers via their web browser.\")\n... (tout le code PlantUML)",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": [
    "C4",
    "PlantUML",
    "Architecture",
    "Single Page Application",
    "Relational Database Schema",
    "Elasticsearch",
    "S3 Storage",
    "Redis",
    "NGINX",
    "ClickHouse",
    "Kafka/RabbitMQ"
  ],
  "description": "Ce diagramme C4 montre l'architecture globale d'une application internet bancaire. Il met en évidence les différents composants, conteneurs et relations entre eux.",
  "source": "@startuml Architecture"
}
,
{
  "prompt": "@startuml Architecture\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml",
  "code": "@startuml Architecture\n... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["architecture", "système d'information", "C4"],
  "description": "Diagramme C4 représentant l'architecture globale du système. Il montre les conteneurs, les composants et les relations entre eux.",
  "source": "https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml"
}
,
{
  "prompt": "@startuml\n!include ../../../../.c4s/C4_Context.puml\n...@enduml",
  "code": "@startuml\n!include ../../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...@enduml",
  "language": "plantuml",
  "type": "c4_context",
  "tags": [
    "c4",
    "context",
    "diagramme",
    "systeme",
    "relation",
    "evenement"
  ],
  "description": "Diagramme C4 illustrant le contexte d'un système de gestion des demandes pour une plateforme e-commerce. Il montre les services logiciels impliqués dans la génération, la vérification et le traitement des commandes.",
  "source": "https://github.com/plantuml/plantuml"
}

,
{
  "prompt": "C4 Sequence diagram for Dot Net E Shop - Basket Api",
  "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\n... (le reste du code)\n@enduml",
  "language": "plantuml",
  "type": "c4_sequence",
  "tags": [
    "c4",
    "sequence",
    "diagramme",
    "dot_net",
    "eshop",
    "basket_api"
  ],
  "description": "Diagramme de séquence pour le système Dot Net E Shop, incluant l'API panier et la gestion des données dans Redis.",
  "source": "https://example.com/uml-code"
}

,
{
  "prompt": "TO BE Diagram Sprint 7 (06.02.2023)",
  "code": "@startuml ... @enduml",
  "langage": "PlantUML",
  "type": [
    "c4_context",
    "c4_container"
  ],
  "tags": [
    "mem",
    "db",
    "new",
    "etl",
    "kafka",
    "elastic"
  ],
  "description": "Diagramme de contexte et d'architecture pour le projet TO BE, représentant les composants et les relations entre eux.",
  "source": "Code PlantUML"
}
,
{
  "prompt": "@startuml\n!include ..\\..\\..\\..\\..\\.c4s\\C4_Sequence.puml\n\ntitle E Commerce Platform - Create Product - Buying And Merchandising - Buying And Merchandising App - Update Purchase Order - C4 Sequence - Context level\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingAndMerchandisingApp, \"Buying And Merchandising App\", \"\")\nSystem(ECommercePlantForm.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Buying Service\", \"\")\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingAndMerchandisingApp, \"Update Purchase Order\")\nRel(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingAndMerchandisingApp, ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Update Purchase Order\")\n@enduml",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\.c4s\\C4_Sequence.puml\n\ntitle E Commerce Platform - Create Product - Buying And Merchandising - Buying And Merchandising App - Update Purchase Order - C4 Sequence - Context level\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingAndMerchandisingApp, \"Buying And Merchandising App\", \"\")\nSystem(ECommercePlantForm.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Buying Service\", \"\")\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingAndMerchandisingApp, \"Update Purchase Order\")\nRel(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingAndMerchandisingApp, ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Update Purchase Order\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["e-commerce", "sequence", "context"],
  "description": "Diagramme de sequence du processus d'achat et de merchandising pour une plateforme e-commerce.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,
{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\.c4s\\C4_Container.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - C4 Static - Container level\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure, \"Infrastructure\", \"\", \"\")\n}\n\nSHOW_LEGEND()\n@enduml",
  "langage": "puml",
  "type": "c4_container",
  "tags": ["catalog", "api", "infrastructure", "container"],
  "description": "Diagramme C4 montrant la structure de l'application Catalog Api à niveau de conteneur.",
  "source": ""
}
,
{
  "prompt": "@startuml\n...",
  "code": "@startuml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4_Component", "diagramme de composant"],
  "description": "Ce diagramme C4 montre un exemple de code pour créer des éléments personnalisés dans PlantUML. Il définit plusieurs styles d'éléments, notamment des conteneurs, des personnes et des composants.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,
{
  "prompt": "",
  "code": "@startuml\n' ... (le reste du code)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "C4_Component",
    "taggedContainer",
    "taggedPerson",
    "shapeRound",
    "shapeOct",
    "shadowed",
    "shadowed2",
    "yellowTagged",
    "greenTagged"
  ],
  "description": "Un diagramme C4 Component avec des exemples de styles et de tags.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,
{
  "prompt": "",
  "code": "@startuml...\n...@enduml",
  "langage": "plantuml",
  "type": "c4_component",
  "tags": [
    "Component",
    "Container",
    "Person",
    "C4-PlantUML",
    "taggedContainer",
    "taggedPerson"
  ],
  "description": "Un diagramme C4 Component avec des personnages, des conteneurs et des composants.",
  "source": ""
}
,


{
  "prompt": "System Landscape diagram for Big Bank plc",
  "code": "@startuml\n... (le code complet)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["system landscape", "big bank plc", "plantuml"],
  "description": "Ce diagramme illustre l'architecture du système de Big Bank plc, comprenant les entités clés telles que le système bancaire en ligne, les ATM, le système d'e-mail et la base de données principale.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,
{
  "prompt": "@startuml\n... (le code donné)\n@enduml",
  "code": "@startuml\n' convert it with additional command line argument -DRELATIVE_INCLUDE=\"./..\" to use locally\n!if %variable_exists(\"RELATIVE_INCLUDE\")\n  !include %get_variable_value(\"RELATIVE_INCLUDE\")/C4_Context.puml\n!else\n  !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n!endif\n\n'LAYOUT_TOP_DOWN()\n'LAYOUT_AS_SKETCH()\nLAYOUT_WITH_LEGEND()\ntitle System Landscape diagram for Big Bank plc\n\nPerson(customer, \"Personal Banking Customer\", \"A customer of the bank, with personal bank accounts.\")\n\nEnterprise_Boundary(c0, \"Big Bank plc\") {\n    System(banking_system, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\n\n    System_Ext(atm, \"ATM\", \"Allows customers to withdraw cash.\")\n    System_Ext(mail_system, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\n\n    System_Ext(mainframe, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n\n    Person_Ext(customer_service, \"Customer Service Staff\", \"Customer service staff within the bank.\")\n    Person_Ext(back_office, \"Back Office Staff\", \"Administration and support staff within the bank.\")\n}",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "diagramme",
    "C4",
    "contexte",
    "entreprise",
    "système"
  ],
  "description": "Ce diagramme de contexte C4 présente le paysage d'entreprise de la Banque Big plc. Il montre les systèmes, les applications et les services utilisés par l'entreprise.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,
{
  "prompt": "@startuml",
  "code": "Voir ci-dessus",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4-plantuml",
    "diagramme de contexte",
    "Big Bank plc"
  ],
  "description": "Diagramme du paysage système pour Big Bank plc, montrant les systèmes et leurs relations.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/"
}
,
{
  "prompt": "@startuml\n... (code entier)\n@enduml",
  "code": "@startuml\n' convert it with additional command line argument -DRELATIVE_INCLUDE=\"./..\" to use locally\n!if %variable_exists(\"RELATIVE_INCLUDE\")\n  !include %get_variable_value(\"RELATIVE_INCLUDE\")/C4_Context.puml\n!else\n  !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n!endif\n\n'LAYOUT_TOP_DOWN()\n'LAYOUT_AS_SKETCH()\nLAYOUT_WITH_LEGEND()\ntitle System Landscape diagram for Big Bank plc\n\nPerson(customer, \"Personal Banking Customer\", \"A customer of the bank, with personal bank accounts.\")\n\nEnterprise_Boundary(c0, \"Big Bank plc\") {\n    System(banking_system, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\n\n    System_Ext(atm, \"ATM\", \"Allows customers to withdraw cash.\")\n    System_Ext(mail_system, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\n\n    System_Ext(mainframe, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n\n    Person_Ext(customer_service, \"Customer Service Staff\", \"Customer service staff within the bank.\")\n    Person_Ext(back_office, \"Back Office Staff\", \"Administration and support staff within the bank.\")\n}\n\nRel_Neighbor(customer, banking_system, \"Uses\")\nRel_R(customer, atm, \"Withdraws cash using\")\nRel_Back(customer, mail_system, \"Sends e-mails to\")\n\nRel_R(customer, customer_service, \"Asks questions to\", \"Telephone\")\n\nRel_D(banking_system, mail_system, \"Sends e-mail using\")\nRel_R(atm, mainframe, \"Uses\")\nRel_R(banking_system, mainframe, \"Uses\")\nRel_D(customer_service, mainframe, \"Uses\")\nRel_U(back_office, mainframe, \"Uses\")\n\nLay_D(atm, banking_system)\n\nLay_D(atm, customer)\nLay_U(mail_system, customer)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["c4", "plantuml", "context diagram"],
  "description": "Ce diagramme représente le paysage système de la banque Big Bank plc. Il montre les systèmes, composants et personnes impliquées dans l'opération de la banque.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,
{
  "prompt": "@startuml",
  "code": "Ce code définit un diagramme C4 pour une plateforme e-commerce.",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "diagramme de conception", "plateforme e-commerce"],
  "description": "Le diagramme décrit la structure de la plateforme en mettant en évidence les différents composants et leurs relations.",
  "source": "https://github.com/plantuml/plantuml"
}
,
{
  "prompt": "Diagramme C4 pour le projet Dot Net E Shop",
  "code": "@startuml\n!include ..\\..\\..\\..\\.c4s\\C4_Container.puml\n... (toutes les lignes du code)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["c4", "container", "dotnet", "eshop"],
  "description": "Ce diagramme C4 montre l'architecture du système à niveau de conteneur pour le projet Dot Net E Shop, en mettant en avant les relations entre les composants Grpc et Data.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,
{
  "prompt": "@startuml\n!include ../../..\\.c4s/C4_Context.puml\n...\n@enduml",
  "code": "@startuml\n!include ../../..\\.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\n@enduml",
  "language": "plantuml",
  "type": "c4_context",
  "tags": [
    "c4_context_diagramme",
    "e_commerce_platform",
    "generate_demand",
    "search_and_browse"
  ],
  "description": "Diagramme de contexte pour la plateforme e-commerce, montrant les systèmes informatiques impliqués dans la génération de demande, la recherche et la navigation.",
  "source": "https://plantuml.com/"
}

,
{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.c4s\\C4_Sequence.puml\n\ntitle E Commerce Platform - Generate Demand - Search And Browse - Search Service - Api - Search Products - C4 Sequence - Context level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(ECommercePlatform.GenerateDemand.SearchAndBrowse.SoftwareSystems.SearchService, \"Search Service\", \"\")\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.GenerateDemand.SearchAndBrowse.SoftwareSystems.SearchService, \"Search Products\")\n@enduml",
  "langage": "",
  "type": "c4_context",
  "tags": ["C4", "sequence", "context", "search", "service", "api"],
  "description": "Diagramme C4 de niveau contexte pour l'E-commerce Platform, représentant la génération de demande, la recherche et la navigation, ainsi que le service de recherche et l'API de recherche de produits.",
  "source": ""
}
,{
  "prompt": "",
  "code": "@startuml\n!include ./c4-plantuml/C4_Context.puml\n!include ./c4-plantuml//C4_Container.puml\n!include ./c4-plantuml//C4_Component.puml\nLAYOUT_WITH_LEGEND()\n' 容器图\nSystem_Boundary(web_app_boundary, \"Web应用\") {\n    Container(web_app, \"Web应用\", \"Next.js\", \"提供用户界面\")\n    Container(components, \"组件库\", \"React\", \"可复用的UI组件\")\n    Container(api_client, \"API客户端\", \"Axios\", \"与后端通信\")\n}\nSystem_Boundary(api_boundary, \"API服务\") {\n    Container(api, \"API服务\", \"Express.js\", \"处理业务逻辑\")\n    Container(routes, \"路由层\", \"Express Router\", \"处理HTTP请求\")\n    Container(controllers, \"控制器\", \"TypeScript\", \"处理业务逻辑\")\n    Container(models, \"数据模型\", \"Mongoose\", \"数据持久化\")\n}\nSystem_Boundary(external_boundary, \"外部服务\") {\n    ContainerDb(db, \"MongoDB\", \"数据库\", \"存储系统数据\")\n    System_Ext(payment_gateway, \"支付网关\", \"处理支付\")\n}\nRel(web_app, components, \"使用\", \"TypeScript\")\nRel(web_app, api_client, \"使用\", \"TypeScript\")\nRel(api_client, api, \"调用\", \"HTTPS\")\nRel(api, routes, \"路由\", \"TypeScript\")\nRel(routes, controllers, \"调用\", \"TypeScript\")\nRel(controllers, models, \"调用\", \"TypeScript\")\nRel(models, db, \"读写\", \"MongoDB\")\nRel(controllers, payment_gateway, \"调用\", \"HTTPS\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["C4", "context", "container", "component"],
  "description": "Le diagramme décrit le contexte d'une application web et ses relations avec les services externes.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,{
  "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Catalog Brands First Or Default Async - C4 Sequence - Component level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container_Boundary(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure, \"Infrastructure\") {\n        Component(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure.Components.CatalogContext, \"Catalog Context\", \"\", \"\")\n    }\n}\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure.Components.CatalogContext, \"Catalog Brands First Or Default Async\")\n\n@enduml",
  "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Catalog Brands First Or Default Async - C4 Sequence - Component level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container_Boundary(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure, \"Infrastructure\") {\n        Component(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure.Components.CatalogContext, \"Catalog Context\", \"\", \"\")\n    }\n}\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure.Components.CatalogContext, \"Catalog Brands First Or Default Async\")\n\n@enduml",
  "language": "plantuml",
  "type": "c4_sequence",
  "tags": [
    "plantuml",
    "c4_sequence",
    "catalog_api",
    "infrastructure",
    "async"
  ],
  "description": "Diagramme de séquence C4 de l'API Catalogue du magasin Dot Net E Shop, montrant les interactions avec le contexte de catalogue.",
  "source": "https://example.com/diagramme-c4-sequence"
}

,{
  "prompt": "@startuml repository-service-tuf-cli-C3",
  "code": "voir ci-dessus",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "repository",
    "service",
    "tuf",
    "cli",
    "admin",
    "user"
  ],
  "description": "Diagramme C4 représentant la structure du repository service pour TUF CLI, comprenant des conteneurs, des relations et des tags.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/blob/master/C4_Component.puml"
}
,
{
  "prompt": "@startuml\ntitle To Do App Example - To Do App - Web App - Delete Task - C4 Sequence - Container level\n...@enduml",
  "code": "@startuml\ntitle To Do App Example - To Do App - Web App - Delete Task - C4 Sequence - Container level\n!include ..\\..\\..\\..\\....\\.c4s\\C4_Sequence.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_sequence",
  "tags": [
    "sequence",
    "container",
    "web_app",
    "delete_task"
  ],
  "description": "Diagramme C4 Sequence montrant la suppression d'une tâche dans l'application To Do",
  "source": "https://example.com/to-do-app-c4-sequence.puml"
}
,
{
    "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\n... (le reste du code)\n@enduml",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Catalog Items Remove - C4 Sequence - Context level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\", \"\")\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Items Remove\")\n\n@enduml",
    "language": "plantuml",
    "type": "c4_context",
    "tags": ["c4", "sequence", "context"],
    "description": "Diagramme de contexte pour la suppression d'articles dans l'API de catalogue Dot Net E Shop.",
    "source": ""
  },
  {
    "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle E Commerce Platform - Generate Demand - Order Management - Order Service - Api - Create Order - C4 Static - Context level\n\nSystem(ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, \"Order Service\", \"\")\nSHOW_LEGEND()\n@enduml",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle E Commerce Platform - Generate Demand - Order Management - Order Service - Api - Create Order - C4 Static - Context level\n\nSystem(ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, \"Order Service\", \"\")\nSHOW_LEGEND()\n@enduml",
    "language": "plantuml",
    "type": "c4_context",
    "tags": ["c4", "context", "diagramme", "ecommerce", "order_management"],
    "description": "Diagramme C4 contextuel représentant la plateforme e-commerce et le service d'ordre.",
    "source": "Ceci est un diagramme C4 contextuel créé avec PlantUML."
  },
  {
    "prompt": "C4 Static - Component level",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\n@enduml",
    "language": "plantuml",
    "type": "c4_component",
    "tags": ["c4_static", "component_level", "catalog_api", "infrastructure"],
    "description": "Diagramme C4 montrant la structure de composants du Catalog Api.",
    "source": "https://example.com"
  },
  {
    "prompt": "C4 diagramme pour l'API de catalogue",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Component.puml\n... (le reste du code)",
    "language": "plantuml",
    "type": "c4_component",
    "tags": ["c4", "diagramme_de_composition", "catalogue", "api"],
    "description": "Diagramme représentant la structure et les relations entre les composants de l'API de catalogue, montrant l'utilisation du contexte de catalogue.",
    "source": "https://example.com/c4-diagramme"
  },
  {
    "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Component.puml",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\n@enduml",
    "language": "plantuml",
    "type": "c4_context",
    "tags": ["c4", "component_level", "context"],
    "description": "Diagramme C4 montrant le contexte de catalogue pour l'API de catalogue d'un e-shop Dot Net.",
    "source": ""
  }
,
{
  "prompt": "",
  "code": "!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4.puml\n!include C4.puml\n... (le reste du code)",
  "langage": "puml",
  "type": "c4_context",
  "tags": ["C4", "plantuml", "context", "diagramme"],
  "description": "Définition des éléments graphiques pour le diagramme C4",
  "source": "https://github.com/RicardoNiepel/C4-PlantUML"
}
,
{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\")\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\")\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\")\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\")\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "PlantUML", "Context Diagram", "Database", "API Application"],
  "description": "Le diagramme décrit le contexte de l'application Internet Banking. Il montre la relation entre les différents composants, tels que la base de données, l'application web et la API.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml"
}
,{
  "prompt": "@startuml",
  "code": "@startuml ... @enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["c4", "container", "uml"],
  "description": "Diagramme C4 montrant l'architecture d'un système de gestion de tâches à différents niveaux, du niveau du conteneur.",
  "source": "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/refs/heads/main/icons"
}
,{
  "prompt": "C4_Component_Diagram",
  "code": "@startuml C4_Component_Diagram\n!define C4P https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master\n!define C4_Component C4P/C4_Component.puml\n!include C4_Component\nLAYOUT_TOP_DOWN()\n... (tous les éléments du code)",
  "langage": "puml",
  "type": "c4_component",
  "tags": [
    "C4",
    "Component Diagram",
    "Architecture"
  ],
  "description": "Ce diagramme C4 montre la structure et les relations entre les composants d'une application, notamment les composants externes (email system, payment gateway, analytics service), le conteneur de l'application web, le conteneur de l'application mobile et le conteneur de l'API.",
  "source": "@startuml C4_Component_Diagram\n!define C4P https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master\n!define C4_Component C4P/C4_Component.puml\n!include C4_Component\nLAYOUT_TOP_DOWN()\n... (tous les éléments du code)"
}
,{
  "prompt": "Deployment Diagram for Internet Banking System - Live",
  "code": "@startuml\n... (le code entier)\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "deployment",
    "internet banking",
    "system",
    "live"
  ],
  "description": "Ce diagramme C4 illustre la déployment d'un système Internet Banking qui comprend des nœuds de déploiement, des conteneurs et des liaisons entre eux.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml"
}
,
  {
    "prompt": "@startuml build enterprise context view from json using c4 helper",
    "code": "@startuml build enterprise context view from json using c4 helper\n!include ../C4_helper.iuml\n'!include https://raw.githubusercontent.com/gobravedave/C4-Plantuml-Helper/more/C4_helper.iuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n'!include https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/C4/C4_Container.puml\n'!include https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/C4/C4_Component.puml\n'!include https://raw.githubusercontent.com/gobravedave/C4-Plantuml-Helper/more/C4_helper.iuml\n'Set Diagram settings\n%set_variable_value(\"$C4_DIAGRAM_TYPE\", \"Context\")\n'%set_variable_value(\"$C4_DIAGRAM_TYPE\", \"Container\")\n'%set_variable_value(\"$C4_DIAGRAM_TYPE\", \"Component\")\n%set_variable_value(\"$INCLUDE_DESC\", \"Y\")\n'======================================================================\n'Call procedure to build the diagram\n$c4_diagram(enterprise)\n'System(fulfillment, \\\"Fulfillment System\\\", \\\"Responsible for processing and shipping of customer orders.\\\",$tags=\\\"v1.1\\\")\nAddElementTag(\"v1.1\", $fontColor=\\\"black\\\", $bgColor=\\\"gold\\\")\nAddRelTag(\"V1.1\", $textColor=\\\"black\\\", $lineColor=\\\"gold\\\")\nSystem(csaa,\\\"CSA Assist\\\",\\\"Customer Service Desktop used to record queries and recommend solution approach\\\",$tags=\\\"v1.1\\\") \nRel_L(csa,csaa,\\\"looks up\\\",$tags=\\\"v1.1\\\")\n'show V1.1 in legend\n\n'hide braintree\nSHOW_LEGEND()\n@enduml",
    "langage": "PlantUML",
    "type": "c4_context",
    "tags": ["c4", "plantuml", "context"],
    "description": "Diagramme de contexte pour l'entreprise, avec des éléments tels que le système de traitement et d'expédition des commandes et la plateforme de service à la clientèle.",
    "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
  },
  {
    "prompt": "@startuml build enterprise contsiner view from json using c4 helper",
    "code": "@startuml build enterprise contsiner view from json using c4 helper\n!include ../C4_helper.iuml\n!include https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/C4/C4_Container.puml\n'Set Diagram settings\n%set_variable_value(\"$C4_DIAGRAM_TYPE\", \"Container\")\n%set_variable_value(\"$INCLUDE_DESC\", \"Y\")\n'======================================================================\n'Call procedure to build the diagram\n$c4_diagram(enterprise)\nSHOW_LEGEND()\n@enduml",
    "langage": "PlantUML",
    "type": "c4_container",
    "tags": ["c4", "plantuml", "container"],
    "description": "Diagramme de conteneur pour l'entreprise, avec des éléments tels que les systèmes et applications.",
    "source": ""
  },
  {
    "prompt": "@startuml build c4 helper context view from json using c4 helper",
    "code": "@startuml build c4 helper context view from json using c4 helper\n!include ../C4_helper.iuml\n'!include https://raw.githubusercontent.com/gobravedave/C4-Plantuml-Helper/more/C4_helper.iuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n'!include https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/C4/C4_Container.puml\n'!include https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/C4/C4_Component.puml\n'!include https://raw.githubusercontent.com/gobravedave/C4-Plantuml-Helper/more/C4_helper.iuml\n'Set Diagram settings\n%set_variable_value(\"$C4_DIAGRAM_TYPE\", \"Context\")\n'%set_variable_value(\"$C4_DIAGRAM_TYPE\", \"Container\")\n'%set_variable_value(\"$C4_DIAGRAM_TYPE\", \"Component\")\n%set_variable_value(\"$INCLUDE_DESC\", \"Y\")\n'======================================================================\n'Call procedure to build the diagram\n$c4_diagram(c4helper)\nSHOW_LEGEND()\n@enduml",
    "langage": "PlantUML",
    "type": "c4_context",
    "tags": ["c4", "plantuml", "context"],
    "description": "Diagramme de contexte pour le helper C4, avec des éléments tels que les systèmes et applications.",
    "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
  }

,{
  "prompt": "@startuml\n!include <C4/C4_Component>\n!include <office/Servers/database_server>\nLAYOUT_TOP_DOWN()\n...\nSHOW_LEGEND()\n@enduml",
  "code": "@startuml\n!include <C4/C4_Component>\n!include <office/Servers/database_server>\nLAYOUT_TOP_DOWN()\n...\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "Database",
    "Installation Media",
    "Tool",
    "Ansible",
    "Virtual Studio Code",
    "ConEmu",
    "ssh-agent",
    "ssh",
    "Vagrant",
    "git",
    "Oracle RDBMS"
  ],
  "description": "Le diagramme décrit l'environnement d'exécution d'une application, comprenant des conteneurs, des systèmes et des relations entre eux.",
  "source": "Code PlantUML fourni"
}
,
{
  "prompt": "Container Diagram",
  "code": "@startuml Container Diagram\n!include <C4/C4_Container>\n\nPerson(user, \"User\", \"Logs into the platform and requests Etsy data.\")\nSystem_Boundary(etsyScraperApp, \"Etsy Scraper Application\") {\n    Container(webFrontend, \"Web Frontend\", \"Static HTML\", \"Provides UI for users to interact with the application.\")\n    Container(apiServer, \"API Server\", \"Golang/Gin Web Framework\", \"Handles user requests, scheduling, and processing tasks.\")\n    Container(scraperEngine, \"Scraper Engine\", \"Golang/go-colly\", \"Performs scraping tasks and data extraction from Etsy.\")\n    Container(database, \"Database\", \"PostgreSQL\", \"Stores user data, task schedules, and scraped data.\")\n}\n\nSystem_Ext(etsy, \"Etsy.com\", \"The target website for scraping.\")\n\nleft to right direction\n\nRel(user, webFrontend, \"Accesses the platform\\nvia browser\")\nRel(webFrontend, apiServer, \"Sends API requests\\nfor authentication\\nand scraping tasks\")\nRel(apiServer, scraperEngine, \"Schedules scraping tasks\")\nRel(scraperEngine, etsy, \"Sends HTTP requests\\nfor product/shop data\")\nRel(etsy, scraperEngine, \"Returns HTML/json responses\")\nRel(scraperEngine, database, \"Saves extracted data\")\nRel(database, apiServer, \"Stores and retrieves\\ndata for users\")\nRel(apiServer, webFrontend, \"Returns data to\\nfrontend for display\")\n\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4",
    "container_diagram",
    "etsy_scraper_application",
    "web_frontend",
    "api_server",
    "scraper_engine",
    "database"
  ],
  "description": "Diagramme représentant l'application Etsy Scraper avec ses composants et leurs interactions.",
  "source": "https://plantuml.com/"
}

,{
  "prompt": "",
  "code": "@startuml\n!include <C4/C4_Container>\nSystem(OS, \"Operating System\", \"Host operating system\")\nSystem_Boundary(c1,\"Server\"{\nSystem_Boundary(c2,\"Host Console application\"{\nContainer(host,\"SystemMonitor.Host\",\"C# .Net\",\"Host Console application\")\n}\nContainer(core,\"SystemMonitor.Core\",\"C# .Net\",\"\")\nContainer(logger, \"SystemMonitorLoggerPlugin\",\"C# .Net\",\"Plugin which can extend the functionality of the host\")\nContainer(plugin1,\"Plugin1\",\"C# .Net\",\"Plugin\")\nContainer(plugin2,\"Plugin 2\",\"C# .Net\",\"Plugin\")\nContainer(plugin3,\"plugin 3\",\"C# .Net\",\"Plugin\")\n}\nRel(OS, host, \"Feeds Data\", \"Interaction\")\nRel(host,core,\"Use Core Library\",\"Uses\")\nRel(logger,core,\"Use Core Classes (IMonitor)\",\"Uses\")\n\nRel(plugin1,core,\"Run Actions based on Plugin\")\nRel(plugin2,core,\"Run Actions based int Plugin\")\nRel(plugin3,core,\"Run Actions based int Plugin\")\n\nRel(host, logger,\"Plugin 1\")\nRel(host, plugin1,\"Plugin 2\")\nRel(host, plugin2,\"plugin 3\")\nRel(host, plugin3,\"plugin 4\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "container", "system_monitor", "host_console_application"],
  "description": "Diagramme C4 représentant l'architecture du système SystemMonitor. Le diagramme montre les relations entre les différents composants, notamment les conteneurs host et core.",
  "source": ""
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n... (le reste du code)\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nAddRelTag(\"async\", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DashedLine())\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "C4_Context",
    "Boundary",
    "System",
    "System_Ext",
    "Rel",
    "Rel_Back",
    "Rel_Neighbor"
  ],
  "description": "Diagramme de contexte C4 montrant les composants et relations d'un système d'agendement et de consultation médicales en ligne.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
  "prompt": "CloudSeekeur Level 2",
  "code": "@startuml CloudSeeker_Level_2\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml...\n@enduml",
  "langage": "C4 PlantUML",
  "type": "c4_context",
  "tags": ["cloud", "pricing", "calculator", "angularjs", "nodejs", "mongodb", "firebase"],
  "description": "Le diagramme montre le contexte du calculateur de prix cloud. Il inclut les utilisateurs, les systèmes externes et les composants du calculateur de prix.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
  "langage": "puml",
  "type": "c4_context",
  "tags": [
    "C4_Context",
    "Architecture_système",
    "Conteneur",
    "API_Gateway",
    "Authentification"
  ],
  "description": "Ce diagramme C4 représente l'architecture d'un système de bureau numérique, comprenant des conteneurs tels que la plateforme web, l'API Gateway et les services de document et de projet.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/blob/master/C4_Container.puml"
}
,{
  "prompt": "@startuml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "diagramme", "conteneur", "système", "microservices"],
  "description": "Diagramme de conteneur pour l'Interview Management System, montrant les différentes composantes et leurs relations.",
  "source": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n..."
}
,{
  "prompt": "@startuml\n!define C4P https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master\n!includeurl C4P/C4_Context.puml\nPerson(user, \"Utilisateur\", \"Utilise l'application pour gérer ses enregistrements et données financières\")\nSystem_Boundary(s1, \"MousstassWeb\") {\n  System(webapp, \"MousstassWeb\", \"Application web de gestion d'enregistrements audio et de données financières\")\n}\nRel(user, webapp, \"Utilise via navigateur\")\n@enduml",
  "code": "@startuml\n!define C4P https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master\n!includeurl C4P/C4_Context.puml\nPerson(user, \"Utilisateur\", \"Utilise l'application pour gérer ses enregistrements et données financières\")\nSystem_Boundary(s1, \"MousstassWeb\") {\n  System(webapp, \"MousstassWeb\", \"Application web de gestion d'enregistrements audio et de données financières\")\n}\nRel(user, webapp, \"Utilise via navigateur\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "context", "diagramme", "plantuml"],
  "description": "Diagramme de contexte représentant l'application web MousstassWeb et son utilisation par un utilisateur.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master"
}
,{
  "prompt": "title SmartHome Context Diagram",
  "code": "@startuml\ntitle SmartHome Context Diagram\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "SmartHome",
    "ContextDiagram",
    "C4"
  ],
  "description": "Le diagramme décrit le contexte du système SmartHome, avec ses composants et leurs relations.",
  "source": "@startuml\ntitle SmartHome Context Diagram\n...\n@enduml"
}

,{
  "prompt": "",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/skleanthous/C4-PlantumlSkin/master/build/output/c4.puml...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "system context diagram",
    "propulsion",
    "equinox",
    "applications",
    "services",
    "database",
    "caches",
    "ingesters",
    "reactors",
    "publishers"
  ],
  "description": "Diagramme de contexte du système Propulsion (+Equinox) montrant l'organisation haute niveau des Ingesteurs de Propulsion, des Réacteurs et des Editeurs.",
  "source": "https://raw.githubusercontent.com/skleanthous/C4-PlantumlSkin/master/build/output/c4.puml"
}
,{
  "prompt": "@startuml Diagrama de Contexto: Site de Músicas\n... @enduml",
  "code": "@startuml Diagrama de Contexto: Site de Músicas\n...\n!include <C4/C4_Container>\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["context", "site", "musiques", "user"],
  "description": "Le diagramme décrit le contexte d'un site de musique où les utilisateurs peuvent accéder et utiliser la plateforme.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "Définition d'un diagramme C4 contextuel",
  "code": "@startuml\n!include  C4_Context.puml\n!include  C4_Container.puml\n!include  C4_Component.puml\n!include constants.puml\n!procedure LAYOUT_WITH_LEGEND()\nhide stereotype\nlegend right\n|<color:$LEGEND_TITLE_COLOR>**Legend**</color> |\n|<$SYSTEM_BG_COLOR> system \n|<$PERSON_BG_COLOR> person \n|<$EXTERNAL_SYSTEM_BG_COLOR> external system \nendlegend\n!endprocedure\nLAYOUT_WITH_LEGEND()\ntitle rvprio\nPerson(User, $UserLabel, $UserDesc)\nSystem_Ext(Mop, $MopLabel, $MopDesc)\nSystem(Rvprio, $RvprioLabel, $RvprioDesc)\nRel(User, Rvprio, $UserToRvprio, $UserToRvprioTech)\nRel(Rvprio, Mop, $RvprioToMop, $RvprioToMopTech)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "contextuel", "diagramme"],
  "description": "Diagramme C4 contextuel représentant les relations entre les utilisateurs, le système Rvprio et l'extérieur (Mop).",
  "source": "PlantUML"
}
,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n... (le reste du code)",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["C4", "PlantUML", "context diagram", "system boundary", "container boundary"],
  "description": "Ce diagramme C4 représente le contexte d'une application Android, avec des conteneurs pour la logique métier et le framework Android.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
  "prompt": "C4_Elements",
  "code": "@startuml C4_Elements\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml ...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["C4", "Context Diagramme"],
  "description": "Le diagramme C4 montre les éléments du système d'entreprise SinNet Reports, y compris les systèmes, les conteneurs et les relations entre eux.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "C4_Websocket_Communication",
  "code": "@startuml C4_Websocket_Communication... @enduml",
  "langage": "PlantUML",
  "type": ["c4_context", "c4_container"],
  "tags": [
    "websocket",
    "communication",
    "frontend",
    "backend",
    "rust",
    "wasm"
  ],
  "description": [
    "Le diagramme représente la communication entre le client et le serveur via des websockets.",
    "Il montre les composants et les relations entre eux."
  ],
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "@startuml PPS Application Integration Landscape",
  "code": "@startuml PPS Application Integration Landscape\n...",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "application_integration",
    "landscape",
    "c4",
    "context"
  ],
  "description": "Diagramme de l'environnement d'intégration des applications PPS Mutual, montrant les différents systèmes et les relations entre eux.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
  "prompt": "@startuml music-store-phase-3.puml",
  "code": "@startuml music-store-phase-3.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nHIDE_STEREOTYPE()\n... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "PlantUML", "Component"],
  "description": "Diagramme C4 montrant les composants d'un magasin de musique, notamment un guitariste, un amplificateur et des effets.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "Big Bank Plc - Internet Banking - C4 Static - Context level",
  "code": "@startuml\n!include ../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n... (le reste du code) ... \nSHOW_LEGEND()\n@enduml",
  "language": "plantuml",
  "type": "c4_context",
  "tags": ["c4", "context", "diagramme", "internet_banking", "banque"],
  "description": "Diagramme de contexte C4 du système d'Internet Banking de Big Bank Plc, montrant les relations entre les différents composants.",
  "source": "https://example.com/source"
}

,{
  "prompt": "C4 plantuml",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml\n!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/release/2-1/dist\n!includeurl AzurePuml/AzureCommon.puml\n!includeurl AzurePuml/AzureC4Integration.puml\n!includeurl AzurePuml/Databases/AzureRedisCache.puml\n!includeurl AzurePuml/Databases/AzureCosmosDb.puml\n....\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "PlantUML", "Azure"],
  "description": "Diagramme de contexte C4 intégrant Azure, utilisant des inclureurl pour charger les modèles graphiques",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/"
}
,
  {
    "prompt": "@startuml\n' configures the library\n!global $INCLUSION_MODE=\"local\"\n!global $LIB_BASE_LOCATION=..\n\n' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n' loads the package bootstrap\n!include 'c4model/bootstrap'\n\n' loads the Item which embeds the element Database\n!include 'c4model/Element/Database'\nDatabase('Database', 'Database', 'an optional description label', 'an optional tech label')\n@enduml",
    "code": "@startuml\n' configures the library\n!global $INCLUSION_MODE=\"local\"\n!global $LIB_BASE_LOCATION=..\n\n' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n' loads the package bootstrap\n!include 'c4model/bootstrap'\n\n' loads the Item which embeds the element Database\n!include 'c4model/Element/Database'\nDatabase('Database', 'Database', 'an optional description label', 'an optional tech label')\n@enduml",
    "language": "plantuml",
    "type": "c4_component",
    "tags": ["c4", "component", "database"],
    "description": "Diagramme C4 représentant un composant Database avec une description et une technologie associées.",
    "source": "https://example.com/plantuml"
  },
  {
    "prompt": "@startuml\nDiagramme de déploiement de l'application Devance\n@enduml",
    "code": "@startuml\n...@enduml",
    "language": "plantuml",
    "type": "c4_context",
    "tags": ["fallback", "storage"],
    "description": "Diagramme de déploiement de l'application Devance, incluant les nœuds de déploiement et leurs propriétés.",
    "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml"
  }


,
{
  "prompt": "@startuml dm-c4-context",
  "code": "@startuml dm-c4-context ...\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "Data Marketplace",
    "CDDO",
    "Enterprise Boundary",
    "System",
    "Person",
    "Boundary"
  ],
  "description": "Ce diagramme C4 montre le contexte du Data Marketplace, y compris les entreprises et les systèmes impliqués. Il illustre la structure de données et les relations entre elles.",
  "source": "@startuml dm-c4-context ...\n...\n@enduml"
}
,{
  "prompt": "@startuml 1/wallet-attestation-references-presentation\n... @enduml",
  "code": "@startuml 1/wallet-attestation-references-presentation\ntitle Wallet and WSCDs references in attestations - presentation\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "attribution",
    "présentation",
    "WCSD"
  ],
  "description": "Ce diagramme décrit la présentation d'une attestation, qui comprend des claims, une signature et des discours.",
  "source": "https://github.com/plantuml/plantuml-stdlib"
}
,{
  "prompt": "Component view for the Online Shop Modulith example",
  "code": "@startuml component-view\n!include ...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "component", "view", "online shop", "modulith"],
  "description": "Ce diagramme représente la vue composante de l'architecture du magasin en ligne, montrant les différents composants et leurs relations.",
  "source": "https://github.com/plantuml-stdlib/C4"
}
,{
  "prompt": "@startuml\n!include ..\\.c4s\\C4_Component.puml\n... (code entier)",
  "code": "@startuml\n!include ..\\.c4s\\C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n... (code entier) @enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "C4", 
    "component", 
    "diagramme", 
    "uml", 
    "plantuml"
  ],
  "description": "Ce diagramme C4 montre la structure de composants d'une application e-commerce, avec les relations entre les différents éléments.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/"
}
,{
  "prompt": "@startuml XerbutriContext",
  "code": "@startuml XerbutriContext\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nLAYOUT_WITH_LEGEND()\ntitle 1. System Context diagram for Xerbutri\nPerson(visitor, \"Visitor\", \"Visiting the website\")\nSystem(xerbutri, \"Xerbutri\", \"The xerbutri website\")\nSystem_Ext(cms, \"TX CMS\", \"Local TX CMS app\")\nRel(visitor, xerbutri, \"visits website\")\nRel(cms, xerbutri, \"add and maintain content\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["system context", "xerbutri", "website"],
  "description": "Diagramme de contexte système pour Xerbutri. Affiche les relations entre le visiteur, le site web Xerbutri et la CMS local.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
  "prompt": "@startuml Basic Sample\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml\n...@enduml",
  "code": "@startuml Basic Sample\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml\nPerson(admin, \"Administrator\")\nSystem_Boundary(c1, \"Sample System\") {\n    Container(web_app, \"Web Application\", \"C#, ASP.NET Core 2.1 MVC\", \"Allows users to compare multiple Twitter timelines\")\n}\nSystem(twitter, \"Twitter\")\nRel(admin, web_app, \"Uses\", \"HTTPS\")\nRel(web_app, twitter, \"Gets tweets from\", \"HTTPS\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["c4", "plantuml", "uml", "system_boundary", "container"],
  "description": "Ce diagramme représente le système d'application Web qui permet aux utilisateurs de comparer plusieurs timelines Twitter. Il montre également les relations entre l'utilisateur, le système et Twitter.",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml"
}
,{
  "prompt": "@startuml E_Commerce_Platform_Product_Service",
  "code": "@startuml E_Commerce_Platform_Product_Service\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle E-Commerce Platform - Product Service (Container Level)\n\nSystem_Boundary(ECommercePlatform_ProductService, \"Product Service\") {\n    ContainerQueue(Messaging, \"Messaging\", \"RabbitMQ/Kafka\", \"Handles product-related events and messages\")\n}\n\nSHOW_LEGEND()\n@enduml",
  "language": "PlantUML",
  "type": "c4_container",
  "tags": ["c4", "container", "uml", "system boundary", "queue", "ecommerce"],
  "description": "Diagramme C4 Container de la plateforme e-commerce, focalisé sur le Product Service et son composant de messagerie.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}

,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n...\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n'\n'LAYOUT_TOP_DOWN()\n'LAYOUT_AS_SKETCH()\nLAYOUT_WITH_LEGEND()\ntitle System Landscape diagram for Big Bank plc\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "C4",
    "PlantUML",
    "Context Diagram",
    "Big Bank plc"
  ],
  "description": "Le diagramme représente le paysage système de Big Bank plc, montrant les systèmes et personnes impliquées dans la fourniture des services bancaires.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
  "prompt": "",
  "code": "@startuml...@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["ontopuml", "iof.iuml"],
  "description": "Diagramme de contexte utilisant la notation C4 et l'extension OntoPuml.",
  "source": ""
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/kirchsth/C4-PlantUML/extended/C4_Container.puml\n... (restes du code)",
  "code": "@startuml\n!include https://raw.githubusercontent.com/kirchsth/C4-PlantUML/extended/C4_Container.puml\nLAYOUT_LANDSCAPE()\ntitle Container Diagram For Cinema Backend System\nAddElementTag(\"container (frontend)\", $bgColor=\"#888888\", $borderColor=\"#7c7c7c\", $fontColor=\"#ffffff\")\n... (restes du code)",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "container", "diagramme"],
  "description": "Le diagramme C4 montre les containers et leurs relations dans le système de backend du cinéma. Il décrit les conteneurs tels que l'application cliente, la base de données des films, le service ETL, le service d'API async, etc.",
  "source": "https://raw.githubusercontent.com/kirchsth/C4-PlantUML/extended/C4_Container.puml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\...\\.c4s\\C4_Sequence.puml\n\ntitle Big Bank Plc - Internet Banking - Single-Page App - Sign In - C4 Sequence - Container level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\n\nSystem_Boundary(BigBankPlc.SoftwareSystems.InternetBanking, \"Internet Banking\")\n    Container(BigBankPlc.SoftwareSystems.InternetBanking.Containers.SinglePageApp, \"Single-Page App\", \"\", \"\")\n    Container(BigBankPlc.SoftwareSystems.InternetBanking.Containers.APIApplication, \"API Application\", \"\", \"\")\n    ContainerDb(BigBankPlc.SoftwareSystems.InternetBanking.Containers.Database, \"Database\", \"\", \"\")\nBoundary_End()\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, BigBankPlc.SoftwareSystems.InternetBanking.Containers.SinglePageApp, \"Sign In\")\nRel(BigBankPlc.SoftwareSystems.InternetBanking.Containers.SinglePageApp, BigBankPlc.SoftwareSystems.InternetBanking.Containers.APIApplication, \"Sign In\")\nRel(BigBankPlc.SoftwareSystems.InternetBanking.Containers.APIApplication, BigBankPlc.SoftwareSystems.InternetBanking.Containers.Database, \"Authenticate User\")\n\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["c4", "sequence", "container", "internet banking", "single-page app"],
  "description": "Le diagramme décrit la séquence de signe d'un utilisateur pour l'application internet banking du Big Bank Plc, à partir du point de vue du conteneur.",
  "source": ""
}
,{
  "prompt": "System Context Diagram for Bookish List System",
  "code": "@startuml\n!include <c4/C4_Context.puml>\n'ref http://plantuml.com/stdlib\n!include <office/Users/user.puml>\n!include <office/Users/mobile_user.puml>\nscale max 1100 width\ntitle System Context Diagram for Bookish List System\nPerson(user  , User , \"<$user> <$mobile_user>\\n A user of the Bookish List\" )\nSystem(bookish_list_system, \"Bookish List\", \"Allows users to interact with their bookish list.\")\nSystem_Ext(google_books, \"Google Books\", \"Google Books API for looking up books.\")\nRel(user, bookish_list_system, \"Search Books, add to list, review books, update status, add comments\")\nRel_Neighbor(bookish_list_system, google_books, \"Looks up books, retrieves metadata and gets covers\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["system", "context", "diagram", "bookish list"],
  "description": "Ce diagramme représente le contexte du système Bookish List, y compris les utilisateurs et les systèmes externes avec lesquels il interagit.",
  "source": "https://plantuml.com/"
}
,{
  "prompt": "@startuml SportRadar\n!include <C4/C4_Container>\nSystem_Ext(LiveSportEvents, \"Live Sport Events\", $link=\"./container/index.puml\")\n@enduml",
  "code": "@startuml SportRadar\n!include <C4/C4_Container>\nSystem_Ext(LiveSportEvents, \"Live Sport Events\", $link=\"./container/index.puml\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["diagramme c4", "conteneur"],
  "description": "Diagramme C4 représentant le conteneur Live Sport Events.",
  "source": "./container/index.puml"
}
,{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle verify API\\n[NodeJs User API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"verify API\\n[Component]\"{\n...",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle verify API\\n[NodeJs User API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"verify API\\n[Component]\"{\n...",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "component", "API", "NodeJs"],
  "description": "Le diagramme montre l'architecture d'une API de vérification avec des composants NodeJs.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml LAYOUT_WITH_LEGEND() ... @enduml",
  "code": "@startuml !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml LAYOUT_WITH_LEGEND() ... @enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "diagramme", "component"],
  "description": "Diagramme C4 montrant le composant \"harcinasLeadBoard API\" et ses interactions avec l'application Adiraku.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "PlantUML",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\...\\.c4s\\C4_Container.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["PlantUML", "C4", "Container"],
  "description": "Diagramme C4 montrant la structure d'un système de gestion des informations sur les produits pour une plateforme e-commerce.",
  "source": "https://github.com/plantuml/plantuml"
}
,{
  "prompt": "Diagramme C4",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\n!include ./c4_styles.puml\ncenter header\n\t<font size=30 color=black>Under construction...  </font>\nend header\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "diagramme"],
  "description": "Diagramme C4 montrant l'architecture d'une application en construction",
  "source": "https://plantuml.com/fr/c4n"
}
,{
  "prompt": "@startuml data-management-privacy-architecture",
  "code": "@startuml data-management-privacy-architecture\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\n...\nSHOW_LEGEND()\n@enduml",
  "langage": "C4 PlantUML",
  "type": ["c4_context", "c4_container"],
  "tags": ["data-management", "privacy", "architecture", "c4-plantuml", "kotlin", "compose"],
  "description": "Diagramme de l'architecture de la gestion des données et de la confidentialité pour l'application LemonQwest.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml \"Foodscapes contexts\"",
  "code": "@include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nPerson(user, \"Users of the application\", \"\", person)\nBoundary(app, \"Foodscapes application\", \"Web application and associated backend services\")\nPerson(sci_eng_teams, \"Science and engineering teams\", \"\", person)\nBoundary(devops, \"DevOps infrastructure\", \"Supporting services for development and deployment\")\nRel_R(user, app, \"\", \"Users explore Foodscapes maps, data and case studies through the web application\")\nRel_U(sci_eng_teams, devops, \"\", \"Science and engineering teams push Foodscapes feature and data updates to the DevOps infrastructure\")\nRel(devops, app, \"\", \"Updates to the application are deployed through the supporting DevOps infrastructure\")\nRel(sci_eng_teams, app, \"\", \"Science and engineering teams oversee the running application\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "context", "diagramme", "Foodscapes"],
  "description": "Le diagramme décrit les contextes de l'application Foodscapes, en mettant en avant les utilisateurs, l'infrastructure DevOps et les équipes de science et d'ingénierie.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,{
  "prompt": "https://medium.com/@robertdennyson/creating-c4-and-uml-diagrams-using-plantuml-with-vscode-extension-90032a21ec43",
  "code": "@startuml C4_Elements\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\nclass Ferramenta{\n    -String : nome\n    --\n    +void usar()\n}\nclass Objeto{\n    -String nome\n    -String descricaoAntesAcao\n    -String descricaoDepoisAcao\n    -Boolean acaoOk\n    --\n    +String descricao()\n    +void usar()\n}\nclass Sala{\n    -String nome\n    -Map objetos\n    -Map ferramentas\n    -Map portas\n    -Engine engine\n    --\n    +void pega()\n    +void sai()\n    +void usar()\n}\nclass Engine{\n    -Mochila mochila\n    -Sala salaCorrente\n    -Boolean fim\n    --\n    +void indicaFimDeJogo()\n    +void criaCenario()\n    +void joga()\n}\nSala --> Ferramenta\nSala --> Objeto\nSala --> Sala\nEngine --> Sala\n\nObjeto <|-- Armario \nObjeto <|-- Bilhete\nObjeto <|-- PoteDeAcucar\nObjeto <|-- PoteDeArroz\n\nFerramenta <|-- Chave\nFerramenta <|-- Martelo\n\nEngine <|-- Jogodemo\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": ["c4", "plantuml", "uml", "diagramme", "conteneur"],
  "description": "Diagramme C4 représentant les éléments d'un système de jeu, incluant la salle, les objets et les ferramentas.",
  "source": "https://medium.com/@robertdennyson/creating-c4-and-uml-diagrams-using-plantuml-with-vscode-extension-90032a21ec43"
}

,{
  "prompt": "Diagrama de Container: Site de Músicas",
  "code": "@startuml Diagrama de Container: Site de Músicas...@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container", "Site de Músicas"],
  "description": "Le diagramme montre le site web \"Play My Music LTDA\" composé de différents conteneurs (login, sélection de musique, sauvegarde de favoris, suppression de compte) et des systèmes externes (autentification Google, site des Correios).",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "E Commerce Platform - Create Product - Buying And Merchandising - Buying Service - Message Handler - Handle Purchase Order Updated Event - C4 Sequence - Context level",
  "code": "@startuml\n!include ..\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.c4s\\C4_Sequence.puml\n\ntitle E Commerce Platform - Create Product - Buying And Merchandising - Buying Service - Message Handler - Handle Purchase Order Updated Event - C4 Sequence - Context level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Buying Service\", \"\")\nSystem(ECommercePlatform.Deliver.Fulfilment.SoftwareSystems.WMS, \"WMS\", \"\")\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Handle Purchase Order Updated Event\")\nRel(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, ECommercePlatform.Deliver.Fulfilment.SoftwareSystems.WMS, \"Update Purchase Order\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_sequence",
  "tags": [
    "E-commerce",
    "Plateforme de commerce",
    "Création de produit",
    "Achats et merchandising",
    "Service d'achat",
    "Gestion des messages",
    "Événement mise à jour de commande"
  ],
  "description": "Ce diagramme C4 Sequence décrit le processus de création de produit dans une plateforme e-commerce.",
  "source": "https://github.com/C4Model/C4-PlantUML"
}
,{
  "prompt": "cart_relations",
  "code": "@startuml \"cart_relations\"\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\nRel(cart_service, cart_storage, \"Stores cart contents\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["C4", "diagramme", "conteneur"],
  "description": "Le diagramme montre la relation entre le service de panier et l'entretien du stockage.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\.c4s\\C4_Context.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["commerce", "e-commerce", "platform", "product", "buying", "merchandising"],
  "description": "Diagramme de contexte pour l'application de commerce électronique",
  "source": "https://github.com/plantuml/plantuml"
}
,{
  "prompt": "@startuml\n... (le reste du code)",
  "code": "@startuml\ntitle Development Cluster\ntop to bottom direction\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "C4",
    "Context",
    "Container",
    "Component"
  ],
  "description": "Diagrame de contexte montrant les différents services et leurs relations.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/"
}
,{
  "prompt": "Créer un diagramme C4 statique pour la plateforme Big Bank Plc",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Context.puml\nAddElementTag...SHOW_LEGEND()\n@enduml",
  "language": "plantuml",
  "type": "c4_context",
  "tags": ["c4_context", "static_diagram", "big_bank_plc"],
  "description": "Diagramme C4 représentant le contexte de la plateforme Big Bank Plc, incluant les systèmes internes et externes associés.",
  "source": "https://github.com/carlosble/C4-PlantUML"
}

,{
  "prompt": "@startuml\n... (code du diagramme)\n@enduml",
  "code": "@startuml\n' !include https://raw.githubusercontent.com/iofoundry/ontopuml/refs/heads/Development/iof.iuml\n!include ../iof.iuml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "ontology",
    "industrial",
    "equipment",
    "system"
  ],
  "description": "Diagramme représentant la composition d'un système de motion linéaire Mazak-Z avec ses composants et propriétés.",
  "source": "https://github.com/iofoundry/ontopuml/blob/refs/heads/Development/iof.iuml"
}
,{
  "prompt": "Diagramme de Contexte - BDD Bot Application",
  "code": "@startuml C4_Context\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nLAYOUT_WITH_LEGEND()\ntitle Diagramme de Contexte - BDD Bot Application...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Context", "BDD", "Bot", "Application"],
  "description": "Ce diagramme représente le contexte de la BDD Bot Application en mettant en évidence les acteurs, les systèmes et les relations entre eux.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
    "prompt": "",
    "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\n... (le reste du code)\n@enduml",
    "language": "plantuml",
    "type": "c4_container",
    "tags": ["c4", "container", "context", "component"],
    "description": "Diagramme C4 montrant la structure d'un système TraderX, incluant un conteneur Web GUI et un service de gestion des comptes.",
    "source": ""
  },
  {
    "prompt": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml",
    "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\nSHOW_LEGEND()\n@enduml",
    "language": "plantuml",
    "type": "c4_container",
    "tags": [
      "c4_container",
      "container",
      "system_boundary",
      "rel",
      "trade",
      "traderx"
    ],
    "description": "Diagramme C4 décrivant le niveau de conteneur du système TraderX, avec ses composants et relations.",
    "source": "https://example.com/code/TraderX.puml"
  }
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nLAYOUT_WITH_LEGEND()\ntitle System Context diagram for Drone Shipping System",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nLAYOUT_WITH_LEGEND()\ntitle System Context diagram for Drone Shipping System\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "C4",
    "Context",
    "Diagramme",
    "PlantUML"
  ],
  "description": "Ce diagramme C4 représente le contexte du système de livraison par drone. Il met en évidence les différents acteurs et systèmes impliqués dans la chaîne d'approvisionnement.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
  "prompt": "@startuml\n!include <C4/C4_Container.puml>\n!include common.iuml\nHIDE_STEREOTYPE()\nPerson(p, \"Programmer\")\nSystem(a, \"Object\", $tags=\"data\")\nContainer(b1, \"Algorithm A\", \"implementation\")\nContainer(b2, \"Algorithm B\", \"implementation\")\nSystem_Ext(c, \"External project\")\nRel_D(p,a, \"acts\", \"\", $tags=\"action\")\nLay_D(a,b1)\nRel_R(b1,b2,\"data\")\nLay_D(b1,c)\n@enduml",
  "code": "@startuml\n!include <C4/C4_Container.puml>\n!include common.iuml\nHIDE_STEREOTYPE()\nPerson(p, \"Programmer\")\nSystem(a, \"Object\", $tags=\"data\")\nContainer(b1, \"Algorithm A\", \"implementation\")\nContainer(b2, \"Algorithm B\", \"implementation\")\nSystem_Ext(c, \"External project\")\nRel_D(p,a, \"acts\", \"\", $tags=\"action\")\nLay_D(a,b1)\nRel_R(b1,b2,\"data\")\nLay_D(b1,c)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "container", "algorithm", "implementation"],
  "description": "Diagramme C4 décrivant la structure d'un conteneur qui implémente deux algorithmes et interagit avec un projet externe.",
  "source": "https://github.com/plantuml/plantuml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\nAddRelTag(\"async\", $lineStyle = DashedLine())()\ntitle \"Pickles Wallet System\"\nPerson(customer, \"Customer\", \"Digital Wallet System customer\")\nSystem_Ext(payment_gateway ,\"Payment Gateway\",\"Payment Processor\")    \nSystem_Boundary(wallet_system, \"Digital Wallet System\") {\n    Container(spa, \"SPA\", \"React\", \"Single Page Application\")\n    Container(wallet_core,  \"Wallet Core\", \"Go\", \"Wallet Core is responsible for all transactions\")\n    Container(balance_service,  \"Balance Service\",\"Go\", \"Returns customer balance\")\n    Container(statement_service,  \"Statement Service\", \"Go\",\"Returns customer statements\")\n    Container(payment_acl, \"Payment ACL\",\"Go\",  \"Anticorruption Layer for Payment Gateway\")\n\n    ContainerDb(wallet_db, \"Wallet DB\", \"MySQL\")\n    Rel(wallet_core, wallet_db, \"Reads from and writes to\")    \n\n    ContainerDb(balance_db, \"Balance DB\", \"MySQL\")\n    Rel(balance_service, balance_db, \"Reads from and writes to\")\n\n    ContainerDb(statement_db, \"Statement DB\", \"MySQL\")\n    Rel(statement_service, statement_db, \"Reads from and writes to\")\n\n    ContainerDb(payment_acl_db, \"Payment DB\", \"MySQL\")\n    Rel(payment_acl, payment_acl_db, \"Reads from and writes to\")\n\n    Rel(customer, spa, \"Uses\", \"JSON/HTTPS\")\n    Rel(spa, wallet_core, \"Uses\", \"JSON/HTTPS\")\n    Rel(spa, balance_service, \"Uses\", \"JSON/HTTPS\")\n    Rel(spa, statement_service, \"Uses\", \"JSON/HTTPS\")\n    Rel(wallet_core, payment_acl, \"Uses\", \"JSON/HTTPS\")\n\n    Rel(payment_acl, payment_gateway, \"Uses\", \"JSON/HTTPS\")\n\n    Rel(wallet_core, balance_service, \"Uses\", \"Topic\", $tags = \"async\")\n    Rel(wallet_core, statement_service, \"Uses\", \"Topic\", $tags = \"async\")\n}\n@endpuml",
  "langage": "",
  "type": "c4_container",
  "tags": ["wallet", "system", "spa", "react", "go", "mysql"],
  "description": "Ce diagramme décrit le système de gestion de portefeuille Pickles. Il montre les différents composants du système, notamment l'application SPA utilisant les services de balance et de statut.",
  "source": ""
}
,{
  "prompt": "",
  "code": "@startuml\n!include ../../../.c4s/C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n... (le reste du code)\n@enduml",
  "language": "plantuml",
  "type": "c4_component",
  "tags": ["c4", "component", "diagramme_de_composants"],
  "description": "Diagramme C4 Component montrant la structure d'un système de gestion des paniers pour une application Dot Net E Shop, décrivant les composants et les conteneurs du système.",
  "source": ""
}

,{
  "prompt": "PlantUML: nwdiag",
  "code": "@startuml\n!include <office/Servers/application_server>\n!include <office/Servers/application_server_ghosted>\n!include <office/Servers/database_server>\n!include <office/Servers/database_server_green>\n!include <C4/C4_Container>\n\nnwdiag {\n    Network dmz {\n        address = \"210.x.x.x/24\"\n        web01 [address = \".1, .20\", description = \"$application_server\\nweb01\"]\n        web02 [address = \".2\", description = \"$application_server_ghosted\\nweb02\"]\n        comp01 [description = \"$person\\ncomp01\"]\n    }\n    network internal {\n        address = \"172.x.x.x/24\"\n        web01 [address = \".1\", ]\n        web02 [address = \".2\", ]\n        db01 [address = \".100\", description = \"$database_server\\ndb01\"]\n        db02 [address = \".101\", description = \"$database_server_green\\ndb01\"]\n    }\n}\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "conteneur"],
  "description": "Ce diagramme C4 montre l'architecture d'un système avec un conteneur, représentant le réseau DMZ et interne, ainsi que les différents composants tels que des serveurs web et de bases de données.",
  "source": "PlantUML"
}
,{
  "prompt": "System_classification_docs__ML_Metadata_Repo",
  "code": "@startuml System_classification_docs__ML_Metadata_Repo\n!$SYSTEM_BORDER_COLOR ?= \"#000000\"\n!include https://raw.githubUsercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\nHIDE_STEREOTYPE()\nAddElementTag(SystemDb_colors, $bgColor=SkyBlue, $fontColor=black)\n\nSystem_Boundary(System_classifier, \"Classifier\")  {\n    SystemDb(ML_Metadata_Repository, \"ML_Metadata_Repository\", \"model performance metrics\", $tags=\"SystemDb_colors\") \n}\n\nSHOW_FLOATING_LEGEND()\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["C4", "PlantUML"],
  "description": "Diagramme C4 montrant la classification des documents et le répertoire de métadonnées ML.",
  "source": "https://raw.githubUsercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include ../../../.c4s/C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n... (le reste du code)\n@enduml",
  "language": "plantuml",
  "type": "c4_component",
  "tags": ["c4", "component", "diagramme_de_composants"],
  "description": "Diagramme C4 Component montrant la structure d'un système de gestion des paniers pour une application Dot Net E Shop, décrivant les composants et les conteneurs du système.",
  "source": ""
}

,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml\n... (le reste du code)",
  "langage": "C4 PlantUML",
  "type": "c4_container",
  "tags": ["api", "java", "springboot", "google authentication", "expo"],
  "description": "Diagramme C4 montrant l'architecture d'une application mobile avec une API centrale et des services connectés.",
  "source": ""
}
,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n... (le reste de votre code)\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "c4",
    "context",
    "container",
    "component",
    "relation",
    "tag"
  ],
  "description": "Diagramme C4 montrant le contexte d'une application avec des conteneurs, des composants et des relations.",
  "source": ""
}
,{
  "prompt": "@startuml 'High-Level Architecture'\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle High-Level Architecture - MiniBank Application\n",
  "code": "@startuml 'High-Level Architecture'\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle High-Level Architecture - MiniBank Application\nPerson(customer, \"Customer\", \"A bank customer who wants to perform transactions\")\nSystem_Boundary(minibank, \"MiniBank System\") {\n    Container(api_gateway, \"API Gateway\", \"Spring WebFlux\", \"Handles HTTP requests and routes them to appropriate services\")\n\n    Component(account_service, \"Account Service\", \"Spring Service\", \"Manages bank accounts and balances\")\n    Component(transaction_service, \"Transaction Service\", \"Spring Service\", \"Handles money transfers between accounts\")\n    Component(validation_service, \"Validation Service\", \"Spring Service\", \"Validates transactions and account operations\")\n\n    ComponentDb(postgres_db, \"PostgreSQL Database\", \"Stores accounts, transactions, and other banking data\")\n}\nSystem_Ext(notification_system, \"Notification System\", \"Sends notifications about transactions\")\nSystem_Ext(audit_system, \"Audit System\", \"Records all system activities\")\nRel(customer, api_gateway, \"Uses\", \"HTTP/REST\")\nRel(api_gateway, account_service, \"Uses\", \"Internal API\")\nRel(api_gateway, transaction_service, \"Uses\", \"Internal API\")\nRel(account_service, validation_service, \"Uses\", \"Internal API\")\nRel(transaction_service, validation_service, \"Uses\", \"Internal API\")\nRel_R(account_service, postgres_db, \"Reads/Writes\", \"R2DBC\")\nRel_R(transaction_service, postgres_db, \"Reads/Writes\", \"R2DBC\")\nRel(transaction_service, notification_system, \"Notifies\", \"Events\")\nRel(transaction_service, audit_system, \"Logs\", \"Events\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "Architecture",
    "C4",
    "MiniBank",
    "API Gateway",
    "Account Service",
    "Transaction Service",
    "Validation Service",
    "PostgreSQL Database",
    "Notification System",
    "Audit System"
  ],
  "description": "Ce diagramme représente l'architecture à haut niveau de la mini-banque, mettant en évidence les différents composants et les relations entre eux.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "Diagramme C4 des éléments de l'application",
  "code": "@startuml C4_Elements...@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4",
    "Context Mapping",
    "System Boundary",
    "Container",
    "Component"
  ],
  "description": "Ce diagramme décrit la structure de l'application en décomposant les éléments en systèmes, conteneurs et composants.",
  "source": "https://example.com/diagramme-c4-elements"
}
,{
  "prompt": "@startuml C4_Component\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml",
  "code": "@startuml C4_Component\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND($legendPosition=\"right\", $legendAlign=\"top\")\ntitle Component diagram for Nutllet Financial Management System -  Service\n... (le reste du code)",
  "langage": "plantuml",
  "type": "c4_component",
  "tags": [
    "C4_Component",
    "PlantUML",
    "diagramme de composants",
    "Nutllet Financial Management System"
  ],
  "description": "Diagramme de composants du système de gestion financière Nutllet, montrant les relations entre les composants.",
  "source": "@startuml C4_Component\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
    "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Container.puml\nAddElementTag...@enduml",
    "code": "voir le code ci-dessus",
    "language": "plantuml",
    "type": "c4_container",
    "tags": ["c4", "container", "catalog_api", "api"],
    "description": "Le diagramme montre la hiérarchie de conteneurs du Catalog Api, avec les interflots de lifecycle (nouveau, changé et supprimé).",
    "source": "https://github.com/plantuml/plantuml"
  },
  {
    "prompt": "@startuml ... @enduml",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n...\n@enduml",
    "language": "plantuml",
    "type": "c4_sequence",
    "tags": ["c4", "sequence", "diagramme"],
    "description": "Le diagramme C4 Sequence décrit la séquence de composition du Catalog Api.",
    "source": "https://plantuml.com/"
  },
  {
    "prompt": "",
    "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\nPerson(client, \"Client\")\nContainer(apiGateway, \"API Gateway\", \"Go\", \"Gateway, load balancer\")\nContainer(feedSystem, \"Feed system\", \"Software system\", \"Store feed posts and friends posts for active users\")\nContainerQueue(commentMessageQueue, \"Comment events queue\", \"Kafka\", \"Message queue for events by post comments\")\n\nSystem_Boundary(commentSystem, \"Comment system\") {\n    Container(commentService, \"Comment Service\", \"Go\", \"Handling creation of comments to posts\", $tags=\"webApp\")\n    ContainerDb(commentDatabase, \"Comment database\", \"PgSQL\", \"Stores post comments\", $tags=\"db\")\n}\n\nRel(client, apiGateway, \"Creates post comments\", \"REST\")\nRel(apiGateway, commentService, \"Creates post comments\", \"gRPC\")\nRel(commentService, commentDatabase, \"Creates post comment and gets comments per post\")\nRel(commentService, commentMessageQueue, \"Publishes comment creation events\")\nRel(feedSystem, commentMessageQueue, \"Subscribes to comment creation events\")\nRel(feedSystem, commentService, \"Get post comments\", \"gRPC\")\n@enduml",
    "language": "plantuml",
    "type": "c4_context",
    "tags": ["comment system", "comment service", "api gateway"],
    "description": "Diagramme de contexte montrant le système de commentaires avec l'API Gateway, le système de commentaires et la base de données.",
    "source": ""
  },
  {
    "prompt": "",
    "code": "@startuml\n!include ../../../../.c4s/C4_Container.puml\n... (le reste du code)\n@enduml",
    "language": "plantuml",
    "type": "c4_container",
    "tags": ["c4", "container", "ECommercePlatform", "Deliver", "Fulfilment"],
    "description": "Diagramme C4 décrivant le niveau de conteneur d'une plateforme de commerce électronique.",
    "source": ""
  }
,{
  "prompt": "",
  "code": "@startuml to_be\n!... (voir le code original)\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["C4", "context", "system", "boundary", "container"],
  "description": "Diagramme C4 montrant la structure d'un système à plusieurs niveaux, avec des systèmes de bordures, des conteneurs et des relations entre eux.",
  "source": ""
}
,{
  "prompt": "To Do App Example - To Do App - Mobile App - C4 Static - Container level",
  "code": "@startuml\n!include ../../../../../.c4s/C4_Container.puml\n\n... (le reste du code PlantUML)\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4",
    "container",
    "lifecycle",
    "new",
    "changed",
    "removed"
  ],
  "description": "Diagramme C4 Container décrivant l'architecture de l'application To Do App, avec les conteneurs Mobile App, Web Api et Database.",
  "source": "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/refs/heads/main/icons"
}

,{
  "prompt": "@startuml ... @enduml",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_component",
  "tags": [
    "API",
    "authentification",
    "middleware",
    "controller",
    "database"
  ],
  "description": "Diagramme C4 décrivant la logique d'un API pour trouver une réservation par UUID.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml !include ../../../.c4s/C4_Context.puml AddElementTag... @enduml",
  "code": "@startuml\n!include ../../../.c4s/C4_Context.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Big Bank Plc - Complete (End-To-End) - C4 Static - Context level\n\nPerson(BigBankPlc.Actors.Customer, \"Customer\", \"A customer of the bank, with personal bank accounts\")\nSystem(BigBankPlc.SoftwareSystems.InternetBanking, \"Internet Banking\", \"Provided Internet Banking services\")\nSystem_Ext(BigBankPlc.SoftwareSystems.MainframeBankingSystem, \"Mainframe Banking System\", \"\")\nSystem_Ext(BigBankPlc.SoftwareSystems.EMailSystem, \"E-Mail System\", \"The internal Microsoft Exchange system\")\n\nRel(BigBankPlc.Actors.Customer, BigBankPlc.SoftwareSystems.InternetBanking, \"Uses\\n[HTTPS]\", $tags='protocol:https')\nRel(BigBankPlc.SoftwareSystems.InternetBanking, BigBankPlc.SoftwareSystems.MainframeBankingSystem, \"Uses\\n[TCP/IP]\", $tags='protocol:tcp/ip')\nRel(BigBankPlc.SoftwareSystems.InternetBanking, BigBankPlc.SoftwareSystems.EMailSystem, \"Uses\\n[SMTP]\", $tags='protocol:smtp')\nRel(BigBankPlc.Actors.Customer, BigBankPlc.SoftwareSystems.EMailSystem, \"Uses\\n[POP3]\", $tags='protocol:pop3')\n\nSHOW_LEGEND()\n@enduml",
  "language": "plantuml",
  "type": "c4_context",
  "tags": [
    "C4",
    "context",
    "diagramme",
    "UML"
  ],
  "description": "Diagramme de contexte C4 décrivant les relations entre les acteurs, les systèmes et les extensions du Big Bank Plc.",
  "source": "https://plantuml.com/fr/"
}

,{
  "prompt": "@startuml ... @enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle getListTier API\\n[NodeJs Bengkel API]\n... @enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["C4", "Context", "API", "NodeJs", "Bengkel"],
  "description": "Ce diagramme C4 représente le contexte de l'application getListTier API, qui est une application NodeJs. Il décrit les composants et les conteneurs de l'application, ainsi que les relations entre eux.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle bookingGetCarModelList Moadmin API\\n[NodeJs Katalog API]\n...@enduml",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle bookingGetCarModelList Moadmin API\\n[NodeJs Katalog API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"bookingGetCarModelList Moadmin API\\n[Component]\"{)\nComponent(auth_middleware, \"auth.verify\", \"Middleware | NodeJs\", \"Middleware for Verification\\n(NodeJs Katalog API)\"\")\nComponent(reference_controller, \"Reference Controller\", \"Controller | NodeJs\", \"Controller for Reference Related function\\n(NodeJs Katalog API)\"\")\nComponent(bookingGetCarModelList, \"bookingGetCarModelList\", \"Function | NodeJs\", \"Function for get booking car model list\\n(NodeJs Katalog API)\"\")\nComponent(getCarModel, \"Mobil.getCarModel\", \"Function | NodeJs\", \"Function for get car model\\n(NodeJs Katalog API)\"\")\n}\nContainerDb(database, \"Moservice Storage\", \"mySQL Database\", \"All store for save data and content for Moservice.id\")\nRel_D(Web_Moservice, auth_middleware, \"1. Request get booking car model list\")\nRel_D(auth_middleware, reference_controller, \"2. Request get booking car model list\")\nRel_D(reference_controller, bookingGetCarModelList, \"3. Request get booking car model list\")\nRel_D(bookingGetCarModelList, getCarModel, \"4. Request get booking car model list\")\nRel_D(getCarModel, database, \"5. Get booking car model list\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["c4", "plantuml", "component"],
  "description": "Diagramme C4 qui montre la structure d'un composant de l'API NodeJs Katalog API, notamment les fonctions et les mécanismes de sécurité.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\....\\.c4s\\C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n... (code complété)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["c4", "component"],
  "description": "Diagramme de niveau composant pour l'application Catalog Api",
  "source": ""
}
,
  {
    "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
    "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n'!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\n...\n@enduml",
    "langage": "C4 PlantUML",
    "type": "c4_container",
    "tags": ["C4", "Container", "View"],
    "description": "Diagramme C4 représentant une vue de conteneur avec les éléments et relations associés.",
    "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master"
  },
  {
    "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
    "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n' uncomment the following line and comment the first to use locally\n' !include C4_Container.puml\n...\n@enduml",
    "langage": "C4 PlantUML",
    "type": "c4_container",
    "tags": ["C4", "Container", "View"],
    "description": "Diagramme C4 représentant une vue de conteneur avec les éléments et relations associés.",
    "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master"
  },
  {
    "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
    "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n' uncomment the following line and comment the first to use locally\n' !include C4_Container.puml\n...\n@enduml",
    "langage": "C4 PlantUML",
    "type": "c4_container",
    "tags": ["C4", "Container", "View"],
    "description": "Diagramme C4 représentant une vue de conteneur avec les éléments et relations associés.",
    "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master"
  }
,

{
  "prompt": "@startuml\n!include ../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")",
  "code": "@startuml\n!include ../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n@enduml",
  "language": "plantuml",
  "type": "c4_context",
  "tags": [
    "c4_context",
    "catalog_api",
    "infrastructure",
    "context_level"
  ],
  "description": "Diagramme de contexte C4 décrivant la structure d'un catalogue API et son infrastructure, au niveau du contexte.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/"
}

,{
  "prompt": "mini_url_container",
  "code": "@startuml mini_url_container... @enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "C4-PlantUML",
    "Container",
    "System_Boundary",
    "Enterprise_Boundary",
    "Person",
    "Rel"
  ],
  "description": "Ce diagramme montre l'architecture d'un système de mini URL avec un conteneur et plusieurs systèmes, dont un pour la base de données et un pour le cache.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle createBusiness Bengkel API\\n[NodeJs Bengkel API]\n...\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle createBusiness Bengkel API\\n[NodeJs Bengkel API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"Moservice.id Main Services for Customer\")\nBoundary(api, \"createBusiness Bengkel API\\n[Component]\")){\n  Component(Business, \"Business Controller\", \"Controller | NodeJs\", \"Controller for Business Function related\\n(NodeJs Bengkel API)\")\n\n  Component(createBusiness, \"createBusiness\", \"Function | NodeJs\", \"Function for Create Business data\\n(NodeJs Bengkel API)\")\n  Component(create, \"Business.create\", \"Function | NodeJs\", \"Function for Create Business data\\n(NodeJs Bengkel API)\")\n}\nContainerDb(database, \"Moservice Storage\", \"mySQL Database\", \"All store for save data and content for Moservice.id\")\nRel(Web_Moservice, Business, \"1. Request Create Business data\")\nRel(Business, createBusiness, \"2. Request Create Business data\")\nRel(createBusiness, create, \"3. Request Create Business data\")\nRel(create, database, \"4. Create Business data\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "C4-PlantUML",
    "Component",
    "NodeJs",
    "API"
  ],
  "description": "Diagramme C4 Component décrivant la structure d'un composant logiciel, notamment le contrôleur de business et les fonctions liées à la création de données.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "E Commerce Platform - Deliver - Fraud Management - Fraud Service - Api - Update Order Fraud Check Result - C4 Sequence - Container level",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Sequence.puml\n\n... (le reste du code)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "c4_sequence",
    "container_level",
    "fraud_management",
    "api",
    "database",
    "messaging"
  ],
  "description": "Ce diagramme C4 illustre la structure du service de gestion des fraude dans l'application e-commerce Deliver. Il montre les composants et les relations entre eux.",
  "source": ""
}
,{
  "prompt": "@startuml \"Container Diagram\"\n!include <c4/C4_Container>\n...\n@enduml",
  "code": "@startuml \"Container Diagram\"\n!include <c4/C4_Container>\nPerson(user, \"Application User\", \"A user of the Diet Planner application\")\nSystem_Boundary(dietPlanner, \"Diet Planner System\") {\n    Container(webApp, \"Web Application\", \"Future Development\", \"Web-based access to the Diet Planner\")\n    Container(mobileApp, \"Mobile Application\", \"Future Development\", \"Mobile access to the Diet Planner\")\n    Container(api, \"API Server\", \"Future Development\", \"Provides diet planning functionality via REST API\")\n    Container(desktop, \"Desktop Application\", \"Java Swing\", \"Provides diet planning functionality to users\")\n    ContainerDb(db, \"Database\", \"SQLite\", \"Stores user accounts, meals, foods, and nutritional data\")\n}\nRel(user, webApp, \"Will use\", \"HTTP/HTTPS\")\nRel(user, mobileApp, \"Will use\", \"HTTP/HTTPS\")\nRel(user, desktop, \"Uses\")\nRel(webApp, api, \"Will use\", \"JSON/HTTPS\")\nRel(mobileApp, api, \"Will use\", \"JSON/HTTPS\")\nRel(api, db, \"Will read from and write to\", \"JDBC\")\nRel(desktop, db, \"Reads from and writes to\", \"JDBC\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["C4", "Container Diagram", "Diet Planner", "Application User"],
  "description": "Ce diagramme C4 montre la structure du système de planification alimentaire, y compris les composants web, mobile, API et base de données.",
  "source": "https://github.com/plantuml/plantuml"
}
,{
  "prompt": "@startuml C4-Container\n... @enduml",
  "code": "@startuml C4-Container\n...\n@enduml",
  "langage": "C4 PlantUML",
  "type": "c4_container",
  "tags": [
    "authentification",
    "service",
    "API",
    "Postgres",
    "RabbitMQ",
    "Redis",
    "cache"
  ],
  "description": "Diagramme C4 de conteneur représentant l'architecture du système d'autorisation, des services et des bases de données.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\.c4s\\C4_Container.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "c4",
    "diagramme",
    "conteneur",
    "système"
  ],
  "description": "Diagramme C4 du conteneur \"Basket Service\" dans le contexte d'une plateforme e-commerce.",
  "source": ""
}
,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\nLAYOUT_WITH_LEGEND()\n\ntitle Container diagram for Face Frenzy\n\nPerson(players, Player, \"People playing Face Frenzy\")\nPerson(admin, Admin, \"Person monitoring the game remotely through he HTTP server\")\n\nSystem_Boundary(c1, \"Frace Frenzy Game\") {\n    ...\n}\nSystem_Ext(camera, \"Camera\", \"external video input device connected to the embedded device that will capture an image of the players after a countdown ends.\")\nSystem_Ext(pynq, \"Pynq Board\", \"All on-board embedded accessories like LEDs, OLED, etc.\")\nSystem_Ext(display, \"HDMI Display\", \"external display conected to PYNQ\")\n\nRel(players, ui, \"Interact with\", \"Physical Buttons\")\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4-Container", "Face-Detection", "Python", "Docker"],
  "description": "Le diagramme C4 montre l'architecture d'un système nommé Face Frenzy, composé de plusieurs conteneurs et systèmes externes.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml...\n@enduml",
  "langage": "C4 PlantUML",
  "type": "c4_component",
  "tags": ["component", "diagramme de composants", "API", "NodeJS"],
  "description": "Diagramme de composants montrant la structure et les relations entre les composants du système.",
  "source": ""
}
,{
  "prompt": "To Do App Example - To Do App - Web Api - Add Task - C4 - Container level",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\n\n!define ICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/refs/heads/main/icons\n\n!include ICONS/devicons/dotnet.puml\n!include ICONS/devicons/msql_server.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\n\nskinparam linetype polyline\n\ntitle To Do App Example - To Do App - Web Api - Add Task - C4 - Container level\n\nSystem_Boundary(ToDoAppExample.SoftwareSystems.ToDoApp, \"To Do App\") {\n    Container(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.WebApi, \"Web Api\", \"\", \"\", \"dotnet\", $tags=\"c4interflow:lifecycle:changed\")\n    Container(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.Database, \"Database\", \"\", \"\", \"msql_server\", $tags=\"c4interflow:lifecycle:changed\")\n}\n\nRel(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.WebApi, ToDoAppExample.SoftwareSystems.ToDoApp.Containers.Database, \"Insert Task\")\nSHOW_LEGEND()\n@enduml",
  "language": "plantuml",
  "type": "c4_container",
  "tags": ["C4", "container", "ToDoApp", "WebApi", "Database"],
  "description": "Ce diagramme C4 représente la structure de l'application To Do App, en montrant les conteneurs Web Api et Database ainsi que leurs interactions pour l'ajout de tâches.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}

,{
  "prompt": "@startuml",
  "code": "@startuml\n!include <C4/C4_Component>\n!include <office/Servers/database_server>... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["database", "installation media", "tool", "ansible", "system boundary"],
  "description": "Ce diagramme C4 montre le contexte d'un système de gestion de base de données Oracle, comprenant des conteneurs tels que les outils, la média d'installation et le serveur de base de données. Il illustre également l'utilisation de Ansible pour automatiser la mise en place du système.",
  "source": "@startuml"
}
,{
  "prompt": "@startuml C4_Component \"OpenMetadata Component View\" \"Internal modules of OpenMetadata Server\"",
  "code": "@startuml C4_Component \"OpenMetadata Component View\" \"Internal modules of OpenMetadata Server\"\n!define C4P https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master\n!include C4P/C4_Container.puml\n!include C4P/C4_Component.puml\nContainer(openmeta, \"OpenMetadata Server\", \"v1.3.1\", \"Metadata catalog & governance\")\nComponent(api,        \"REST API\",          \"Spring Boot\", \"CRUD metadata entities\")\nComponent(ui,         \"Web UI\",            \"React\",       \"User interface\")\nComponent(catalog,    \"Catalog Service\",   \"Java\",        \"Business logic & validation\")\nComponent(ingestSvc,  \"Ingestion Service\", \"Java\",        \"Runs metadata workflows\")\nComponent(search,     \"Search Indexer\",    \"Opensearch\",\"Indexes & queries metadata\")\nComponent(dbClient,   \"MySQL Client\",      \"JDBC\",        \"Persists metadata\")\nRel(ui,      api,         \"calls\")\nRel(api,     catalog,     \"invokes business logic\")\nRel(catalog, dbClient,    \"reads/writes metadata\")\nRel(catalog, search,      \"index metadata\")\nRel(ingestSvc, api,       \"push workflows\")\nRel(api,     ingestSvc,   \"starts ingestion jobs\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "component",
    "openmetadata",
    "server",
    "api",
    "ui",
    "catalog",
    "ingestionservice"
  ],
  "description": "Le diagramme décrit les composants internes du serveur OpenMetadata, notamment l'API REST, la page de commande, le service de catalogage et le service d'indexation.",
  "source": "@startuml C4_Component \"OpenMetadata Component View\" \"Internal modules of OpenMetadata Server\""
}
,{
  "prompt": "@startuml WOPI\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml\n... (le reste du code)",
  "code": "@startuml WOPI\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml\n!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/master/dist\n... (le reste du code)",
  "langage": "puml",
  "type": "c4_context",
  "tags": ["Azure", "C4-PlantUML", "architecture"],
  "description": "Diagrame C4 représentant l'infrastructure Azure pour deux régions (Europe du Nord et Europe de l'Ouest). Les diagrammes montrent les différentes couches d'infrastructure, notamment les VM, les VPN gateways, les magasins Blob et les réseaux virtuels.",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "",
  "code": "@startuml \"Sistema de Gestão Financeira Pessoal\"\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n\ntitle \"Sistema de Gestão Financeira Pessoal - Casos de Uso\"\n'\nAtores\nactor \"Cliente Individual\" as user\nactor \"Sistema Bancário\" as bank #999999\nactor \"Sistema de Cobrança\" as biller #AABBCC\nactor \"Sistema de Pagamentos\" as paymentSystem #DDCCBB\n\n' Sistema e casos de uso\nrectangle \"Sistema de Gestão Financeira Pessoal\" {\n    usecase \"UC01: Visualizar Extrato\" as UC01\n    usecase \"UC02: Filtrar Transações\" as UC02\n    usecase \"UC03: Categorizar Transação Manualmente\" as UC03\n    usecase \"UC04: Buscar Transações\" as UC04\n    usecase \"UC05: Visualizar Detalhes da Transação\" as UC05\n    usecase \"UC06: Exportar Transações\" as UC06\n    usecase \"UC07: Receber Categorização Automática\" as UC07\\n\n    ' Relacionamentos entre casos de uso\n    UC01 ..> UC02 : <<include>>\n    UC01 ..> UC07 : <<include>>\n    UC01 ..> UC05 : <<extend>>\n    UC01 ..> UC06 : <<extend>>\n    UC03 ..> UC05 : <<include>>\\n\n}\n' Casos de Uso Relacionados com Cobrança\nrectangle \"Sistema de Cobrança\" {\n    usecase \"UC08: Gerar Nota Fiscal\" as UC08\n    usecase \"UC09: Receber Pagamento\" as UC09\\n\n    ' Relacionamentos entre casos de uso\n    UC01 ..> UC08 : <<include>>\n    UC08 ..> UC09 : <<extend>>\\n\n}\n' Casos de Uso Relacionados com Pagamentos\nrectangle \"Sistema de Pagamentos\" {\n    usecase \"UC10: Realizar Pagamento\" as UC10\n    usecase \"UC11: Gerenciar Plano de Pagamento\" as UC11\\n\n    ' Relacionamentos entre casos de uso\n    UC01 ..> UC10 : <<include>>\n    UC10 ..> UC11 : <<extend>>\\n\n}\n' Relacionamentos ator-caso de uso\nuser --> UC01\nuser --> UC03\nuser --> UC04\nbank --> UC07\n\nbiller --> UC08\npaymentSystem --> UC10\n\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["gestao financiera pessoal", "casos de uso"],
  "description": "Le diagramme décrit un système de gestion financière personnelle avec les cas d'utilisation associés.",
  "source": ""
}
,{
  "prompt": "@startuml !pragma revision 1 ... @enduml",
  "code": "@startuml\n!pragma revision 1\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "Azure",
    "Resource Group",
    "Logic Apps",
    "Storage",
    "Compute",
    "Networking"
  ],
  "description": "Diagramme C4 montrant la structure d'une ressource Azure avec divers composants et services.",
  "source": "@startuml ... @enduml"
}
,
  {
    "prompt": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\n...\n@enduml",
    "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\n@enduml",
    "language": "plantuml",
    "type": "c4_container",
    "tags": ["C4", "container", "TraderX", "TradeFeed"],
    "description": "Diagramme C4 montrant le conteneur TraderX et son contenu.",
    "source": "https://github.com/DiagramSpeech/c4plantuml#readme"
  },
  {
    "prompt": "@startuml\n!include ../../../../../../../.c4s/C4_Context.puml\n... (le reste du code)",
    "code": "@startuml\n!include ../../../../../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n... (le reste du code)",
    "language": "plantuml",
    "type": "c4_context",
    "tags": ["c4context", "commerce", "électronique", "achat", "merchandising"],
    "description": "Le diagramme C4 Context montre le contexte de l'E Commerce Platform, mettant en avant la création de produit, l'achat et le merchandising, et illustrant les relations entre les composants du système.",
    "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
  },
  {
    "prompt": "@startuml deployment",
    "code": "@startuml deployment\n!include ../../C4-PlantUML/C4_Deployment.puml\nLAYOUT_WITH_LEGEND()\nDeployment_Node(plc, \"Cloud\", \"The cloud provider boundary\") {\n    ... (le reste du code)\n}\n@enduml",
    "language": "plantuml",
    "type": "c4_deployment",
    "tags": ["deployment", "C4-PlantUML", "cloud", "vm", "apache tomcat", "java", "spring mvc", "mysql"],
    "description": "Diagramme montrant la mise en œuvre de l'application dans le cloud et sur les terminaux clients.",
    "source": "https://github.com/C4Model/C4-PlantUML/blob/master/C4_Deployment.puml"
  },
  {
    "prompt": "@startuml\n!include ../../../../../../../.c4s/C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...",
    "code": "@startuml\n!include ../../../../../../../.c4s/C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...",
    "language": "plantuml",
    "type": "c4_container",
    "tags": ["C4", "container", "composants", "relations"],
    "description": "Diagramme C4 au niveau conteneur représentant la plateforme e-commerce et le processus de création de produits, incluant les services d'achat et de merchandising.",
    "source": "https://example.com/c4-container.puml"
  }


,{
  "prompt": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Sequence.puml\n\ntitle E Commerce Platform - Create Product - Price Management - Pricing Service - Message Handler - Handle Purchase Order Created Event - C4 Sequence - Context level\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(ECommercePlatform.CreateProduct.PriceManagement.SoftwareSystems.PricingService, \"Pricing Service\", \"\")\nSystem(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Buying Service\", \"\")\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.CreateProduct.PriceManagement.SoftwareSystems.PricingService, \"Handle Purchase Order Created Event\")\nRel(ECommercePlatform.CreateProduct.PriceManagement.SoftwareSystems.PricingService, ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Receive Purchase Order Created Event\")\n@enduml",
  "code": "PlantUML",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "sequence",
    "C4",
    "context-level"
  ],
  "description": "Diagramme de séquence C4 montrant les interactions entre le système externe, le service de tarification et le service d'achat.",
  "source": "https://example.com"
}
,{
  "prompt": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Context.puml\n...",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4Context",
    "diagramme de conception",
    "systeme d'information"
  ],
  "description": "Diagramme C4 représentant le contexte d'un système d'e-commerce, avec les composants clés tels que la gestion des informations produits et le service produit.",
  "source": "https://github.com/C4Model/C4-PlantUML/blob/master/examples/ECommercePlatform.puml"
}
,
  {
    "prompt": "@startuml\n!include ../../../.c4s/C4_Context.puml\n...\n@enduml",
    "code": "@startuml\n!include ../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")...\n@enduml",
    "language": "PlantUML",
    "type": "c4_context",
    "tags": ["C4_Context", "ECommercePlatform", "PaymentProvider", "PaymentService", "OrderService"],
    "description": "Diagramme de contexte pour la plateforme e-commerce Deliver - Payments, montrant les relations entre les différents composants.",
    "source": "https://example.com/uml-plantuml"
  },
  {
    "prompt": "C4 Sequence",
    "code": "@startuml\n!include ../../../../../../.c4s/C4_Sequence.puml\n...\n@enduml",
    "language": "PlantUML",
    "type": "c4_sequence",
    "tags": ["C4", "Sequence", "Container", "System"],
    "description": "Diagramme C4 Sequence représentant la génération de demande pour l'E Commerce Platform, avec les systèmes et les conteneurs impliqués.",
    "source": "https://example.com/c4-sequence-diagram"
  },
  {
    "prompt": "@startuml\n!include ../../../../../../../.c4s/C4_Component.puml...\n@enduml",
    "code": "@startuml\n!include ../../../../../../../.c4s/C4_Component.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")...\n@enduml",
    "language": "PlantUML",
    "type": "c4_context",
    "tags": ["C4", "context", "diagramme", "catalogue"],
    "description": "Le diagramme C4 représente le contexte de l'application Catalog Api, montrant les conteneurs et les composants.",
    "source": "https://github.com/plantuml/plantuml"
  },
  {
    "prompt": "@startuml\n!include ../../.c4s/C4_Sequence.puml\n\ntitle Big Bank Plc - Internet Banking - API Application - Create Account - C4 Sequence - Container level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\n\nSystem_Boundary(BigBankPlc.SoftwareSystems.InternetBanking, \"Internet Banking\")",
    "code": "@startuml\n!include ../../.c4s/C4_Sequence.puml\n\ntitle Big Bank Plc - Internet Banking - API Application - Create Account - C4 Sequence - Container level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\n\nSystem_Boundary(BigBankPlc.SoftwareSystems.InternetBanking, \"Internet Banking\")",
    "language": "PlantUML",
    "type": "c4_container",
    "tags": ["container", "sequence", "api_application", "internet_banking"],
    "description": "Diagramme représentant le niveau de conteneur d'une application API pour la création d'un compte dans Internet Banking.",
    "source": ".c4s/C4_Sequence.puml"
  }


,{
  "prompt": "@startuml 'rl-eval-auto'",
  "code": "@startuml 'rl-eval-auto'\n!include <C4/C4_Container>... @enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["C4", "Container", "Component", "Relational"],
  "description": "Diagramme C4 représentant les conteneurs et les relations entre eux dans un système de réseaux sociaux.",
  "source": "https://github.com/plantuml/plantuml"
}
,{
  "prompt": "Diagramme de déploiement de serveur de navigation produit",
  "code": "@startuml ProductEC2\\nleft to right direction\\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml\\n...\\n@enduml",
  "langage": "plantuml",
  "type": "c4_deployment_node",
  "tags": ["AWS", "EC2", "Java", "RMI", "JPA"],
  "description": "Le diagramme décrit le déploiement d'un serveur de navigation produit sur AWS EC2, utilisant Java et la base de données MySQL.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml"
}
,{
  "prompt": "@startuml ... @enduml",
  "code": "...",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container", "E Commerce Platform", "Deliver", "Fraud Management", "API"],
  "description": "Diagramme C4 montrant la stratification de l'application E Commerce Platform en plusieurs conteneurs, y compris un service de fraude et une API.",
  "source": "[lien vers le fichier source]"
}
,{
  "prompt": "PlantUML",
  "code": "@startuml...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "C4Container",
    "Container",
    "Boundary",
    "System",
    "Rel"
  ],
  "description": "Diagramme C4 Container du système d'E Commerce Platform - Create Product - Buying And Merchandising - Buying And Merchandising App",
  "source": "PlantUML"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\nskinparam wrapWidth 300\nLAYOUT_WITH_LEGEND()\nLAYOUT_LANDSCAPE()\ntitle\n<b>ProblemTracker v2024.02.22</b>\n <i>Трекер задач</i>\nend title\nPerson(user, \"Пользователь\")\nSystem(tasks, \"Трекер задач\", \"Система трекинга задач\")\nRel_D(user, tasks, \"Все операции с трекером\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container", "ProblemTracker"],
  "description": "Diagramme C4 Container montrant les composants du système ProblemTracker, avec les utilisateurs et le système de suivi des tâches.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "@startuml ... @enduml",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle delete Content Promo API\n[NodeJs Content API]\n... @enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "PlantUML", "NodeJs", "API", "Container", "Boundary"],
  "description": "Diagramme C4 montrant l'architecture d'une API de contenu en NodeJs, avec les composants et les relations entre eux.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,
  {
    "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\n...",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\ntitle Dot Net E Shop - Basket Api - Data - Redis Basket Repository - Delete Basket Async - C4 Sequence - Component level\n...\n@enduml",
    "language": "PlantUML",
    "type": "c4_sequence",
    "tags": ["c4", "sequence", "component"],
    "description": "Diagramme décrivant la séquence des composants et des conteneurs du système Dot Net E Shop, notamment le Basket Api et les données stockées dans Redis.",
    "source": "https://example.com/diagramme-c4-plantuml"
  },
  {
    "prompt": "",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Container.puml\n... (restant du code)\n@enduml",
    "language": "PlantUML",
    "type": "c4_container",
    "tags": ["c4", "container", "basket api", "grpc"],
    "description": "Diagramme C4 représentant la structure d'un conteneur au niveau de l'application Basket Api.",
    "source": ""
  },
  {
    "prompt": "Diagramme C4",
    "code": "@startuml\n!include ../../../../../../.c4s/C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Big Bank Plc - Internet Banking - Single-Page App - View Account Transactions - C4 - Context level\nSystem(BigBankPlc.SoftwareSystems.InternetBanking, \"Internet Banking\", \"\")\nSystem_Ext(BigBankPlc.SoftwareSystems.MainframeBankingSystem, \"Mainframe Banking System\", \"\")\nRel(BigBankPlc.SoftwareSystems.InternetBanking, BigBankPlc.SoftwareSystems.MainframeBankingSystem, \"Get Account Transactions\")\nSHOW_LEGEND()\n@enduml",
    "language": "PlantUML",
    "type": "c4_context",
    "tags": ["C4", "context", "diagramme"],
    "description": "Diagramme C4 représentant le contexte de l'Internet Banking de Big Bank Plc, montrant les relations entre les composants du système.",
    "source": "https://www.plantuml.com/"
  }


,{
  "prompt": "@startuml\n' configures the library...\n@enduml",
  "code": "@startuml\n' configures the library\n!global $INCLUSION_MODE=\"local\"\n!global $LIB_BASE_LOCATION=\"../..\"\n\n' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n' loads the package bootstrap\ninclude('c4k8s/bootstrap')\n\n' loads the Item which embeds the element NetworkPolicy\ninclude('c4k8s/Element/NetworkPolicy')\n\n' load the c4model package\ninclude('c4model/bootstrap')\nNetworkPolicy('NetworkPolicy', 'Network Policy', 'an optional description label')\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "Component"],
  "description": "Définit un réseau politique avec son nom et une description.",
  "source": ""
}
,
{
  "prompt": "@startuml\n' configures the library\n!global $LIB_BASE_LOCATION=\"https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution\"\n\n' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n' loads the package bootstrap\ninclude('c4model/bootstrap')\n\n' loads the Item which embeds the element ExternalPerson\ninclude('c4model/Element/ExternalPerson')\n\nExternalPerson('ExternalPerson', 'External Person', 'an optional description label', 'an optional tech label')\n@enduml",
  "code": "@startuml\n!global $LIB_BASE_LOCATION=\"https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution\"\n!include $LIB_BASE_LOCATION/bootstrap.puml\ninclude('c4model/bootstrap')\ninclude('c4model/Element/ExternalPerson')\nExternalPerson('ExternalPerson', 'External Person', 'an optional description label', 'an optional tech label')\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "Component", "ExternalPerson"],
  "description": "Définit un composant externe appelé External Person avec une description et une technologie associées.",
  "source": "https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution"
}
,{
  "prompt": "@startuml SportRadar",
  "code": "Le code ci-dessus est un exemple d'un diagramme C4 pour la création d'événements dans le contexte de SportRadar.",
  "langage": "PlantUML",
  "type": ["c4_context"],
  "tags": ["C4", "Context Diagram", "SportRadar", "Event Creation"],
  "description": "Le diagramme décrit les composants du système de création d'événements dans SportRadar, notamment la frontière du système, les conteneurs et les relations entre eux.",
  "source": "Le code a été généré à partir du fichier PlantUML SportRadar.puml"
}
,
  {
    "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Component.puml",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Component.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\n\nclassDiagram",
    "language": "PlantUML",
    "type": "c4_context",
    "tags": ["C4", "context", "catalog api", "infrastructure"],
    "description": "Diagramme de contexte décrivant la relation entre l'API Catalog et son infrastructure.",
    "source": "https://github.com/plantuml-kt/plantuml-kt"
  },
  {
    "prompt": "@startuml wellcome_collection",
    "code": "@startuml wellcome_collection\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n@enduml",
    "language": "PlantUML",
    "type": "c4_context",
    "tags": ["C4-PlantUML", "Context Diagram"],
    "description": "Diagramme de contexte décrivant l'architecture du musée Wellcome Collection.",
    "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
  },
  {
    "prompt": "Diagramme C4 de Sequence",
    "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Save Changes Async - C4 Sequence - Component level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container_Boundary(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure, \"Infrastructure\") {\n        Component(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure.Components.CatalogContext, \"Catalog Context\", \"\", \"\" )\n    }\n}\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, DotNetEShop.SoftwareSystems.CatalogApi.Containers.Infrastructure.Components.CatalogContext, \"Save Changes Async\")\n@enduml",
    "language": "PlantUML",
    "type": "c4_sequence",
    "tags": ["C4", "sequence", "diagramme"],
    "description": "Ce diagramme C4 de sequence montre la séquence d'exécution du système Catalog Api, notamment l'interaction avec le contexte de catalogue.",
    "source": "PlantUML"
  }


,{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle index mission registration API\\n[mos-bengkel-service]\n... (le reste du code)",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle index mission registration API\\n[mos-bengkel-service]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"index mission registration API\\n[Component]\"){...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "C4",
    "plantuml",
    "component",
    "container",
    "boundary",
    "database"
  ],
  "description": "Diagramme C4 montrant l'architecture de la mission de registration API. Il s'agit d'une application web avec une couche de middleware, un contrôleur et une base de données.",
  "source": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle index mission registration API\\n[mos-bengkel-service]\n... (le reste du code)"
}
,{
  "prompt": "C4 Diagramme",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Container.puml\nAddElementTag(...)\nAddRelTag(...)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Catalog Types Add - C4 - Container level\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container(...)\n}\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Container", "Level"],
  "description": "Diagramme de contexte C4 pour l'API de catalogue d'un e-commerce .NET. Le diagramme montre la relation entre le système d'entreprise et les conteneurs d'infrastructure.",
  "source": "https://plantuml.com/"
}
,{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle deletePromo API\\n[mos-content-service]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"deletePromo API\\n[Component]\"{...\n\n@enduml",
  "code": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml",
  "langage": "C4 PlantUML",
  "type": "c4_component",
  "tags": ["API", "deletePromo", "Moservice", "JavaScript", "TypeScript"],
  "description": "Diagramme C4 représentant l'architecture d'une API deletePromo avec ses composants et relations.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml\nset separator none\ntitle Gateway\n",
  "code": "@startuml\nset separator none\ntitle Gateway\ntop to bottom direction\n!include <C4/C4>\n!include <C4/C4_Context>\n!include <C4/C4_Component>\nContainer_Boundary(\"SpringModulith.SpringModulith_boundary\", \"SpringModulith\", $tags=\"\") {\n  Component(SpringModulith.SpringModulith.Employee, \"Employee\", $techn=\"Module\", $descr=\"\", $tags=\"\", $link=\"\"\")\n  Component(SpringModulith.SpringModulith.Department, \"Department\", $techn=\"Module\", $descr=\"\", $tags=\"\", $link=\"\"\")\n  Component(SpringModulith.SpringModulith.Organization, \"Organization\", $techn=\"Module\", $descr=\"\", $tags=\"\", $link=\"\"\")\n  Component(SpringModulith.SpringModulith.Gateway, \"Gateway\", $techn=\"Module\", $descr=\"\", $tags=\"\", $link=\"\"\")\n}\nRel(SpringModulith.SpringModulith.Organization, SpringModulith.SpringModulith.Department, \"uses\", $techn=\"\", $tags=\"\", $link=\"\")\nRel(SpringModulith.SpringModulith.Organization, SpringModulith.SpringModulith.Employee, \"uses\", $techn=\"\", $tags=\"\", $link=\"\"\")\nRel(SpringModulith.SpringModulith.Gateway, SpringModulith.SpringModulith.Department, \"uses\", $techn=\"\", $tags=\"\", $link=\"\")\nRel(SpringModulith.SpringModulith.Gateway, SpringModulith.SpringModulith.Employee, \"uses\", $techn=\"\", $tags=\"\", $link=\"\"\")\nRel(SpringModulith.SpringModulith.Gateway, SpringModulith.SpringModulith.Organization, \"uses\", $techn=\"\", $tags=\"\", $link=\"\")\nRel(SpringModulith.SpringModulith.Department, SpringModulith.SpringModulith.Employee, \"uses\", $techn=\"\", $tags=\"\", $link=\"\"\")\nSHOW_LEGEND(true)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container", "Boundary"],
  "description": "Le diagramme montre un conteneur avec plusieurs composants, notamment un employé, un département et une organisation.",
  "source": "https://github.com/plantuml-stdlib/C4/blob/master/plantuml.C4"
}
,{
  "prompt": "C4 Container Example",
  "code": "@startuml \"C4 Container Example\"... @enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container", "Relation"],
  "description": "Diagramme C4 montrant une application web et sa base de données, avec différentes types de relations.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "@startuml ... @enduml",
  "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Context.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Catalog Brands To List Async - C4 - Context level\n\nSystem(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\", \"Provides catalog management services\")\n\nSHOW_LEGEND()\n@enduml",
  "language": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4",
    "context",
    "lifecycle",
    "new",
    "changed",
    "removed",
    "DotNetEShop",
    "CatalogApi"
  ],
  "description": "Diagramme C4 Context décrivant le contexte du catalogue d'une e-Shop Dot Net, montrant les relations entre les éléments de l'infrastructure du catalogue.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}

,{
  "prompt": "@startuml desenho-arquitetura",
  "code": "@startuml desenho-arquitetura\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons\n!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5\n!include DEVICONS/go.puml\n!include DEVICONS/mongodb.puml\nleft to right direction\nSystem_Boundary(fluxo, \"Bank\") {  \n    Container(LoanAPI, \"Loan API\", \"Golang\", \"API de gestão de empréstimos\", \"Golang\")\n    Container(RiskWorker, \"Risk Worker\", \"Golang\", \"Worker para analisar risco dos empréstimos\", \"Golang\")\n    Container(RabbitMQ, \"reservation-notifier\", \"RabbitMQ\", \"Queue para análise de risco\", \"rabbitMQ\")\n    ContainerDb(CustomerDB, \"Customer DB\", \"MongoDB\", \"Prover informações de clientes\", \"mongoDB\")\n    ContainerDb(LoanDB, \"Loan DB\", \"MongoDB\", \"Prover informações de empréstimos\", \"mongoDB\")\n    Container(CustomerAPI, \"Customer API\", \"Golang\", \"API de gestão de clientes\", \"Golang\")\n\n    Rel(CustomerAPI, CustomerDB, \"1º Criação e Busca de clientes\", \"go.mongodb.org/mongo-driver\")\n    Rel_R(LoanAPI, CustomerAPI, \"2º Verifica se cliente existe\", \"http/json\")\n    Rel_L(LoanAPI, LoanDB, \"3º Criação da solicitação de empréstimo\", \"go.mongodb.org/mongo-driver\")\n    Rel(LoanAPI, RabbitMQ, \"4º Envia evento LoanMade (Empréstimo criado)\", \"amqp\")\n    Rel_R(RabbitMQ, RiskWorker, \"5º Análisa o risco referente ao empréstimo\", \"amqp\")\n    Rel(RiskWorker, LoanAPI, \"6º Atualiza se empréstimo foi aprovado ou não\", \"amqp\")\n}",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "conteneur", "arquiteture"],
  "description": "Ce diagramme C4 montre l'architecture d'un système de gestion de prêts. Il décrit les conteneurs, leurs relations et les services qui y sont associés.",
  "source": "https://github.com/tupadr3/plantuml-icon-font-sprites"
}
,{
  "prompt": "Container diagram of the demo setup",
  "code": "@startuml\n!include <C4/C4_Container>\n... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["container", "storage network", "storage cluster", "docker"],
  "description": "Diagramme représentant la structure d'un conteneur de stockage.",
  "source": "https://github.com/plantuml-stdlib/C4"
}
,{
  "prompt": "@startuml !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml ... @enduml",
  "code": "@startuml !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml ... @enduml",
  "langage": "puml",
  "type": [
    "c4_context"
  ],
  "tags": [
    "C4",
    "contenu",
    "diagramme",
    "modèle",
    "plantuml",
    "uml",
    "UML"
  ],
  "description": "Ce diagramme C4 représente le modèle de contenu d'une application TodoList. Il montre les composants, les relations entre eux et la base de données.",
  "source": "@startuml !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml ... @enduml"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\nSHOW_PERSON_OUTLINE()\nAddElementTag(users, $bgColor=\\\"#DDDDDD\\\", $borderColor=\\\"#DDDDDD\\\", $fontColor=\\\"#000000\\\")\nPerson(customer, \\\"Customers\\\", \\\"Users who buy products\\\", $tags=users)\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\nSHOW_PERSON_OUTLINE()\nAddElementTag(users, $bgColor=\"#DDDDDD\", $borderColor=\"#DDDDDD\", $fontColor=\"#000000\")\nPerson(customer, \"Customers\", \"Users who buy products\", $tags=users)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["customer", "user", "product"],
  "description": "Diagramme C4 montrant les utilisateurs qui achètent des produits.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "System Landscape diagram for Big Bank plc",
  "code": "@startuml\n!include <C4/C4_Context>\n... reste du code ...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["system_landscape", "big_bank_plc", "internet_banking", "atm", "email_system", "mainframe"],
  "description": "Diagramme montrant l'architecture du système de la banque Big Bank plc, comprenant des systèmes d'internet banking, d'ATM et de messagerie.",
  "source": "https://plantuml.com/"
}
,{
  "prompt": "@startuml\ntitle Checkout\n...@enduml",
  "code": "@startuml\ntitle Checkout\ntop to bottom direction\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nContainer_Boundary(\"EcommerceApplication.EcommerceApplication_boundary\", \"EcommerceApplication\", $tags=\"\") {\n  Component(EcommerceApplication.EcommerceApplication.Common, \"Common\", \"Module\", \"\", $tags=\"\")\n  Component(EcommerceApplication.EcommerceApplication.Checkout, \"Checkout\", \"Module\", \"\", $tags=\"\")\n}\nRel_D(EcommerceApplication.EcommerceApplication.Checkout, EcommerceApplication.EcommerceApplication.Common, \"uses\", $tags=\"\")\nSHOW_LEGEND(true)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container", "Boundary"],
  "description": "Diagramme C4 représentant la frontière d'application de l'EcommerceApplication.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,{
  "prompt": "@startuml \"Contralto Container Diagram\"\n",
  "code": "@startuml \"Contralto Container Diagram\"\n!include ../C4-PlantUML/C4_Context.puml\n!include ../C4-PlantUML/C4_Container.puml\n!include ../C4-PlantUML/C4_Component.puml\n\nskinparam wrapWidth 200\n'skinparam maxMessageSize 200\n\nLAYOUT_LEFT_RIGHT\n\nPerson_Ext(user, Telegram User, \"A Telegram user\")\nSystem_Boundary(c1, \"Telegram\") {\n    System_Ext(telegramWebhookService, \"Telegram Webhook Server\")\n}\nSystem_Boundary(c2, \"Amazon Web Services\") {\n\nContainer(awsAPIGateway, \"Webhook Gateway\", \"AWS API Gateway\", \"Receives webhook requests from Telegram\")\nContainer(processingQueue, \"Task Processing Queue\", \"AWS Simple Queue Service\", \"Message queue for processing tasks\")\nContainer(requestQueue, \"Network Requests Queue\", \"AWS Simple Queue Service\", \"Message Queue for network request tasks\")\nContainer(processingLambda, \"Processing Lambda Functions\", \"AWS Lambda Functions\", \"Computational Processing Functions\")\nContainer(requestLambda, \"Network Request Lambda Functions\", \"AWS Lambda Functions\", \"Processing of External Network Requests\")\nContainerDb(dynamoDb, \"Tenor ID Store\", \"AWS DynamoDB\", \"Storage of Tenor IDs\")\n}\nSystem_Boundary(c3, \"Tenor API\") {\n    System_Ext(tenorApiService, \"Tenor API Gateway\")\n}\nRel(user, telegramWebhookService, \"Sends search query\", \"Telegram Protocols\")\nRel(telegramWebhookService, awsAPIGateway, \"Sends webhook request\", \"HTTP POST\")\nRel(awsAPIGateway, processingQueue, \"Queue Search Query\", \"HTTP POST\")\nRel_Neighbor(processingQueue, processingLambda, \"Invoke\")\nRel(processingLambda, requestQueue, \"Queue Network Request Tasks\", \"HTTP POST\")\nRel_Neighbor(requestQueue, requestLambda, \"Invoke\")\nRel(requestLambda, processingQueue, \"Queue Network Request Responses\", \"HTTP POST\")\nRel(requestLambda, tenorApiService, \"Send Tenor API Request\", \"REST\")\nRel(requestLambda, dynamoDb, \"Query for Tenor ID\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["container", "AWS", "Telegram", "API Gateway"],
  "description": "Ce diagramme montre les différentes couches de l'architecture du Contralto, notamment la couche d'applications et la couche de services. Il met en évidence la relation entre les différents composants et les flux de données qui les relient.",
  "source": "https://github.com/contralto/container-diagram"
}
,{
  "prompt": "@startuml\n...\n@enduml",
  "code": "@startuml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container Diagram", "Human Protocol", "Human API"],
  "description": "Diagramme de conteneur pour le protocole Humain - L'API Humaine.",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml social_network_context",
  "code": "Voir le code ci-dessus",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["social_network", "user", "system"],
  "description": "Diagrame de contexte d'une réseau social avec les relations entre utilisateur et système.",
  "source": "@startuml social_network_context"
}
,{
  "prompt": "",
  "code": "@startuml\n!include tmpl/C4_Context.puml\nSHOW_PERSON_OUTLINE()\nPerson(user, \"User\")\nSystem(movies, \"Movies\")\nSystem_Ext(mail_system, \"E-mail\")\nRel_Down(user, movies, \"\\u043f\\u043e\\u043b\\u044c\\u0437\\u0432\\u0430\\u0435\\u0442\\u0441\\u044f\")\nRel_Up(mail_system, user, \"\\u041e\\u0442\\u043f\\u0430\\u0432\\u043a\\u0430 email \\u043f\\u043e\\u043b\\u0437\\u0432\\u0430\\u043d\\u043e\\u0432\\u0443\")\nRel_Right(movies, mail_system, \"\\u041e\\u0442\\u043f\\u0430\\u0432\\u043a\\u0430 email\")\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["C4", "Context", "diagramme"],
  "description": "Ce diagramme C4 montre le contexte d'une application avec des utilisateurs, des films et un système de messagerie.",
  "source": "https://example.com"
}
,{
  "prompt": "Déploiement d'une application web avec MongoDB et Docker",
  "code": "@startuml...@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "déploiement", "MongoDB", "Docker"],
  "description": "Le diagramme représente le déploiement d'une application web avec une base de données MongoDB et des conteneurs Docker.",
  "source": "./lib/C4_Deployment.puml, ./lib/C4_Container.puml"
}
,{
  "prompt": "",
  "code": "@startuml...\nEND",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "c4",
    "context",
    "container",
    "component"
  ],
  "description": "Le diagramme représente l'architecture du système To Do App, en montrant les différents conteneurs et leurs relations.",
  "source": "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/refs/heads/main/icons"
}
,{
  "prompt": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Sequence.puml\n\ntitle E Commerce Platform - Generate Demand - Order Management - Order Service - Message Handler - Handle Fraud Check Result Event - C4 Sequence - Context level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, \"Order Service\", \"\")\nSystem(ECommercePlatform.Deliver.FraudManagement.SoftwareSystems.FraudService, \"Fraud Service\", \"\")\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, \"Handle Fraud Check Result Event\")\nRel(ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, ..FraudService, \"Receive Fraud Check Result Event\")\n@enduml",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Sequence.puml\n\ntitle E Commerce Platform - Generate Demand - Order Management - Order Service - Message Handler - Handle Fraud Check Result Event - C4 Sequence - Context level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, \"Order Service\", \"\")\nSystem(ECommercePlatform.Deliver.FraudManagement.SoftwareSystems.FraudService, \"Fraud Service\", \"\")\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, \"Handle Fraud Check Result Event\")\nRel(ECommercePlatform.GenerateDemand.OrderManagement.SoftwareSystems.OrderService, ..FraudService, \"Receive Fraud Check Result Event\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4 Sequence Diagram",
    "Context Level",
    "E Commerce Platform"
  ],
  "description": "Ce diagramme C4 démontre la séquence de traitement pour gérer les demandes d'un e-commerce, en intégrant une vérification anti-fraude.",
  "source": "https://github.com/plantuml-stdlib/C4/blob/master/diagrams/C4_Sequence.puml"
}
,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["C4", "plantuml", "diagramme"],
  "description": "Diagramme C4 montrant la structure d'une application avec divers services et composants.",
  "source": ""
}
,{
  "prompt": "",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\nHIDE_STEREOTYPE()\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["game", "oop", "plantuml"],
  "description": "Diagramme de classes pour un jeu en temps réel, avec les éléments du jeu et leurs relations.",
  "source": ""
}
,{
  "prompt": "",
  "code": "@startuml\n!include <C4/C4_Component>\nLAYOUT_WITH_LEGEND()\ntitle 弹幕列表组件图\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "context", "diagramme"],
  "description": "Le diagramme présente le contexte du système de pop-ups en montrant les différents composants et systèmes impliqués.",
  "source": "PlantUML"
}
,{
  "prompt": "",
  "code": "@startuml\n!pragma revision 1\n\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\n!define AzurePuml https://raw.githubusercontent.com/plantuml-stdlib/Azure-PlantUML/master/dist\n!includeurl AzurePuml/AzureCommon.puml\n!includeurl AzurePuml/AzureC4Integration.puml\n!includeurl AzurePuml/Management/AzureResourceGroups.puml\n\nAzureResourceGroups(cloud_shell_storage_westeurope, 'cloud-shell-storage-westeurope', 'Azure Resource Group')\n\n!includeurl AzurePuml/Storage/AzureStorage.puml\nAzureStorage(csb100320041428ff8f, 'csb100320041428ff8f', 'Microsoft.Storage/storageAccounts')\nRel(cloud_shell_storage_westeurope, csb100320041428ff8f, 'Uses', 'Resource' )\n\n!includeurl AzurePuml/Storage/AzureStorage.puml\nAzureStorage(csb1003200033b9b8b7, 'csb1003200033b9b8b7', 'Microsoft.Storage/storageAccounts')\nRel(cloud_shell_storage_westeurope, csb1003200033b9b8b7, 'Uses', 'Resource' )\n\nLAYOUT_WITH_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "Azure",
    "C4-Container",
    "ResourceGroup"
  ],
  "description": "Diagrame C4 représentant les ressources Azure et leurs relations.",
  "source": ""
}
,{
  "prompt": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n...@enduml",
  "code": "@startuml\n!include ../../../../../../../../.c4s/C4_Sequence.puml\n...\n@enduml",
  "language": "PlantUML",
  "type": "c4_sequence",
  "tags": [
    "C4",
    "sequence",
    "diagramme",
    "PlantUML",
    "ecommerce",
    "price_management"
  ],
  "description": "Diagramme C4 Sequence représentant le processus de création et de gestion d’un produit dans une plateforme e-commerce, incluant les interactions entre les services liés au prix.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}

,{
  "prompt": "goods_relations",
  "code": "@startuml \"goods_relations\"\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\nRel(goods_service, goods_db, \"Stores goods information\")\nRel(goods_service, goods_search, \"Indexes goods\")\n@enduml",
  "langage": "puml",
  "type": "c4_container",
  "tags": ["C4", "container", "PlantUML", "uml"],
  "description": "Le diagramme représente les relations entre les composants de la logique métier liée aux biens.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml...\n@enduml",
  "code": "@startuml\n!include ../../../../../../.c4s/C4_Container.puml...\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")...\n@enduml",
  "language": "PlantUML",
  "type": "c4_container",
  "tags": [
    "C4",
    "container",
    "PlantUML",
    "architecture",
    "ecommerce",
    "analyse",
    "modele"
  ],
  "description": "Diagramme C4 Container illustrant l’architecture d’un système e-commerce. Il montre les relations entre les composants principaux, tels que l’application Storefront App, le service de gestion des commandes et le service de gestion des paniers.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}

,{
  "prompt": "@startuml\n!pragma revision 1\n\n... (le reste du code)",
  "code": "@startuml\n!pragma revision 1\n\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\n... (le reste du code)\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": [
    "azure",
    "resource_group",
    "data_factory",
    "managed_identity",
    "storage",
    "system_topic"
  ],
  "description": "Diagrame C4 représentant une architecture Azure avec des ressources et des identités gérées.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
    "prompt": "Generated with Spring Modulith",
    "code": "' Generated with Spring Modulith\n' https://docs.spring.io/spring-modulith/reference/documentation.html\n\n@startuml\n\ntitle ModulithApplication\n\ntop to bottom direction\n\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\n\nContainer_Boundary(\"ModulithApplication.ModulithApplication_boundary\", \"ModulithApplication\", $tags=\"\") {\n  Component(ModulithApplication.ModulithApplication.Ui, \"Ui\", \"Module\", \"\", $tags=\"\")\n  ' ... ajouter d'autres composants ici\n}\n\n@enduml",
    "langage": "PlantUML",
    "type": "c4_container",
    "tags": ["Spring", "Modulith", "C4", "Container"],
    "description": "Diagramme de container C4 représentant l'application Modulith avec ses modules et leurs relations.",
    "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
  },
  {
    "prompt": "@startuml",
    "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Component.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n\n' ... ajouter ici les composants et relations\n\n@enduml",
    "langage": "PlantUML",
    "type": "c4_component",
    "tags": ["component", "c4", "plantuml"],
    "description": "Diagramme C4 Component décrivant la structure d'un composant de l'application Basket Api",
    "source": "https://github.com/C4Model/C4-PlantUML"
  }
,
{
  "prompt": "@startuml",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle remove Mission API\\n[mos-bengkel-service]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"remove Mission API\\n[Component]\"){\nComponent(mission_controller, \"Mission Controller\", \"Controller | TypeScript\", \"Controller for Mission Related Function\\n(mos-bengkel-service)\")\nComponent(auth_operator_middleware, \"Auth Operator Middleware\", \"Middleware | TypeScript\", \"Middleware for Authentication\\n(mos-bengkel-service)\")\nComponent(mainMiddleware, \"Main Middleware\", \"Middleware | TypeScript\", \"Main Middleware for Moservice.id\\n(mos-bengkel-service)\")\nComponent(removeMission, \"removeMission\", \"Function | TypeScript\", \"Main Function for Remove Mission data by ID\\n(mos-bengkel-service)\")\nComponent(updateMission, \"MissionRepository.update\", \"Function | TypeScript\", \"Function for Update Mission data by ID\\n(mos-bengkel-service)\")\n}\nContainerDb(database, \"Moservice Storage\", \"mySQL Database\", \"All store for save data and content for Moservice.id\")\nRel_D(Web_Moservice, mainMiddleware, \"1. Request Remove Mission data by ID\")\nRel_D(mainMiddleware, auth_operator_middleware, \"2. Request Remove Mission data by ID\")\nRel_D(auth_operator_middleware, mission_controller, \"3. Request Remove Mission data by ID\")\nRel_D(mission_controller, removeMission, \"4. Request Remove Mission data by ID\")\nRel_D(removeMission, updateMission, \"5. Remove Mission data by ID\")\nRel_D(updateMission, database, \"6. Update Mission data by ID\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "Component", "Container", "Boundary", "Database"],
  "description": "Diagramme C4 Component décrivant la structure et le fonctionnement de l'API Mission.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml...\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml\nLAYOUT_LEFT_RIGHT()\n...\\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["c4", "plantuml", "container"],
  "description": "Diagramme C4 de type container décrivant les interactions entre un système SRVCE, un agent de contrôle de endémies et la population.",
  "source": "@startuml\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml..."
}
,{
  "prompt": "@startuml\n' configures the library\n!global $INCLUSION_MODE=\"local\"\n!global $LIB_BASE_LOCATION=\"../..\"\n\n' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n' loads the package bootstrap\ninclude('c4model/bootstrap')\n\n' loads the Item which embeds the element ExternalSystem\ninclude('c4model/Element/ExternalSystem')\n\nExternalSystem('ExternalSystem', 'External System', 'an optional description label', 'an optional tech label')\n@enduml",
  "code": "@startuml\\n!global $INCLUSION_MODE=\\\"local\\\"\n!global $LIB_BASE_LOCATION=\\\"../..\\\"\n!include $LIB_BASE_LOCATION/bootstrap.puml\\ninclude('c4model/bootstrap')\\ninclude('c4model/Element/ExternalSystem')\\nExternalSystem('ExternalSystem', 'External System', 'an optional description label', 'an optional tech label')\\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["c4", "container", "external system"],
  "description": "Le diagramme décrit un conteneur d'application qui intègre un système externe. Le système externe est représenté par l'élément ExternalSystem.",
  "source": "https://github.com/plantuml/plantuml-include"
}
,{
  "prompt": "",
  "code": "@startuml example-system-containers\n!include <C4/C4_Container>\nLAYOUT_WITH_LEGEND()\ntitle Container diagram for Example System\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "Container",
    "Diagramme",
    "Système d'exemples",
    "Web Application",
    "API Application",
    "Base de données MongoDB"
  ],
  "description": "Ce diagramme C4 montre les conteneurs du système d'exemples, comprenant une application web, une API et deux bases de données.",
  "source": "https://github.com/C4Model/C4-PlantUML#readme"
}
,{
  "prompt": "@startuml Repository_Analysis_Architecture",
  "code": "@startuml Repository_Analysis_Architecture\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n\n!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons\n!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5\n\n!include DEVICONS/html5.puml\n!include DEVICONS/python.puml\n!include DEVICONS/mysql.puml\n!include DEVICONS/github.puml\n!include FONTAWESOME/users.puml\n\nPerson(user, \"User\")\n\nContainer(web_client, \"Browser\", \"HTML\", \"The main interface that the customer interacts with\", $sprite=\"html5\")\n\nSystem_Boundary(c1, \"Repository Analysis System\") {\n  Container(web_app, \"Web Application\", \"Python, Flask\", \"Allows users to analyze git repositories\", $sprite=\"python\")\n  ContainerDb(db, \"Database\", \"MySQL\", \"Stores repositories and analysis information\", $sprite=\"mysql\")\n  Container(archive, \"Archive\", \"File Storage\", \"Stores analysis results\")\n}\n\nSystem_Ext(mail_system, \"E-mail System\")\nSystem(github, \"GitHub\", $sprite=\"github\")\n\nRel_Down(user, web_client, \"Uses\")\nRel_Down(web_client, web_app, \"Uses\", \"HTTPS\")\nRel_R(web_app, db, \"Reads/Writes\")\nRel_Down(web_app, github, \"Fetch repositories\", \"HTTPS\")\nRel_L(web_app, archive, \"Writes\", \"Files\")\nRel_L(web_app, mail_system, \"Creates e-mail\")\nRel_Up(mail_system, user, \"Sends e-mail\")\n\nSHOW_LEGEND()\n@enduml",
  "language": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4",
    "context",
    "architecture",
    "repository",
    "analysis"
  ],
  "description": "Diagramme de contexte C4 pour l'architecture du système d'analyse des dépôts GitHub.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/blob/master/C4_Container.puml"
}

,{
  "prompt": "System Context diagram for Internet Banking System",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Context.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["context", "system", "customer", "banking_system", "mail_system", "mainframe"],
  "description": "Ce diagramme représente le contexte du système de banque en ligne, comprenant les relations entre les systèmes et les entités.",
  "source": "https://github.com/RicardoNiepel/C4-PlantUML"
}
,{
  "prompt": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Component.puml\n' ... (le reste du code)\n@enduml",
  "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Component.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n\n' ... (ajouter les composants et relations ici)\n\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "C4",
    "component",
    "diagramme",
    "infrastructure",
    "catalog_api"
  ],
  "description": "Le diagramme montre le niveau de composant du système Catalog Api, avec ses différents conteneurs et composants.",
  "source": "https://example.com/plantuml-code"
}

,{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\.c4s\\C4_Container.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\n\nskinparam linetype polyline\n\ntitle E Commerce Platform - Deliver - Payments - Payment Provider - C4 Static - Container level\n\nSystem(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentProvider, \"Payment Provider\", \"\")\nSystem_Boundary(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService, \"Payment Service\") {\n    Container(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Api, \"Api\", \"\", \"\")\n    ContainerDb(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Database, \"Database\", \"\", \"\")\n    ContainerQueue(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Messaging, \"Messaging\", \"\", \"\")\n}\n\nRel(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentProvider, ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Api, \"Uses\")\nRel(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Api, ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Database, \"Uses\")\nRel(ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Api, ECommercePlatform.Deliver.Payments.SoftwareSystems.PaymentService.Containers.Messaging, \"Uses\")\n\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container"],
  "description": "Diagramme C4 montrant la structure de l'application E-commerce Platform, en particulier le niveau des conteneurs.",
  "source": ""
}
,{
  "prompt": "C4 - Context level",
  "code": "@startuml\n!include ..\\..\\..\\.c4s\\C4_Context.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "c4",
    "context",
    "internet banking",
    "mobile app",
    "view account transactions"
  ],
  "description": "Diagramme C4 montrant le contexte du système d'internet banking de la Banque Big Bank Plc, avec les relations entre les différents composants.",
  "source": "https://github.com/C4Model/C4-PlantUML/"
}
,{
  "prompt": "To Do App Example - To Do App - Web Api - Get Tasks - C4 Static - Container level",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\...\\.c4s\\C4_Container.puml\n!define ICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/refs/heads/main/icons\n!include ICONS/devicons/dotnet.puml\n!include ICONS/devicons/msql_server.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\ntitle To Do App Example - To Do App - Web Api - Get Tasks - C4 Static - Container level\nSystem_Boundary(ToDoAppExample.SoftwareSystems.ToDoApp, \"To Do App\") {\n    Container(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.WebApi, \"Web Api\", \"\", \"\", \"dotnet\")\n    Container(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.Database, \"Database\", \"\", \"\", \"msql_server\")\n}\nRel(ToDoAppExample.SoftwareSystems.ToDoApp.Containers.WebApi, ToDoAppExample.SoftwareSystems.ToDoApp.Containers.Database, \"Uses\")\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "C4",
    "Container",
    "To Do App",
    "Web Api",
    "Database"
  ],
  "description": "Le diagramme décrit l'architecture de l'application To Do App, en montrant les conteneurs Web API et Database.",
  "source": "https://github.com/tupadr3/plantuml-icon-font-sprites"
}
,{
  "prompt": "@startuml Land Grants System Context",
  "code": "voire le contenu ci-dessus",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "landGrantsSystem",
    "applicationUi",
    "arcGis",
    "paymentHub",
    "fraudService",
    "agreementService",
    "landChangeAudit"
  ],
  "description": "Diagramme C4 du système de concessions terriennes, décrivant le contexte et les relations entre les composants.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml"
}
,{
  "prompt": "",
  "code": "@startuml Code\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nTITLE Code - C4 Model\nclass Stock {\n  - _context ApplicationDbContext\n\n  + getAllAsync(QueryObject query) : Task<List<Stock>>\n  + AddAsync(Stock stockModel) : Task<Stock>\n  + UpdateAsync(int id, Stock stockModel) : Task<Stock?>\n  + FindAsync(int id) : Task<Stock?>\n  + DeleteAsync(Stock stockModel) : Task<Stock>\n  + stockExists(int stockId) : Task<bool>\n  + findStockByName(string symbol) : Task<Stock>\n}\nclass Comment {\n  - _context ApplicationDbContext\n\n  + getAllAsync() : Task<List<Comment>>\n  + AddAsync(Comment commentModel) : Task<Comment>\n  + UpdateAsync(int id, Comment commentModel) : Task<Comment?>\n  + FindAsync(int id) : Task<Comment?>\n  + DeleteAsync(Comment commentModel) : Task<Comment>\n  + stockExists(int stockId) : Task<bool>\n}\nclass Portfolio {\n  - _context ApplicationDbContext\n\n  + getUserPortfolio(AppUser user) : Task<List<Portfolio>>\n  + createAsync(Portfolio portfolio) : Task<Portfolio>\n  + findPortfolioByStockAsync(Stock stock) : Task<Portfolio>\n  + findPortfolioByIdAsync(string userId, int id) : Task<Portfolio?>\n  + deletePortfolioAsync(Portfolio portfolio) : Task<Portfolio>\n}\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["c4", "component", "stock", "comment", "portfolio"],
  "description": "Le diagramme représente les classes Stock, Comment et Portfolio ainsi que leurs méthodes.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml\n!include <C4/C4_Container.puml>\nLAYOUT_TOP_DOWN()\ntitle \"Manage vaccinations in schools container view\"\n...",
  "code": "@startuml\n!include <C4/C4_Container.puml>\nLAYOUT_TOP_DOWN()\ntitle \"Manage vaccinations in schools container view\"\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "container_view",
    "manage_vaccinations",
    "schools"
  ],
  "description": "Ce diagramme C4 montre la vue du conteneur de gestion des vaccinations dans les écoles, montrant les systèmes et les composants impliqués.",
  "source": "@startuml\n!include <C4/C4_Container.puml>\nLAYOUT_TOP_DOWN()\ntitle \"Manage vaccinations in schools container view\"\n..."
}
,{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\.c4s\\C4_Container.puml\n... (restant du code)",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["c4", "container", "uml"],
  "description": "Diagramme C4 montrant la structure de conteneurs d'une application To Do App.",
  "source": ""
}
,{
  "prompt": "@startuml\n!$ThemeToBeCHecked=C4_FirstTest\n...rest of the code...\n@enduml",
  "code": "@startuml\n!$ThemeToBeCHecked=C4_FirstTest\n' convert it with additional command line argument -DRELATIVE_INCLUDE=\"./..\" to use locally\n!if %variable_exists(\"RELATIVE_INCLUDE\")\n  ' !theme C4_FirstTest from %get_variable_value(\"RELATIVE_INCLUDE\")/themes\n  !theme $ThemeToBeCHecked from ./../themes\n!else\n  !theme $ThemeToBeCHecked from https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/themes\n!endif\n!if %variable_exists(\"RELATIVE_INCLUDE\")\n  !include ./TestAllElementsWithLegend.puml\n!else\n  !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/percy/TestAllElementsWithLegend.puml\n!endif\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["c4", "context"],
  "description": "Définition du thème à utiliser pour le diagramme C4. Inclusion de l'ensemble des éléments avec légende.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master"
}
,{
  "prompt": "Smart Home System Telemetry Code Diagram",
  "code": "@startuml\\ntitle Smart Home System Telemetry Code Diagram\\ntop to bottom direction\\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml\\n\\nclass TelemetryRepository {\\n  +void find()\\n  +void save()\\n}\\n\\nclass TelemetryConsumer {\\n  +void receive()\\n}\\n\\nclass TelemetryService {\\n  +void business()\\n}\\n\\nclass TelemetryController {\\n  +void do()\\n}\\n\\nTelemetryController \"1\" -- \"1\" TelemetryService : includes\\nTelemetryService \"1\" -- \"1\" TelemetryConsumer : includes\\nTelemetryService \"1\" -- \"1\" TelemetryRepository : includes\\n\\n@enduml",
  "langage": "puml",
  "type": "c4_container",
  "tags": ["c4", "plantuml", "smart home", "telemetry"],
  "description": "Diagramme C4 représentant le code du système de télémesure pour un smart home.",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml\ntitle Trader X Example - TraderX - TraderX DB - Save Position State - C4 Sequence - Context level\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(TraderXExample.SoftwareSystems.TraderX, \"TraderX\", \"TraderX\")\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, TraderXExample.SoftwareSystems.TraderX, \"Save Position State\")\n@enduml",
  "code": "@startuml\ntitle Trader X Example - TraderX - TraderX DB - Save Position State - C4 Sequence - Context level\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(TraderXExample.SoftwareSystems.TraderX, \"TraderX\", \"TraderX\")\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, TraderXExample.SoftwareSystems.TraderX, \"Save Position State\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4Sequence", "ContextLevel"],
  "description": "Diagrame C4 Sequence montrant le contexte d'un système TraderX qui sauvegarde l'état de position.",
  "source": null
}
,{
  "prompt": "Trader X Example",
  "code": "@startuml\n!include ..\\..\\.c4s\\C4_Sequence.puml\n\ntitle Trader X Example - TraderX - People Service - Get People Data - C4 Sequence - Context level\n\nSystem_Ext(C4InterFlow.SoftwareSystems.ExternalSystem, \"External\", \"\")\nSystem(TraderXExample.SoftwareSystems.TraderX, \"TraderX\", \"TraderX\")\nSystem(TraderXExample.SoftwareSystems.UserDirectory, \"User Directory\", \"\")\n\nRel(C4InterFlow.SoftwareSystems.ExternalSystem, TraderXExample.SoftwareSystems.TraderX, \"Get People Data\")\nRel(TraderXExample.SoftwareSystems.TraderX, TraderXExample.SoftwareSystems.UserDirectory, \"Select People Data\", \"LDAP\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_sequence",
  "tags": ["C4", "Sequence", "Context", "Level"],
  "description": "Diagramme de séquence C4 montrant le flux d'informations entre TraderX et l'utilisateur.",
  "source": ""
}
,{
  "prompt": "Analyse de diagramme c4 PlantUML",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\.c4s\\C4_Context.puml\nAddElementTag(...)\nAddRelTag(...)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["c4", "context", "static", "plantuml"],
  "description": "Diagramme C4 contextuel représentant le système TraderX et ses relations avec les services de référence données.",
  "source": "https://example.com/diagramme-c4-plantuml"
}
,{
  "prompt": "@startuml !includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml title Component Diagram for AddProperty(\"repository\", \"MS-Authentication\") AddProperty(\"url\", \"/api/v1/auth/pin-v4\") Container(createOrValidatePINAPI, \"Create or Validate PIN API\", \"Microservices | NodeJS\", \"Create or Validate PIN Adiraku\") @enduml",
  "code": "@startuml !includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml title Component Diagram for AddProperty(\"repository\", \"MS-Authentication\") AddProperty(\"url\", \"/api/v1/auth/pin-v4\") Container(createOrValidatePINAPI, \"Create or Validate PIN API\", \"Microservices | NodeJS\", \"Create or Validate PIN Adiraku\") @enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "Component Diagram", "AddProperty", "Container", "API"],
  "description": "Ce diagramme montre le composant API de création ou de validation de PIN. Il utilise des services de microservices NodeJS.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Component.puml",
  "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Component.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n' ... ajouter d'autres tags ou styles ici\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - C4 - Component level\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container_Boundary(DotNetEShop.SoftwareSystems.CatalogApi.Infrastructure, \"Infrastructure\", \"\") {\n        ' ... définir les composants internes ici\n    }\n}\n\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "c4_component",
    "plantuml",
    "lifecycle",
    "catalog_api"
  ],
  "description": "Diagramme de niveau composant pour la Catalog Api avec un contexte de catalogue et une infrastructure.",
  "source": "https://www.plantuml.com/"
}

,{
  "prompt": "@startuml container_diagram\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml...\n@enduml",
  "code": "@startuml container_diagram\n...\\n@enduml",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": ["credit", "process", "container", "diagram"],
  "description": "Diagrame des conteneurs du processus de crédit, montrant les différents composants et leurs relations.",
  "source": "@startuml container_diagram\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml...\n@enduml"
}
,{
  "prompt": "SummonBot-SetArea",
  "code": "@startuml SummonBot-SetArea\n... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_sequence",
  "tags": ["sequence", "diagramme", "C4", "plantuml"],
  "description": "Ce diagramme décrit les interactions entre le client, l'API de contrôle et la base de données lors du summon d'un bot et de la définition d'une zone minière.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Sequence.puml"
}
,{
  "prompt": "Analyse du diagramme C4",
  "code": "@startuml ...\n ...\n @enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "container", "architecture", "système", "modèle"],
  "description": "Le diagramme C4 montre la structure d'un système à plusieurs niveaux, en particulier le niveau de conteneur. Il décrit les conteneurs et les relations entre eux.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}
,{
  "prompt": "Big Bank Plc - Internet Banking - Database - Select User Data - C4 Static - Context level",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\.c4s\\C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n... (le reste du code)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "context",
    "c4",
    "static",
    "internet banking"
  ],
  "description": "Ce diagramme C4 Context présente l'architecture contextuelle du système d'internet banking de Big Bank Plc.",
  "source": "https://example.com/plantuml"
}
,{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle update sp notif API\\n[mos-user-service]\n... (le reste du code)",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle update sp notif API\\n[mos-user-service]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"update sp notif API\\n[Component]\"){\n... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["plantuml", "c4", "container", "api", "notification", "database"],
  "description": "Diagramme C4 montrant la structure de l'API pour gérer les notifications en temps réel. Il montre le conteneur Web Moservice et ses composants internes.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/blob/master/C4_Component.puml"
}
,{
  "prompt": "@startuml ... @enduml",
  "code": "@startuml ...\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": [
    "microservices",
    "core",
    "kernel",
    "functionalities",
    "data_bus"
  ],
  "description": "Le diagramme représente la décomposition des contextes limités du noyau, comprenant les microservices, le bus de données et les conteneurs.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml"
}
,{
  "prompt": "@startuml ... @enduml",
  "code": " voir le code ci-dessus",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4",
    "context diagram",
    "system boundary",
    "containers",
    "components",
    "relations"
  ],
  "description": "Ce diagramme C4 représente le contexte de la plateforme de monitorage du mentálisme. Il montre les différents acteurs, les systèmes et les composants qui interagissent entre eux.",
  "source": "https://github.com/YourRepositoryName"
}
,{
  "prompt": "@startuml\n' configures the library\n!global $LIB_BASE_LOCATION=\"https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution\"\n\n' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n' loads the package bootstrap\ninclude('c4k8s/bootstrap')\n\n' loads the Item which embeds the element Lease\ninclude('c4k8s/Element/Lease')\n\n' load the c4model package\ninclude('c4model/bootstrap')\nLease('Lease', 'Lease', 'an optional description label')\n@enduml",
  "code": "@startuml\n' configures the library\n!global $LIB_BASE_LOCATION=\"https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution\"\n\n' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n' loads the package bootstrap\ninclude('c4k8s/bootstrap')\n\n' loads the Item which embeds the element Lease\ninclude('c4k8s/Element/Lease')\n\n' load the c4model package\ninclude('c4model/bootstrap')\nLease('Lease', 'Lease', 'an optional description label')\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container"],
  "description": "Définition d'un conteneur C4 avec des éléments de leasing.",
  "source": "https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution"
}
,{
  "prompt": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Context.puml\n' ... (rest of the code)\n@enduml",
  "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Context.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\n' ... ajouter les systèmes et relations ici\n\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Context", "diagramme"],
  "description": "Diagramme C4 Context représentant l'architecture de l'E Commerce Platform, avec les systèmes et relations entre eux.",
  "source": "https://github.com/plantuml/plantuml"
}

,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Context.puml\nLAYOUT_WITH_LEGEND()\n... (le reste du code)",
  "code": "@startuml\n!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Context.puml\nLAYOUT_WITH_LEGEND()\nPerson(pbc, \"Personal Banking Customer\", \"A customer of the bank, with personal bank accounts.\")\nSystem(ibs, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\nSystem_Ext(es, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\nSystem_Ext(mbs, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\nRel(pbc, ibs, \"Uses\")\nRel(es, pbc, \"Sends e-mails to\")\nRel(ibs, es, \"Sends e-mails\", \"SMTP\")\nRel(ibs, mbs, \"Uses\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["context", "diagramme C4"],
  "description": "Ce diagramme représente le contexte du système bancaire en ligne. Il montre les relations entre le client, le système bancaire et le système de messagerie.",
  "source": "https://github.com/adrianvlupu/C4-PlantUML"
}
,{
  "prompt": "Component diagram for Internet Banking System",
  "code": "@startuml component-diagram-for-internet-banking-system-c4context\n!include <C4/C4_Context>\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["internet banking", "system", "customer", "banking"],
  "description": "Ce diagramme montre le contexte de l'Internet Banking System, y compris les personnes impliquées et les systèmes utilisés.",
  "source": "https://github.com/plantuml/plantuml"
}
,{
  "prompt": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Container.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Dot Net E Shop - Catalog Api - Api - Catalog Api - Get Item Picture By Id - C4 Static - Container level\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Api, \"Api\", \"\", \"\")\n}\n\nSHOW_LEGEND()\n@enduml",
  "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Container.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Dot Net E Shop - Catalog Api - Api - Catalog Api - Get Item Picture By Id - C4 Static - Container level\n\nSystem_Boundary(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\") {\n    Container(DotNetEShop.SoftwareSystems.CatalogApi.Containers.Api, \"Api\", \"\", \"\")\n}\n\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4", "Container", "Catalog Api", "Api"],
  "description": "Diagramme C4 montrant le niveau de conteneur pour l'application Catalog Api.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
}

,{
  "prompt": "Arch",
  "code": "@startuml Arch\ntitle 整体架构\n!include C4_Container.puml...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Architecture", "Système", "Login", "Game"],
  "description": "Diagramme de l'architecture globale du système, montrant les conteneurs et leurs relations.",
  "source": "https://example.com"
}
,{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle getAllPromoList Content Promo API\\n[NodeJs Content API]\n... (le reste du code)",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle getAllPromoList Content Promo API\\n[NodeJs Content API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"getAllPromoList Content Promo API\\n[Component]\"){\n    ... (le reste du code)",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["C4", "PlantUML", "NodeJs", "API"],
  "description": "Diagramme C4 montrant le composant getAllPromoList de l'API Content Promo, avec ses relations avec les autres composants.",
  "source": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle getAllPromoList Content Promo API\\n[NodeJs Content API]\n... (le reste du code)"
}
,{
  "prompt": "@startuml ...\n@enduml",
  "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Context.puml\n' ... ajouter les systèmes, acteurs et relations ici\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "c4_context",
    "plantuml",
    "c4s",
    "context_level"
  ],
  "description": "Diagramme de contexte pour l'E Commerce Platform - Deliver - Payments",
  "source": "https://github.com/LaurentLardinois/C4-PlantUML"
}

,{
  "prompt": "@startuml koski-integration",
  "code": "... (code ci-dessus) ...",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Context", "Container", "Component", "Rel"],
  "description": "Diagramme C4 Context montrant l'intégration de Koski.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/raw/v2.0.0/C4_Component.puml"
}

,{
  "prompt": "@startuml C4_Elements\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4.puml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Context.puml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Component.puml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml\nSystem_Boundary(estimator, \"Estimator\"){\n    Container(web, \"WEB\", \"core application\")\n    Container(sidekiq, \"Sidekiq\", \"background processing\")\n    ContainerDb(redis, \"Redis\", \"secondary\")\n    ContainerDb(db, \"Database\", \"main\") \n}\nRel(web, db, 'read/write')\nRel(web, sidekiq, 'delegate async job')\nRel(sidekiq, db, 'read/write')\nRel(sidekiq, redis, 'read')\n@enduml",
  "code": "@startuml C4_Elements\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4.puml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Context.puml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Component.puml\n!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml\nSystem_Boundary(estimator, \"Estimator\"){\n    Container(web, \"WEB\", \"core application\")\n    Container(sidekiq, \"Sidekiq\", \"background processing\")\n    ContainerDb(redis, \"Redis\", \"secondary\")\n    ContainerDb(db, \"Database\", \"main\") \n}\nRel(web, db, 'read/write')\nRel(web, sidekiq, 'delegate async job')\nRel(sidekiq, db, 'read/write')\nRel(sidekiq, redis, 'read')\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4_Elements",
    "System_Boundary",
    "Container",
    "ContainerDb",
    "Rel"
  ],
  "description": "Diagramme C4 contextuel décrivant l'architecture de l'application avec ses conteneurs et relations.",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/"
}
,{
  "prompt": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle readAll OTP Request API\\n[NodeJs User API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"readAll OTP Request API\\n[Component]\"{\nComponent(auths_middleware, \"auth.verify\", \"Middleware | NodeJs\", \"Middleware for verify\\n(NodeJs User API)\")\nComponent(user_controller, \"Management OTP Controller\", \"Controller | NodeJs\", \"Controller for Management OTP Related function\\n(NodeJs User API)\")\nComponent(readAll, \"modelManagementOtp.readAll\", \"Function | NodeJs\", \"Function for Read All otp data\\n(NodeJs User API)\")\nComponent(countList, \"modelManagementOtp.countList\", \"Function | NodeJs\", \"Function for count List otp data\\n(NodeJs User API)\"\n}\nContainerDb(database, \"Moservice Storage\", \"mySQL Database\", \"All store for save data and content for Moservice.id\")\nRel_D(Web_Moservice, auths_middleware, \"1. Request Read All otp data\")\nRel_D(auths_middleware, user_controller, \"2. Request Read All otp data\")\nRel_D(user_controller, readAll, \"3. Request Read All otp data\")\nRel_D(readAll, countList, \"5. Request Count listy otp data\")\nRel_D(readAll, database, \"4. Read All otp data\")\nRel_D(countList, database, \"6. Count List otp data\")\n@enduml",
  "code": "@startuml\n!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml\nLAYOUT_WITH_LEGEND()\ntitle readAll OTP Request API\\n[NodeJs User API]\nContainer(Web_Moservice, \"Web Moservice\", \"Website | JavaScript\", \"moservice.id main services for Customer\")\nBoundary(api, \"readAll OTP Request API\\n[Component]\"{\nComponent(auths_middleware, \"auth.verify\", \"Middleware | NodeJs\", \"Middleware for verify\\n(NodeJs User API)\")\nComponent(user_controller, \"Management OTP Controller\", \"Controller | NodeJs\", \"Controller for Management OTP Related function\\n(NodeJs User API)\")\nComponent(readAll, \"modelManagementOtp.readAll\", \"Function | NodeJs\", \"Function for Read All otp data\\n(NodeJs User API)\")\nComponent(countList, \"modelManagementOtp.countList\", \"Function | NodeJs\", \"Function for count List otp data\\n(NodeJs User API)\"\n}\nContainerDb(database, \"Moservice Storage\", \"mySQL Database\", \"All store for save data and content for Moservice.id\")\nRel_D(Web_Moservice, auths_middleware, \"1. Request Read All otp data\")\nRel_D(auths_middleware, user_controller, \"2. Request Read All otp data\")\nRel_D(user_controller, readAll, \"3. Request Read All otp data\")\nRel_D(readAll, countList, \"5. Request Count listy otp data\")\nRel_D(readAll, database, \"4. Read All otp data\")\nRel_D(countList, database, \"6. Count List otp data\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4-plantuml",
    "Context",
    "Container",
    "Component",
    "Boundary",
    "Rel_D"
  ],
  "description": "Diagramme C4 représentant le contexte de l'API de demande de lecture des requêtes OTP.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml"
}
,{
  "prompt": "@startuml\n'' configures the library\n!global $LIB_BASE_LOCATION=\"https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution\"\n\n'' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n'' loads the package bootstrap\ninclude('c4k8s/bootstrap')\n\n'' loads the Item which embeds the element ConfigMap\ninclude('c4k8s/Element/ConfigMap')\n\n'' load the c4model package\ninclude('c4model/bootstrap')\nConfigMap('ConfigMap', 'Config Map', 'an optional description label')\n@enduml",
  "code": "@startuml\n'' configures the library\n!global $LIB_BASE_LOCATION=\"https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution\"\n\n'' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n'' loads the package bootstrap\ninclude('c4k8s/bootstrap')\n\n'' loads the Item which embeds the element ConfigMap\ninclude('c4k8s/Element/ConfigMap')\n\n'' load the c4model package\ninclude('c4model/bootstrap')\nConfigMap('ConfigMap', 'Config Map', 'an optional description label')\n@enduml",
  "langage": "plantuml",
  "type": "c4_component",
  "tags": ["C4", "Kubernetes", "ConfigMap"],
  "description": "Le diagramme représente un ConfigMap avec des éléments de configuration. Il utilise les packages c4k8s et c4model pour intégrer Kubernetes.",
  "source": "@startuml\n'' configures the library\n!global $LIB_BASE_LOCATION=\"https://raw.githubusercontent.com/tmorin/plantuml-libs/master/distribution\"\n\n'' loads the library's bootstrap\n!include $LIB_BASE_LOCATION/bootstrap.puml\n\n'' loads the package bootstrap\ninclude('c4k8s/bootstrap')\n\n'' loads the Item which embeds the element ConfigMap\ninclude('c4k8s/Element/ConfigMap')\n\n'' load the c4model package\ninclude('c4model/bootstrap')\nConfigMap('ConfigMap', 'Config Map', 'an optional description label')\n@enduml"
}
,{
  "prompt": "To Do App Example - To Do App - Web Api - Add Task - C4 - Container level",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\.c4s\\C4_Container.puml\n... (restant du code)",
  "langage": "plantuml",
  "type": "c4_container",
  "tags": [
    "c4", 
    "container", 
    "uml", 
    "diagramme"
  ],
  "description": "Ce diagramme C4 représente la structure d'un système de gestion de tâches, avec un système contenant deux composants : une API web et une base de données.",
  "source": "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/refs/heads/main/icons"
}
,{
  "prompt": "@startuml ... @enduml",
  "code": "@startuml ...\n!$default_direction = down\n... @enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": ["component", "relation"],
  "description": "Diagramme C4 représentant le composant Mazak317641baseC2C2motor avec ses relations.",
  "source": "https://raw.githubusercontent.com/iofoundry/ontopuml/refs/heads/Development/iof.iuml"
}
,{
  "prompt": "Diagramme C4 de l'application Internet Banking de Big Bank Plc",
  "code": "@startuml\n!include ..\\..\\..\\..\\.c4s\\C4_Container.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "internet banking",
    "api application",
    "container level",
    "java",
    "spring mvc"
  ],
  "description": "Diagramme C4 représentant l'architecture de l'application Internet Banking de Big Bank Plc, mettant en évidence les conteneurs et leurs relations.",
  "source": "https://github.com/plantuml/plantuml-examples/blob/master/uml/C4_container.puml"
}
,{
  "prompt": "!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4.puml",
  "code": "... (tous les codes PlantUML fournis)",
  "langage": "puml",
  "type": "c4_context",
  "tags": [
    "C4",
    "Context Diagramme",
    "plantuml"
  ],
  "description": "Ce diagramme C4 est un contexte qui décrit l'ensemble du système de logiciels, y compris les éléments secondaires tels que les personnes et les systèmes de logiciel directement connectés.",
  "source": "https://github.com/RicardoNiepel/C4-PlantUML/master/C4.puml"
}
,{
  "prompt": "",
  "code": "PlantUML source code",
  "langage": "puml",
  "type": "configuration",
  "tags": ["C4", "PlantUML", "diagramme"],
  "description": "Configuration de PlantUML pour le format C4. Définition des couleurs, du style et des éléments de base.",
  "source": "https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4.puml"
}
,{
  "prompt": "",
  "code": " !includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4.puml\n!include C4.puml\n\n' Scope: A single software system.\n' Primary elements: The software system in scope.\n' Supporting elements: People and software systems directly connected to the software system in scope.\n' Intended audience: Everybody, both technical and non-technical people, inside and outside of the software development team.\n\n' Colors\n' ##################################\n!define PERSON_BG_COLOR #08427B\n!define EXTERNAL_PERSON_BG_COLOR #686868\n!define SYSTEM_BG_COLOR #1168BD\n!define EXTERNAL_SYSTEM_BG_COLOR #999999\n\n' Styling\n' ##################################\nskinparam rectangle<<person>> {\n    StereotypeFontColor ELEMENT_FONT_COLOR\n    FontColor ELEMENT_FONT_COLOR\n    BackgroundColor PERSON_BG_COLOR\n    BorderColor #073B6F\n}\nskinparam rectangle<<external_person>> {\n    StereotypeFontColor ELEMENT_FONT_COLOR\n    FontColor ELEMENT_FONT_COLOR\n    BackgroundColor EXTERNAL_PERSON_BG_COLOR\n    BorderColor #8A8A8A\n}\nskinparam rectangle<<system>> {\n    StereotideFontColor ELEMENT_FONT_COLOR\n    FontColor ELEMENT_FONT_COLOR\n    BackgroundColor SYSTEM_BG_COLOR\n    BorderColor #3C7FC0\n}\nskinparam rectangle<<external_system>> {\n    StereotypeFontColor ELEMENT_FONT_COLOR\n    FontColor ELEMENT_FONT_COLOR\n    BackgroundColor EXTERNAL_SYSTEM_BG_COLOR\n    BorderColor #8A8A8A\n}\nskinparam database<<system>> {\n    StereotypeFontColor ELEMENT_FONT_COLOR\n    FontColor ELEMENT_FONT_COLOR\n    BackgroundColor SYSTEM_BG_COLOR\n    BorderColor #3C7FC0\n}\nskinparam database<<external_system>> {\n    StereotypeFontColor ELEMENT_FONT_COLOR\n    FontColor ELEMENT_FONT_COLOR\n    BackgroundColor EXTERNAL_SYSTEM_BG_COLOR\n    BorderColor #8A8A8A\n}\n\n' Layout\n' ##################################\n!definelong LAYOUT_WITH_LEGEND\nhide stereotype\nlegend right\n|=              |= Type |\n|<PERSON_BG_COLOR>      | person |\n|<EXTERNAL_PERSON_BG_COLOR>      | external person |\n|<SYSTEM_BG_COLOR>   | system |\n|<EXTERNAL_SYSTEM_BG_COLOR>      | external system |\nendlegend\n!enddefinelong\n\n' Elements\n' ##################################\n!define Person(e_alias, e_label) rectangle \"==e_label\" <<person>> as e_alias\n!define Person(e_alias, e_label, e_descr) rectangle \"==e_label\\n\\n e_descr\" <<person>> as e_alias\n\n!define Person_Ext(e_alias, e_label) rectangle \"==e_label\" <<external_person>> as e_alias\n!define Person_Ext(e_alias, e_label, e_descr) rectangle \"==e_label\\n\\n e_descr\" <<external_person>> as e_alias\n\n!define System(e_alias, e_label) rectangle \"==e_label\" <<system>> as e_alias\n!define System(e_alias, e_label, e_descr) rectangle \"==e_label\\n\\n e_descr\" <<system>> as e_alias\n\n!define System_Ext(e_alias, e_label) rectangle \"==e_label\" <<external_system>> as e_alias\n!define System_Ext(e_alias, e_label, e_descr) rectangle \"==e_label\\n\\n e_descr\" <<external_system>> as e_alias\n\n!define SystemDb(e_alias, e_label) database \"==e_label\" <<system>> as e_alias\n!define SystemDb(e_alias, e_label, e_descr) database \"==e_label\\n\\n e_descr\" <<system>> as e_alias\n\n!define SystemDb_Ext(e_alias, e_label) database \"==e_label\" <<external_system>> as e_alias\n!define SystemDb_Ext(e_alias, e_label, e_descr) database \"==e_label\\n\\n e_descr\" <<external_system>> as e_alias",
  "langage": "",
  "type": [],
  "tags": [
    "C4-PlantUML",
    "enterprise",
    "system"
  ],
  "description": "Cette diagramme C4 décrit un système logiciel, avec des éléments principaux et secondaires.",
  "source": "https://github.com/RicardoNiepel/C4-PlantUML"
}

,{
  "prompt": "@startuml !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml LAYOUT_WITH_LEGEND() ContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\") Container(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\") Container_Boundary(b, \"API Application\") { Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\") Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\") } Rel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\") Rel(c2, c3, \"Calls isAuthenticated() on\") Rel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\") @enduml",
  "code": "@startuml !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml LAYOUT_WITH_LEGEND() ContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\") Container(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\") Container_Boundary(b, \"API Application\") { Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\") Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\") } Rel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\") Rel(c2, c3, \"Calls isAuthenticated() on\") Rel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\") @enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["c4", "plantuml", "database", "application", "security"],
  "description": "Ce diagramme C4 montre l'architecture d'une application Internet bancaire qui utilise une base de données relationnelle pour stocker les informations utilisateur et leur accès.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml"
}
,{
  "prompt": "C4 PlantUML diagram",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\")\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\")\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container_boundary",
  "tags": ["C4", "PlantUML", "Container Boundary"],
  "description": "Le diagramme décrit la relation entre l'API Application et les différentes composantes du système, notamment le Security Component et le Sign In Controller.",
  "source": "https://github.com/plantuml-stdlib/C4-PlantUML/master"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.)\"\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.)\"\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.)\"\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.)\"\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["C4_Dynamic", "ContainerDb", "Container_Boundary", "Component"],
  "description": "Diagramme C4 illustrant la relation entre un Single-Page Application et une API Application, avec une base de données en arrière-plan.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\")\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\")\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\")\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\")\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4-plantuml", "diagramme de contexte"],
  "description": "Le diagramme décrit le contexte de l'application bancaire en ligne, comprenant la base de données, l'application cliente et l'API application.",
  "source": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml\nLAYOUT_WITH_LEGEND()\nContainerDb(c4, \"Database\", \"Relational Database Schema\", \"Stores user registration information, hashed authentication credentials, access logs, etc.\")\nContainer(c1, \"Single-Page Application\", \"JavaScript and Angular\", \"Provides all of the Internet banking functionality to customers via their web browser.\")\nContainer_Boundary(b, \"API Application\") {\n  Component(c3, \"Security Component\", \"Spring Bean\", \"Provides functionality Related to signing in, changing passwords, etc.\")\n  Component(c2, \"Sign In Controller\", \"Spring MVC Rest Controller\", \"Allows users to sign in to the Internet Banking System.\")\n}\nRel_R(c1, c2, \"Submits credentials to\", \"JSON/HTTPS\")\nRel(c2, c3, \"Calls isAuthenticated() on\")\nRel_R(c3, c4, \"select * from users where username = ?\", \"JDBC\")\n@enduml"
}
,{
  "prompt": "@startuml",
  "code": "le code PlantUML fourni ci-dessus",
  "langage": "PlantUML",
  "type": ["c4_context", "c4_container"],
  "tags": ["deployment", "diagramme", "c4", "internet banking system"],
  "description": [
    "Ce diagramme représente la déploieement du système de banque en ligne.",
    "Il décrit les différents composants et leurs relations."
  ],
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml"
}
,{
  "prompt": "@startuml\n@... @enduml",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": "c4_deployment_diagram",
  "tags": [
    "deployment", 
    "diagram", 
    "c4"
  ],
  "description": "Ce diagramme C4 montre la mise en œuvre du système de banque en ligne. Il illustre les différents composants, notamment les bases de données primaire et secondaire, ainsi que les applications web et mobile.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml"
}
,{
  "prompt": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml...",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml...\n",
  "langage": "plantuml",
  "type": "c4_context",
  "tags": ["fallback", "deployment"],
  "description": "Ce diagramme représente la déployment d'un système de banque en ligne, avec des nœuds pour les serveurs, les bases de données et les applications.",
  "source": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml..."
}
,{
  "prompt": "@startuml\n... (code entier)",
  "code": "@startuml\n!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml\n...\n@enduml",
  "langage": "plantuml",
  "type": ["c4_context", "c4_container"],
  "tags": [
    "fallback",
    "bigbank-api",
    "Ubuntu 16.04 LTS",
    "Apache Tomcat 8.x",
    "Java and Spring MVC",
    "Provides Internet Banking functionality via a JSON/HTTPS API.",
    "Oracle - Primary",
    "Relational Database Schema",
    "Stores user registration information, hashed authentication credentials, access logs, etc."
    
  ],
  "description": "Ce diagramme C4 montre le déploiement d'un système de banque en ligne avec une architecture distribuée. Il illustre la relation entre les différents composants du système et leurs interactions.",
  "source": "https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml"
}
,
{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\.c4s\\C4_Context.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["c4", "context", "diagramme"],
  "description": "Diagramme de contexte C4 représentant le système d'e-commerce pour la création de produits.",
  "source": ""
}
,{
  "prompt": "@startuml\n!include <C4/C4_Container.puml>\n!include common.iuml\nHIDE_STEREOTYPE()\nPerson(p, \"Programmer\")\nSystem(a, \"Object\", $tags=\"data\")\nContainer(b1, \"Algorithm A\", \"implementation\")\nContainer(b2, \"Algorithm B\", \"implementation\")\nSystem_Ext(c, \"External project\")\nRel_D(p,a, \"acts\", \"\", $tags=\"action\")\nLay_D(a,b1)\nRel_R(b1,b2,\"data\")\nLay_D(b1,c)\n@enduml",
  "code": "@startuml\n!include <C4/C4_Container.puml>\n!include common.iuml\nHIDE_STEREOTYPE()\nPerson(p, \"Programmer\")\nSystem(a, \"Object\", $tags=\"data\")\nContainer(b1, \"Algorithm A\", \"implementation\")\nContainer(b2, \"Algorithm B\", \"implementation\")\nSystem_Ext(c, \"External project\")\nRel_D(p,a, \"acts\", \"\", $tags=\"action\")\nLay_D(a,b1)\nRel_R(b1,b2,\"data\")\nLay_D(b1,c)\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": [
    "algorithm",
    "container",
    "system"
  ],
  "description": "Diagramme C4 montrant un conteneur avec deux algorithmes et une externalisation de projet.",
  "source": "https://github.com/plantuml-stdlib/C4"
}
,{
  "prompt": "",
  "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Context.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\n\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Big Bank Plc - Internet Banking - Web Application - Navigate - C4 Static - Context level\n\nSystem(BigBankPlc.SoftwareSystems.InternetBanking, \"Internet Banking\", \"Provided Internet Banking services\")\n\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": [
    "C4",
    "Context",
    "Static",
    "Internet Banking"
  ],
  "description": "Diagramme de contexte C4 montrant l'architecture du système d'internet banking.",
  "source": ""
}

,{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\.c4s\\C4_Component.puml\n...\n@enduml",
  "langage": "PlantUML",
  "type": "c4_component",
  "tags": [
    "c4",
    "component",
    "lifecycle",
    "new",
    "changed",
    "removed"
  ],
  "description": "Diagramme C4 à niveau de composant montrant la hiérarchie des composants du Catalog Api.",
  "source": ""
}
,
{
  "prompt": "@startuml",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Dot Net E Shop - Catalog Api - Infrastructure - Catalog Context - Catalog Brands Find Async - C4 Static - Context level\nSystem(DotNetEShop.SoftwareSystems.CatalogApi, \"Catalog Api\", \"\")\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_context",
  "tags": ["C4", "Context Mapping", "Modélisation", "Infrastructure"],
  "description": "Le diagramme représente le contexte de l'application Catalog Api, avec ses relations et son infrastructure. Il montre les différents éléments du système et comment ils interagissent.",
  "source": ""
}
,
{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\...\\.c4s\\C4_Container.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\ntitle Trader X Example - TraderX - Trade Feed - Receive Updates To Trades - C4 - Container level\nSystem_Boundary(TraderXExample.SoftwareSystems.TraderX, \"TraderX\") {\n    ContainerQueue(TraderXExample.SoftwareSystems.TraderX.Containers.TradeFeed, \"Trade Feed\", \"\", \"Message bus for streaming updates to trades and positions\")\n}\nSHOW_LEGEND()\n@enduml",
  "langage": "PlantUML",
  "type": "c4_container",
  "tags": ["c4_container", "plantuml"],
  "description": "Diagramme de conteneur C4 montrant les relations entre TraderX, le Trade Feed et les mises à jour des transactions.",
  "source": ""
}
,
{
  "prompt": "",
  "code": "@startuml\n!include ..\\..\\..\\..\\..\\..\\..\\.c4s\\C4_Context.puml\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle E Commerce Platform - Create Product - Buying And Merchandising - Buying Service - Messaging - Send Purchase Order Updated Event - C4 Static - Context level\nSystem(ECommercePlatform.CreateProduct.BuyingAndMerchandising.SoftwareSystems.BuyingService, \"Buying Service\", \"\")\nSHOW_LEGEND()\n@enduml",
  "langage": "",
  "type": "c4_context",
  "tags": [
    "c4interflow:lifecycle:new",
    "c4interflow:lifecycle:changed",
    "c4interflow:lifecycle:removed"
  ],
  "description": "Diagramme C4 contextuel représentant l'architecture d'un E-commerce Platform.",
  "source": ""
}
,

  {
    "prompt": "@startuml ... @enduml",
    "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Context.puml\n\nAddElementTag(\"c4interflow:lifecycle:new\", $bgColor=green, $fontColor=#ffffff, $borderColor=green, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:changed\", $bgColor=orange, $fontColor=#ffffff, $borderColor=orange, $shadowing=\"False\")\nAddElementTag(\"c4interflow:lifecycle:removed\", $bgColor=red, $fontColor=#ffffff, $borderColor=red, $shadowing=\"False\")\nAddRelTag(\"c4interflow:lifecycle:new\", $textColor=green, $lineColor=green)\nAddRelTag(\"c4interflow:lifecycle:changed\", $textColor=orange, $lineColor=orange)\nAddRelTag(\"c4interflow:lifecycle:removed\", $textColor=red, $lineColor=red)\n\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle E Commerce Platform - Create Product - Product Information Management - Product Service - Messaging - Receive Product Deleted Event - C4 Static - Context level\n\nSystem(ECommercePlatform.CreateProduct.ProductInformationManagement.SoftwareSystems.ProductService, \"Product Service\", \"\")\n\nSHOW_LEGEND()\n@enduml",
    "langage": "plantuml",
    "type": "c4_context",
    "tags": ["c4", "context", "diagramme", "static"],
    "description": "Ce diagramme C4 représente le contexte de l'E Commerce Platform pour la création d'un produit, en mettant en avant les différents composants et leurs relations.",
    "source": "PlantUML"
  },
  {
    "prompt": "c4",
    "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Component.puml\n' ...rest of the code...\n@enduml",
    "langage": "PlantUML",
    "type": "c4_component",
    "tags": ["C4", "Component", "Level", "CatalogApi", "Api"],
    "description": "Diagramme C4 montrant la structure de la Catalog Api en niveau de composant, avec les conteneurs et les composants associés.",
    "source": "https://example.com/c4-component.puml"
  },
  {
    "prompt": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Container.puml\n' ...\n@enduml",
    "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Container.puml\nAddElementTag(...)\nAddRelTag(...)\nSHOW_PERSON_PORTRAIT()\nLAYOUT_TOP_DOWN()\nskinparam linetype polyline\n\ntitle Dot Net E Shop - Basket Api - Grpc - Basket Service - Update Basket - C4 - Container level\nSystem_Boundary(...)\n' ...\n\n@enduml",
    "langage": "PlantUML",
    "type": "c4_container",
    "tags": ["c4", "container", "basketapi", "grpc", "dotnet"],
    "description": "Diagramme C4 montrant la structure de conteneur pour l'application Basket Api.",
    "source": "https://github.com/SamiSakr/c4plantuml"
  },
  {
    "prompt": "C4 Static - Component level",
    "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Component.puml\n' ...rest of the code...\n@enduml",
    "langage": "PlantUML",
    "type": "c4_component",
    "tags": ["C4", "Static", "Component"],
    "description": "Diagramme C4 représentant la structure de composants d'une application Catalog Api.",
    "source": "https://github.com/plantuml-stdlib/C4-PlantUML"
  },
  {
    "prompt": "Diagramme C4 Sequence",
    "code": "@startuml\n!include ..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\.c4s\\\\C4_Sequence.puml\n' ...\n@enduml",
    "langage": "PlantUML",
    "type": "c4_sequence",
    "tags": ["c4", "sequence", "diagramme", "catalog", "api", "infrastructure"],
    "description": "Diagramme de séquence pour la modification des données dans le contexte du catalog.",
    "source": "@startuml ... @enduml"
  }
  

]
