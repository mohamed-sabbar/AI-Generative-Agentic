[
{
  "prompt": "Mindmap Implementation Flow",
  "code": "sequenceDiagram\n...\n",
  "langage": "mermaid",
  "tags": ["mindmap", "diagram", "implementation", "flow"],
  "description": "Ce diagramme décrit la séquence d'implémentation d'un mindmap, incluant les différentes phases de détection, structure de base, initialisation de la base de données, phase de parsing, préparation des données et pipeline de rendu.",
  "source": "File: /packages/mermaid/src/diagrams/mindmap/mindmap-definition.ts"
}

,
{
  "prompt": "mindmap",
  "code": "mindmap\nroot((mindmap))\n  Origins\n    Long history\n    ::icon(fa fa-book)\n    Popularisation\n      pop['`British popular **psychology** author Tony Buzan`']\n  Research\n    On effectiveness<br/>and features\n    On Automatic creation\n      Uses\n        a[Creative techniques]\n        b(Strategic planning)\n        c{{Argument mapping}}\n  Tools\n    :::additional class\n    Pen and paper\n    Mermaid",
  "langage": "mermaid",
  "tags": ["mindmap", "Tony Buzan", "psychologie", "planning stratégique", "cartographie des arguments"],
  "description": "Un diagramme de mindmap présentant les origines et la popularisation du mindmapping, ainsi que des outils utilisés pour la recherche.",
  "source": ""
}
,{
  "prompt": "",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.0`\n---\n# ES2015\n## 書いて学ぶ\n",
  "langage": "mermaid",
  "tags": [
    "ES6",
    "JavaScript",
    "Node.js",
    "Babel",
    "Browserify",
    "ECMAScript"
  ],
  "description": "Diagramme de Mind Map pour apprendre ES2015",
  "source": ""
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin   \n> __version__=`1.1`,showJumps=`true`\n---\n# Intellij IDEA<br/>plugin\n> mmd.emoticon=`vlc`\n## Issues\n> fillColor=`#FF6653`,mmd.emoticon=`skull_old`\n## Current work\n> fillColor=`#71FF49`,mmd.emoticon=`helmet`,topicLinkUID=`1553A050A42A`\n## Improvements\n> fillColor=`#FFFE5C`,mmd.emoticon=`bomb`\n### Add support<br/>of Path adapted for<br/>IDEA\n## Community\n> leftSide=`true`,mmd.emoticon=`www`,topicLinkUID=`1553A04D5E7A`\n### IDEA Plugin<br/>portal\n> fillColor=`#00FF78`,mmd.emoticon=`www`\n\n- LINK\n<pre>https://plugins.jetbrains.com/plugin/8045?pr=idea</pre>",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": [
    "mindmap",
    "Intellij IDEA",
    "plugin",
    "NB MindMap"
  ],
  "description": "Un diagramme de mind map créé avec le plugin NB MindMap pour IntelliJ IDEA, listant des problèmes, travaux en cours, améliorations et liens vers la communauté.",
  "source": "https://plugins.jetbrains.com/plugin/8045?pr=idea"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n    root\n        Origins\n            Long history\n            ::icon(fa fa-book)\n            Popularisation\n            British popular psychology author Tony Buzan\n        Research\n            On effectiveness\\nand features\n            On Automatic creation\n            Uses\n                Creative techniques\n                Strategic planning\n                Argument mapping\n        Tools\n            Pen and paper\n            Mermaid",
  "langage": "mermaid",
  "tags": ["mindmap", "origins", "research", "tools"],
  "description": "Diagramme de mindmap avec un arbre hiérarchique représentant les origines, la recherche et les outils liés au concept de mindmap.",
  "source": ""
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Voice Cloning and MITM Framework))\n    sub(\"Data Collection & Processing\")\n      A1[Data Ingestion]\n      A2[Preprocessing]\n      B1[Language Model Selection]\n      B2[Model Fine-tuning]\n    sub(\"Voice Synthesis & Agent\")\n      C1[Voice Data Acquisition]\n      C2[Cloning Techniques]\n      D1[MITM Agent Architecture]\n      D2[Agent Behavior Modeling]\n    sub(\"Interaction & Monitoring\")\n      E1[User Interface Design]\n      E2[Conversation Logging]\n      G1[Real-Time Call Monitoring]\n      G2[Anomaly Detection]\n    sub(\"Analysis & Reporting\")\n      F1[Data Aggregation]\n      F2[Statistical Analysis]\n      H1[Alert Thresholds]\n      H2[Notification Channels]\n      J1[Behavioral Profiling]\n      J2[Intent Classification]\n    sub(\"Security & Compliance\")\n      L1[Encryption Algorithms]\n      L2[Key Management]\n      M1[Authentication Protocols]\n      M2[Authorization Mechanisms]\n      N1[Detailed Logging]\n      N2[Compliance Reporting]\n\n    sub(\"Output & Visualization\")\n      I1[Dashboard Design]\n      I2[Interactive Visualization]\n      K1[Pattern Matching Algorithms]\n      K2[Anomaly Visualization]",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "voix",
    "clonage",
    "MITM",
    "traitement de données",
    "synthèse vocale",
    "agent",
    "interaction",
    "suivi",
    "analyse",
    "rapport",
    "sécurité",
    "compliance"
  ],
  "description": "Diagramme de mindmap représentant un framework pour la voix et le MITM, comprenant plusieurs sous-ensembles : collecte et traitement des données, synthèse vocale et agent, interaction et suivi, analyse et rapportage, sécurité et conformité.",
  "source": "https://example.com/diagramme-mermaid"
}
,{
  "prompt": "Mindmap de projet Jinja",
  "code": "mindmap\n  root((Introductory Jinja Project\nFlask + Jinja2 + SQLAlchemy))\n    ...",
  "langage": "mermaid",
  "tags": ["Jinja", "Flask", "SQLAlchemy", "Python", "Architecture", "Clean Architecture"],
  "description": "Diagrame de projet présentant l'architecture du code et les relations entre les différents composants.",
  "source": "https://example.com/project-mindmap.mmd"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`,showJumps=`true`\n---\n# bootstrapper\n## OSDetect\n### lsb\n### /etc/\n### uname\n## UserEnvironment\n### ecsdeploy symlinks\n### paths\n### virtualenv\n## OS Plugins\n### CentOS 7.3\n## SystemConfigurator\n### http_proxy\n### local docker instance\n### docker repo config\n### SSL certificates\n### base OS mirror\n### Alpine mirror\n### Base OS Mirror\n## PackageConfigurator\n### per-OS package requirements list\n### python package requirements list",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": [
    "bootstrapper",
    "osdetect",
    "userenvironment",
    "systemconfigurator",
    "packageconfigurator",
    "centos",
    "docker",
    "ssl"
  ],
  "description": "Une mind map créée avec le plugin NB MindMap, représentant les étapes et composants du processus de configuration d’un système (OS, environnement utilisateur, plugins, configuration système et paquets).",
  "source": "NB MindMap plugin"
}

,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=\\u00211.1\\n---\n# Learnings\n> mmd.emoticon=`books`\\n\n## 并发\n> mmd.emoticon=`ruby`\\n\n### 并发三大概念\n> mmd.emoticon=`anchor`\\n\n### 并发三大问题\n> mmd.emoticon=`skull_old`\\n\n### Happens-\\u005cbefore\n> mmd.emoticon=`asterisk`\\n\n### Java 内存模型\n> mmd.emoticon=`compass`\\n",
  "langage": "mermaid",
  "tags": ["Mind Map", "并发", "Java"],
  "description": "Diagramme de mind map sur le thème de la concurrence et du modèle d'interne Java.",
  "source": "NB MindMap plugin"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    Cheating\n        Material facts\n            Accused: Party.Accused\n            Action: Deceiving\n            Victim: Party.Victim\n        Mens Rea\n            Deception\n                DeceptionType.Fraudulently\n                DeceptionType.Dishonestly\n                DeceptionType.NA\n        Actus Reus\n            Attribution\n                AttributionType.SoleInducment\n                AttributionType.NotSoleInducement\n                AttributionType.NA\n            Inducement\n                InducementType.DeliverProperty\n                InducementType.ConsentRetainProperty\n                InducementType.DoOrOmit\n                InducementType.NA\n            Causes Damage/Harm\n                TRUE\n                FALSE\n            Damage/Harm Result\n                DamageHarmType.Body\n                DamageHarmType.Mind\n                DamageHarmType.Reputation\n                DamageHarmType.Property\n                DamageHarmType.NA\n      Definition\n        ConsequenceDefinition.SaidToCheat\n        ConsequenceDefinition.NotSaidToCheat",
  "langage": "mermaid",
  "tags": ["mindmap", "cheating", "material facts", "mens rea", "actus reus"],
  "description": "Diagramme de mindmap représentant les éléments du concept de tricherie, en identifiant les matérialités des faits, le mens rea et l'actus reus",
  "source": ""
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`,showJumps=`true`\n---\n# scala\n## lang util\n> collapsed=`true`\n### object&class\n> collapsed=`true`\n#### main\n#### object\n#### class\n#### 构造函数\n#### 伴生关系\n### for、while、if\n> collapsed=`true`\n#### if\n#### while\n#### for\n## Functions\n> collapsed=`true`\n### 基础函数\n> collapsed=`true`\n#### 参数\n#### 返回值\n### 递归函数\n### 默认值函数\n### 匿名函数\n### 嵌套函数\n### 偏应用函数\n### 高阶函数\n### 柯里化函数\n## Collections\n> collapsed=`true`\n### 可以用java的collections\n### mutable\n### immutable\n### 面向DataSet函数式开发\n> collapsed=`true`\n#### 传统思维\n#### 静态数据集\n#### 面向函数\n## 高级\n> collapsed=`true`\n### trait\n### case class\n### match\n### PartialFunctions\n### Implicit\n> collapsed=`true`\n#### 隐式参数\n#### 隐式方法\n#### 隐式类",
  "langage": "mermaid",
  "tags": ["mindmap", "scala", "langage", "programmation"],
  "description": "Ce mind map représente les différentes catégories et concepts de programmation en Scala, couvrant la syntaxe, les fonctionnalités et les notions abstraites.",
  "source": "Mind Map generated by NB MindMap plugin"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "...\n... (toute la syntaxe Mermaid est incluse ici, si vous le souhaitez)",
  "langage": "mermaid",
  "tags": [
    "contracts", 
    "web3", 
    "taskName", 
    "link", 
    "Authorized User", 
    "WG", 
    "DAO Member", 
    "Performer"
  ],
  "description": "Diagramme de Mind Map représentant les contrats, avec leurs propriétés et statuts.",
  "source": "https://example.com/mindmap-plugin"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Portfolio Site))\n    Frontend\n      Next.js 15\n      React 19\n      Tailwind CSS v4\n      TypeScript\n    Backend\n      Node.js\n      API Routes\n      MDX Processing\n    Infrastructure\n      AWS CDK\n      CloudFront\n      Route 53\n      Home Server\n    DevOps\n      GitHub Actions\n      Docker\n      pnpm Workspace\n      Automated Testing\n    Quality\n      ESLint + Prettier\n      Jest + RTL\n      Storybook\n      Type Safety",
  "langage": "mermaid",
  "tags": ["nextjs", "react", "tailwindcss", "typescript", "nodejs", "mdx", "aws-cdk", "cloudfront", "route-53", "github-actions", "docker", "pnpm", "eslint", "prettier", "jest", "storybook"],
  "description": "Diagramme de mind map représentant la structure d'un projet web avec Next.js, React et divers outils",
  "source": "mermaid"
}
,{
  "prompt": "Mindmap - Combination Structure",
  "code": "%% Mindmap - Combination Structure\n%% Generated on: 2025-06-27T21:24:05.536Z\n%% Total combinations: 15552\n%% Questions: 10\ntype mindmap\n  root((Combinations))\n    Choix de la pièce\n      pièce d'eau\n      Couloir\n    quel surface\n      Plafond\n      mur\n      Plafond & mur\n    Quel hauteur\n      Inf à 2.50m\n      entre 2.50m et 3.00m\n      sup à 3.00m\n    Quelle est le principa...\n      Ancienne peinture\n      Prêt à peindre\n      Carrelage\n      ... 1 more\n    Dépose des revetements...\n      Oui\n      Non\n    Type de Peinture utili...\n      Blanc\n      Couleur\n      Spéciales\n    Espace Vidé?\n      Oui\n      Non\n    état des surfaces?\n      Bon\n      Moyen\n      Mauvais\n    Constatez-vous des fis...\n      Choice 1\n      Quelque fissures\n      Beaucoup\n    Souhaitez-vous déposer...\n      Oui\n      Non",
  "langage": "mermaid",
  "tags": ["mindmap", "combinaison", "structure"],
  "description": "Diagramme de mindmap représentant les différentes combinaisons possibles pour une pièce.",
  "source": "%% Mindmap - Combination Structure"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`,showJumps=`true`\n\n# WORKFLOWS\n\n## YNAB\n> fillColor=`#37FF00`,topicLinkUID=`174D99EA273A`\n\n## ECHOMTG\n> fillColor=`#37FF00`,leftSide=`true`,topicLinkUID=`174D99D70A2A`\n\n### MANUAL COLLECTION <br/>MANAGEMENT\n> fillColor=`#FFFFFF`\n\n## UPDATE BUDGET\n> collapsed=`true`\n\n### GET COLLECTION\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### GET CURRENT TRANSACTIONS\n- TOPIC\n<pre>174D99EA273A</pre>\n\n### COMPARE USING INVENTORY ID\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### UPDATE CATEGORIES\n> collapsed=`true`\n\n#### PRICE\n> collapsed=`true`\n\n##### TCG LOW\n\n##### TCG MID\n\n##### CURRENT PRICE\n\n#### CONDITION\n\n#### DATE ACQUIRED\n\n#### CURRENT % GAIN\n\n### PATCH UPDATE\n\n## DELETE TRANSACTIONS IN BUDGET\n\n### CHECK DELETED ITEMS IN INVENTORY\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### PATCH UPDATE USING PAYEE ID\n\n#### SET PRICE TO ZERO\n\n#### MARK AS DELETED/SOLD\n\n## CREATE TRANSACTIONS IN BUDGET\n> collapsed=`true`\n\n### GET COLLECTION\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### GET CURRENT TRANSACTIONS\n- TOPIC\n<pre>174D99EA273A</pre>\n\n### COMPARE USING INVENTORY ID\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### IF INVENTORY ID NOT IN BUDGET TRANSACTIONS\n\n### CREATE TRANSACTION ENTRY IN BUDGET\n> collapsed=`true`\n- TOPIC\n<pre>174D99EA273A</pre>\n\n#### DATE<br/>date_acquired_html\n\n#### PAYEE<br/>inventory_id\n\n#### MEMO<br/>current_price * multiplier<br/>name<br/>set_code<br/>count\n> collapsed=`true`\n\n##### [*inventory_id*] *name* - *set_code*",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": [
    "ynab",
    "echomtg",
    "manual collection management",
    "update budget",
    "get collection",
    "get current transactions",
    "compare using inventory id",
    "update categories",
    "price",
    "patch update",
    "delete transactions in budget",
    "check deleted items in inventory",
    "patch update using payee id",
    "set price to zero",
    "mark as deleted/sold",
    "create transactions in budget"
  ],
  "description": "Mind map créée avec NB MindMap pour représenter les workflows de gestion budgétaire et d’inventaire (YNAB et EchoMTG).",
  "source": "NB MindMap plugin"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n    ((\\u{1F4D6} Document))\n        ((\\u{1F4E5} Machine Learning))\n            (\\u{1F4E5} Learning Types)\n                [\\u{1F4C1}\\ufe0f Data labeling requirements]\n                [\\u{25B9}\\ufe0f Pattern recognition capability]\n                [\\u{25B9}\\ufe0f Decision making autonomy]\n                [\\u{25B9}\\ufe0f Algorithm diversity]\n            (\\u{1F4C1} Data Patterns)\n                [\\u{25B9}\\ufe0f Automated model building]\n                [\\u{25B9}\\ufe0f Labeled data training]\n                [\\u{25B9}\\ufe0f Unsupervised discovery]\n            (\\u{1F4E5} Algorithms)\n                [\\u{1F4C1}\\ufe0f Data-driven learning]\n                [\\u{2753}\\ufe0f Multiple algorithm types]\n            (\\u{1F4E5} Model Building)\n        ((\\u{1F4E5} Supervised Learning))\n            (\\u{1F4C1} Labeled Data)\n                [\\u{25B9}\\ufe0f Supervised learning]\n                [\\u{25B9}\\ufe0f Training models]\n            (\\u{1F4E5} Training Models)\n                [\\u{25B9}\\ufe0f Algorithm selection process]\n                [\\u{25B9}\\ufe0f Model validation techniques]\n                [\\u{25B9}\\ufe0f Performance optimization]\n            (\\u{1F4E5} Prediction)\n                [\\u{25B9}\\ufe0f Automated decision making]\n        ((\\u{1F4E5} Reinforcement Learning))\n            (\\u{1F4E5} Environment)\n                [\\u{1F4D6}\\ufe0f AI foundation]\n            (\\u{1F4E5} Rewards)\n                [\\u{25B9}\\ufe0f Automated pattern recognition]\n                [\\u{25B9}\\ufe0f Minimal human intervention]\n                [\\u{2753}\\ufe0f Multiple learning approaches]\n            (\\u{1F4E5} Policy)",
  "langage": "mermaid",
  "tags": [
    "machinelearning",
    "supervisedlearning",
    "reinforcementlearning",
    "data labeling",
    "pattern recognition",
    "decision making autonomy",
    "algorithm diversity"
  ],
  "description": "Diagramme de mindmap illustrant les concepts de machine learning, supervision et renforcement.",
  "source": "\\u{1F4D6} Document \\u{1F4E5} Machine Learning \\u{1F4E5} Supervised Learning \\u{1F4E5} Reinforcement Learning"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`,showJumps=`true`\n\n# WORKFLOWS\n\n## YNAB\n> fillColor=`#37FF00`,topicLinkUID=`174D99EA273A`\n\n## ECHOMTG\n> fillColor=`#37FF00`,leftSide=`true`,topicLinkUID=`174D99D70A2A`\n\n### MANUAL COLLECTION <br/>MANAGEMENT\n> fillColor=`#FFFFFF`\n\n## UPDATE BUDGET\n> collapsed=`true`\n\n### GET COLLECTION\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### GET CURRENT TRANSACTIONS\n- TOPIC\n<pre>174D99EA273A</pre>\n\n### COMPARE USING INVENTORY ID\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### UPDATE CATEGORIES\n> collapsed=`true`\n\n#### PRICE\n> collapsed=`true`\n\n##### TCG LOW\n\n##### TCG MID\n\n##### CURRENT PRICE\n\n#### CONDITION\n\n#### DATE ACQUIRED\n\n#### CURRENT % GAIN\n\n### PATCH UPDATE\n\n## DELETE TRANSACTIONS IN BUDGET\n\n### CHECK DELETED ITEMS IN INVENTORY\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### PATCH UPDATE USING PAYEE ID\n\n#### SET PRICE TO ZERO\n\n#### MARK AS DELETED/SOLD\n\n## CREATE TRANSACTIONS IN BUDGET\n> collapsed=`true`\n\n### GET COLLECTION\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### GET CURRENT TRANSACTIONS\n- TOPIC\n<pre>174D99EA273A</pre>\n\n### COMPARE USING INVENTORY ID\n- TOPIC\n<pre>174D99D70A2A</pre>\n\n### IF INVENTORY ID NOT IN BUDGET TRANSACTIONS\n\n### CREATE TRANSACTION ENTRY IN BUDGET\n> collapsed=`true`\n- TOPIC\n<pre>174D99EA273A</pre>\n\n#### DATE<br/>date_acquired_html\n\n#### PAYEE<br/>inventory_id\n\n#### MEMO<br/>current_price * multiplier<br/>name<br/>set_code<br/>count\n> collapsed=`true`\n\n##### [*inventory_id*] *name* - *set_code*",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": [
    "ynab",
    "echomtg",
    "manual collection management",
    "update budget",
    "get collection",
    "get current transactions",
    "compare using inventory id",
    "update categories",
    "price",
    "patch update",
    "delete transactions in budget",
    "check deleted items in inventory",
    "patch update using payee id",
    "set price to zero",
    "mark as deleted/sold",
    "create transactions in budget"
  ],
  "description": "Mind map créée avec NB MindMap pour représenter les workflows de gestion budgétaire et d’inventaire (YNAB et EchoMTG).",
  "source": "NB MindMap plugin"
}

,{
  "prompt": "Créer un diagramme de mindmap pour les compétences d'un développeur web",
  "code": "---\nconfig:\n  theme: base\n---\nmindmap\n  root((Web Developer))\n    Skills\n        Logical thinking\n        Development Methologies\n        Soft Skills\n        Code Quality\n        Developer Tooling\n        Research Skils\n        UX\n        Security\n        DevOps\n        Source Control\n        Graphic Design\n        Networking\n        Generative AI\n        No-Code Solutions              \n    {{Frontend}}\n        CRMs\n        JavaScript\n        HTML\n            Responsive Design\n        CSS\n            CSS Libraries\n        Frameworks\n            TypeScript\n            Bundlers\n        Full Stack\n    {{Backend}}\n        .NET\n        PHP\n        Node and NPM\n        Java and Spring Boot\n        Cloud Infrastructure\n        Linux\n        VMs and Containers\n        Python\n        Databases\n        Full Stack\n    {{Career Path}}\n        Demonstrated Abilities\n        Interview Skills\n        Code Tests\n        Ongoing Growth\n            Open Source Contributions\n            Certifications",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "diagramme",
    "compétences",
    "développement web"
  ],
  "description": "Diagramme de mindmap présentant les compétences d'un développeur web, organisées en catégories de skills et de technos.",
  "source": "https://example.com/mindmap-web-developer"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Root topic\n\n## 最大mipmap等级：<br/>std::log2(max(texWidth, texHeight))\n\n## mipmap生成\n> leftSide=`true`",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": ["mindmap", "nb-mindmap-plugin", "mipmap", "vkcmdblitimage"],
  "description": "Mind map décrivant la génération de mipmaps, incluant le calcul du niveau maximum et le processus de génération.",
  "source": ""
},
{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Component Lifecycle\n## constructor\n### one time setup\n## render\n### avoid doing anything other than JSX\n## componentDidMount\n### data-loading\n## componentDidUpdate\n### render\n### more data-loading when state/props change\n## componentWillUnmount\n### cleanup especially non-React stuff",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": ["mindmap", "component lifecycle", "react"],
  "description": "Mind map décrivant le cycle de vie d’un composant React, incluant les étapes d’initialisation, de rendu, de mise à jour et de nettoyage.",
  "source": "https://example.com/mind-map-plugin"
}

,{
  "prompt": "% @config(../mindmap-config.json)\nmindmap\nFormateur",
  "code": "% @config(../mindmap-config.json)\nmindmap\nFormateur\n\n    Ce qu'il fait\n      Suivi de l'avancement des apprenants et des compétences sur la table Excel ou sur papier\n      Utilise des outils manuels pour suivre les progrès et les réalisations des apprenants.\n    Ce qu'il dit\n      Il y a une difficulté pour suivre l'avancement des apprenants sur les briefs et les projets.\n      C'est difficile pour moi de voir quelles compétences sont validées par chaque apprenant sur chaque projet.",
  "langage": "mermaid",
  "tags": ["mindmap", "formateur", "suivi", "avancement", "compétences"],
  "description": "Le formateur suit l'avancement des apprenants et utilise des outils manuels pour évaluer leurs compétences.",
  "source": "% @config(../mindmap-config.json)"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# 注册中心\n## asd\n> align=`left`\n\n## sdd\n\n## asd",
  "langage": "mermaid",
  "tags": ["mindmap", "plugin", "nb", "注册中心"],
  "description": "Diagramme de Mind Map généré par le plugin NB MindMap, représentant un centre d'enregistrement.",
  "source": "https://example.com"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((TDD Benefits))\n    Design\n      Emergent Architecture\n      Single Responsibility\n      Loose Coupling\n      High Cohesion\n    Quality\n      Fewer Bugs\n      Edge Case Coverage\n      Regression Prevention\n      Living Documentation\n    Confidence\n      Safe Refactoring\n      Fearless Changes\n      Quick Feedback\n      Continuous Integration\n    Process\n      Small Steps\n      Incremental Progress\n      Clear Requirements\n      Focus on Behavior",
  "langage": "mermaid",
  "tags": ["mindmap", "TDD", "design", "qualité", "confiance", "processus"],
  "description": "Diagramme de mind map illustrant les avantages du TDD en termes de design, qualité, confiance et processus.",
  "source": "https://example.com/mindmap-exemple"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Competency Framework))\n    Technical Skills\n      System Knowledge\n      Troubleshooting\n      Procedure Adherence\n      Equipment Operation\n    Safety & Compliance\n      Radiation Protection\n      Industrial Safety\n      Emergency Response\n      Regulatory Requirements\n    Professional Skills\n      Communication\n      Teamwork\n      Problem-Solving\n      Decision Making\n    Leadership\n      Supervisory Skills\n      Mentoring\n      Strategic Thinking\n      Change Management",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "competence",
    "expertise",
    "formation"
  ],
  "description": "Diagramme mindmap présentant les compétences techniques, de sécurité et professionnelles",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/#/"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root(\"\\u{2318} Mental Health\")\n    Dependencies\n      integrates with\n        \\u{1F44D} DRR&R\n        \\u{2705} Global Health\n        \\u{1F4B2} AUBI\n        \\u{1F44D} DRR&R\n      oversees\n        \\u{1F3E5} HCC\n      collaborates with\n        \\u{1F935} Education\n        \\u{2629} Peace Framework\n    Enables & Affects\n      informs\n        \\u{1F4C1} Synoptic Protocol\n      implements\n        \\u{1F44B} Living Mandala\n      enables\n    Framework Info\n      \\u{1F4CE} Tier 2\n      \\u{1F5A0} Health Domain\n      \\u{1F30E} Global Scope\n      \\u{26AB} Medium Priority\n      \\u{1F55D} Status: Review",
  "langage": "mermaid",
  "tags": ["mindmap", "mental health", "dependencies", "integrates with", "oversees", "collaborates with"],
  "description": "Diagramme de mind map pour l'entretien des soins mentaux, montrant les dépendances et les collaborations.",
  "source": "https://mermaid-js.github.io/mermaid/#/"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\\n  root(\"\\u2708 Space Governance\")\\n    Enables & Affects\\n      integrates with\\n        \\u1F30D The Treaty\\n      informs\\n        \\u1F374 Indigenous Framework\\n      coordinates with\\n        \\u26A0 PIS\\n    Framework Info\\n      \\u1F4E6 Tier 4\\n      \\u2709 Governance Domain\\n      \\u1F30D Global Scope\\n      \\u26AA Low Priority\\n      \\u1F4E3 Status: Planned",
  "langage": "mermaid",
  "tags": ["mindmap", "governance", "space", "framework"],
  "description": "Diagramme de mind map représentant un cadre de gouvernance dans l'espace, avec des éléments tels que des accords, des frameworks et des priorités.",
  "source": "https://mermaid-js.github.io/mermaid/#/edit?cdt=eyJjb2RlIjoibVQwS0JxY1NnZ3d4eWp5TzNhNk8iLCJjc2l6ZSI6eyJlbmQiOiJhIGhlbHAgZ29vZCIsImFza3V0IjoiMS43MiJ9fQ"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\\n    root[\"Logging Best Practices\"]\\n        Output\\n            Use STDOUT\\n            Use STDERR\\n            Structured format\\n        Format\\n            JSON\\n            Key-value pairs\\n            Timestamp\\n        Content\\n            Severity levels\\n            Context data\\n            Correlation IDs",
  "langage": "mermaid",
  "tags": ["logging", "bestpractices", "output", "format", "content"],
  "description": "Diagramme d'une arborescence de bonnes pratiques pour le logging.",
  "source": "<chemin vers l'original>"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root['Docker Platform']\n        Engine\n            Daemon\n            REST API\n            CLI\n        Objects\n            Images\n            Containers\n            Networks\n            Volumes\n        Tools\n            Compose\n            Swarm\n            Desktop",
  "langage": "mermaid",
  "tags": ["mindmap", "docker", "platform", "engine", "objects", "tools"],
  "description": "Diagramme de carte mentale présentant la plateforme Docker, avec ses composants et outils associés.",
  "source": "https://example.com/mermaid-code"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root[\"Security Layers\"]\n        Kernel Security\n            Namespaces\n            Capabilities\n            Seccomp\n            AppArmor\n        Container Security\n            Image Scanning\n            Runtime Security\n            Access Controls\n        Platform Security\n            Authentication\n            Authorization\n            RBAC",
  "langage": "mermaid",
  "tags": ["security", "layers", "kernel", "container", "platform"],
  "description": "Diagramme de sécurité en couches, regroupant les différents niveaux de protection système.",
  "source": ""
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root[\"Debug Options\"]\n        Runtime\n            Interactive shell\n            Port exposure\n            Volume mounts\n        Build\n            Build args\n            No-cache\n            Progress output\n        Network\n            Host network\n            Network tools\n            Port mapping",
  "langage": "mermaid",
  "tags": [
    "diagramme",
    "mindmap",
    "debug",
    "options",
    "runtime",
    "build",
    "network"
  ],
  "description": "Diagramme représentant les options de débogage. Les catégories comprennent Runtime, Build et Network.",
  "source": "https://example.com/mermaid-example"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Root topic\n\n## TetriStrike",
  "langage": "mermaid",
  "tags": ["mindmap", "NB MindMap plugin"],
  "description": "Un diagramme de mind map généré par le plugin NB MindMap, avec une version et un paramètre showJumps définis.",
  "source": "https://example.com" 
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Testing))\n    Organization\n      Unit tests\n      Integration tests\n      Documentation tests\n    Coverage\n      Edge cases\n      Error paths\n      Happy paths\n    Maintenance\n      Clear names\n      Setup/teardown\n      Documentation",
  "langage": "mermaid",
  "type": "mindmap",
  "tags": ["mindmap", "testing", "organisation", "couverture", "entretien"],
  "description": "Diagramme mindmap Mermaid pour organiser les tests (unitaires, intégration, documentation), la couverture (cas limites, erreurs, cas normaux) et la maintenance (noms clairs, setup/teardown, documentation).",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/#/edit/5a1f9e4b-87d6-43c3-a4c0-f8af37d7b1d3"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Industry))\n        IoT\n            Sensors\n            Data\n        Automation\n            Process\n            Quality\n        Control\n            Monitor\n            Adjust",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "industrie", "IoT"],
  "description": "Diagramme de mind map illustrant les sous-ensembles d'une industrie, notamment l'Internet des Objets et la gestion automatisée.",
  "source": "https://example.com/mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Failure Response))\n        Analysis\n            Root Cause\n            Impact Study\n        Learning\n            Documentation\n            Knowledge Share\n        Improvement\n            Process Updates\n            Tool Enhancement",
  "langage": "mermaid",
  "tags": [
    "analyse",
    "apprentissage",
    "amélioration",
    "processus",
    "outil"
  ],
  "description": "Ce diagramme mindmap décrit les étapes à suivre pour apprendre d'une réponse en échec, notamment l'analyse des causes et de l'impact, ainsi que les mises en œuvre d'améliorations.",
  "source": "mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\nroot((Android Testing))\n    Unit Tests\n      JUnit\n      Mockito\n      PowerMock\n    Integration Tests\n      Repository Tests\n      Database Tests\n      API Tests\n    UI Tests\n      Espresso\n      UI Automator\n      Screenshot Tests\n    Performance Tests\n      Profiling\n      Memory Leaks\n      CPU Usage",
  "langage": "mermaid",
  "tags": ["android", "testing", "unit tests", "integration tests", "ui tests", "performance tests"],
  "description": "Diagramme de mind map représentant les différentes catégories de tests pour une application Android",
  "source": "https://example.com/mindmap-code"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Performance))\n    Memory\n      Leaks\n      Allocation\n      Garbage Collection\n    UI\n      Layout Optimization\n      View Hierarchies\n      Rendering\n    Battery\n      Network\n      Location\n      Background Tasks\n    Storage\n      Disk I/O\n      Caching\n      Database",
  "langage": "mindmap",
  "tags": ["performance", "optimisation", "mémoire", "UI", "batterie", "stockage"],
  "description": "Diagramme de mind map représentant des sujets liés à la performance d'une application.",
  "source": "Code Mermaid"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n# L2 Optimization\n...\n",
  "langage": "mermaid",
  "tags": [
    "L2",
    "Optimization",
    "Gamification",
    "Digital resistance",
    "Centralized Finance",
    "Platforms",
    "Options",
    "Front-End support",
    "Ecosystem",
    "Tech requirements"
  ],
  "description": "Diagramme de mindmap pour optimiser les transactions et les services en mode L2 sur Ethereum.",
  "source": "https://example.com/mind-map"
}
,{
  "prompt": "Scia Reto mind map",
  "code": "[Scia Reto](https://sciareto.org) mind map\n> __version__=`1.1`,showJumps=`true`\n---\n# NetBeans\\u00a0MindMap\\u00a0editor\n> mmd.emoticon=`plugin`\n- FILE\n<pre>file:///home/igorm/Projects_PET/MindMap/README.md</pre>\n- LINK\n<pre>http://www.igormaznitsa.com/netbeans-mmd-plugin/</pre>\n...\n",
  "langage": "mermaid",
  "tags": ["NetBeans", "mindmap", "editor", "plugin"],
  "description": "Diagramme de carte mentale pour NetBeans avec des liens et des fichiers associés.",
  "source": "https://sciareto.org"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n# systems\n## service (online)\n### primary measure\n#### response time\n## batch processing\n### primary measure\n#### throughput\n### example\n#### unix tools\n##### philosophy\n###### automation\n###### rapid prototyping\n###### incremental iteration\n###### being friendly to experimentation\n###### breaking down large projects into manageable chunks\n##### uniform interface\n###### output of one program to become the input to another one\n###### everything is a file descriptor\n##### separation of logic and wiring\n###### stdin, stdout, stderr\n##### limitation\n###### single machine\n#### MapReduce\n##### algorithm\n###### read input files and break them up into records\n####### input format parser\n###### call the mapper function to extract a key and value from each input record\n####### custom processing code\n####### mapper\n####### extract key/value from input record\n####### no state/each record handled independently\n####### join logic: map-side join\n######## no sorting and no reducer\n######## ex\n######### broadcast hash join\n########## small dataset (in-memory/secondary index) joined with large one)\n######### partitioned hash join\n########## inputs to the map-side join are partitioned in the same way, then the hash join approach can be applied to each partition independently\n######### map-side merge join\n########## as partitioned but also sorted\n###### sort all of the key-value pairs by key\n####### implicit in MapReduce\n###### call the reducer function to iterate over the sorted key-value pairs\n####### custom processing code\n####### reducer\n######## hot key\n######### skew join (Pig)\n########## sampling job to see hot keys\n########## actual job randomly sends record to one of the reducers\n########## the other join's input replicated to all reducers\n######### sharded join (Crunch)\n########## hot key is specified\n####### collects all the values belonging to the same key and calls the reducer with an iterator over that collection of values\n####### join logic: reduce-side join\n##### philosophy\n###### Diversity of storage\n###### Diversity of processing models\n###### Designing for frequent faults\n### output\n#### search index\n#### machine learning systems such as classifiers\n### Dataflow engines\n#### ex\n##### Spark/Flink\n#### the whole flow is a job\n#### difference\n##### no sort if not needed\n##### results passed from operator to operator in memory\n##### operator can start as soon as input is ready, not all of them\n##### fault tolerance\n###### MR: just restart job on another machine\n###### Spark/Flink/Tez: keep track how data was computed\n####### which partition was used\n####### which operator was applied\n## streams\n### something online/offline batch processing",
  "langage": "Mermaid",
  "tags": [
    "Mind Map",
    "NB MindMap plugin",
    "systems",
    "service",
    "batch processing",
    "MapReduce",
    "unix tools",
    "philosophy",
    "uniform interface",
    "separation of logic and wiring",
    "Dataflow engines",
    "Spark/Flink"
  ],
  "description": "Diagramme de Mind Map décrivant les systèmes, la prise en charge en ligne et en lot, les exemples de traitement de données en streaming, ainsi que les concepts associés aux Dataflow engines.",
  "source": "NB MindMap plugin"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Observability))\n    Metrics\n      Collection\n      Analysis\n    Tracing\n      Distributed\n      Performance\n    Logging\n      Aggregation\n      Analysis",
  "langage": "mermaid",
  "type": "mindmap",
  "tags": ["observabilité", "métriques", "traces", "logging"],
  "description": "Diagramme Mermaid mindmap explorant l'Observabilité : regroupant les métriques (collecte, analyse), le traçage (distribué, performance) et le logging (agrégation, analyse).",
  "source": "https://fr.wikipedia.org/wiki/Observability_(informatique)"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Apprenant))\n    Dit\n      Dit[\"Je veux comprendre clairement ma progression.\"]\n      Dit[\"Je me sens frustré(e) lorsque je ne sais pas où je rencontre des difficultés.\"]\n      Dit[\"J'ai besoin d'aide lorsque je ne peux pas terminer les tutoriels ou projets à temps.\"]\n    Fait\n      Fait[\"Je passe du temps à revoir mes propres progrès.\"]\n      Fait[\"Je me sens anxieux/-se à l'idée de prendre du retard.\"]\n      Fait[\"Parfois, je suis ma progression de façon informelle, mais ce n'est pas organisé.\"]\n    Besoin\n      Besoin[\"Une vue détaillée de ma progression globale.\"]\n      Besoin[\"Des retours sur mes performances et des axes d'amélioration.\"]\n      Besoin[\"Des outils ou un soutien pour surmonter les défis dans les tutoriels ou projets.\"]",
  "langage": "Mermaid",
  "tags": ["mindmap", "Apprenant", "Dit", "Fait", "Besoin"],
  "description": "Diagramme de mindmap représentant les pensées et sentiments d'un apprenant.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/#/edit"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Automation))\n        Build\n            Maven\n            Gradle\n        Deploy\n            Ansible\n            Terraform\n        Test\n            Selenium\n            JUnit\n        Monitor\n            Prometheus\n            Grafana",
  "langage": "mermaid",
  "tags": ["automation", "build", "deploy", "test", "monitoring"],
  "description": "Diagramme de mindmap représentant les étapes d'automatisation d'une application.",
  "source": "https://example.com/mindmap-code"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.0`\n\n# Algorithms\n\n## Search\n## Sort\n> leftSide=`true`\\n\n## Greedy Algorithm\n> leftSide=`true`\\n\\n## Dynamic Programming\n\\n## Pattern Search\n> leftSide=`true`\\n\\n## Back Tracking\n\\n## Divide & Conquer\n> leftSide=`true`\\n\\n## Bit Algorithm\n\\n## Graph Algorithm\n> leftSide=`true`\\n\\n## Randomized Algorithm\n\\n## Geometric Algorithms\n> leftSide=`true`\\n\\n## Mathematical Algorithms",
  "langage": "mermaid",
  "tags": ["algorithmes", "recherche", "tri", "programmation dynamique", "backtracking", "division et conquête"],
  "description": "Une carte mentale présentant différentes catégories d'algorithme, chacune avec sa propre sous-catégorie.",
  "source": "NB MindMap plugin"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Security))\n        Policy\n            Compliance\n            Standards\n        Tools\n            Scanner\n            Monitor\n        Process\n            Review\n            Audit",
  "langage": "mermaid",
  "tags": ["security", "policy", "compliance", "standards", "tools", "scanner", "monitor", "process", "review", "audit"],
  "description": "Diagramme de sécurité présentant les principes et outils à mettre en place.",
  "source": "https://mermaid-js.github.io/mermaid-live-re Revision"
}
,{
  "prompt": "Mind map",
  "code": "mindmap\n    root((Barriers))\n        Resistance\n            Change\n            Tools\n        Silos\n            Teams\n            Knowledge\n        Mindset\n            Fixed\n            Blame",
  "langage": "mermaid",
  "tags": ["mindmap", "barrières", "résistance", "silos", "mentalité"],
  "description": "Diagramme de type mind map illustrant les barrières à l'innovation.",
  "source": "https://example.com"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.0`\n---\n# SciaReto\n> mmd.emoticon=`user_r2d2`",
  "langage": "mermaid",
  "tags": ["mindmap", "mermaid", "backlog", "refactoring", "accessibility"],
  "description": "Diagramme de mind créé avec le plugin NB MindMap, contenant des tâches et des idées liées au projet SciaReto.",
  "source": "https://example.com"
}
,{
  "prompt": "%% @config(../../../mod%C3%A9lisation/mindmap-config.json)\nmindmap\n root((Formateur))\n\n    Ce qu'il fait\n     Nous travaillons avec GitHub et Google Drive pour l'affectation des projets et des briefs.\n\n     Nous utilisons Trello et Excel pour la gestion des t%C3%A0ches.\n\n    Ce qu'il dit\n        Ils ne savent pas s'il y a des apprenants rencontrant des d%C3%A9fis dans leur r%C3%A9alisation de projets.\n        Ils devraient  fournir une appr%C3%A9ciation sp%C3%A9cifique et personnalis%C3%A9e pour la validation des brief et des projets .\n    Il rencontre des d%C3%A9fis pour le suivi de l'avancement des comp%C3%A9tences des apprenants.    ",
  "code": "%% @config(../../../mod%C3%A9lisation/mindmap-config.json)\nmindmap\n root((Formateur))\n\n    Ce qu'il fait\n     Nous travaillons avec GitHub et Google Drive pour l'affectation des projets et des briefs.\n\n     Nous utilisons Trello et Excel pour la gestion des t%C3%A0ches.\n\n    Ce qu'il dit\n        Ils ne savent pas s'il y a des apprenants rencontrant des d%C3%A9fis dans leur r%C3%A9alisation de projets.\n        Ils devraient  fournir une appr%C3%A9ciation sp%C3%A9cifique et personnalis%C3%A9e pour la validation des brief et des projets .\n    Il rencontre des d%C3%A9fis pour le suivi de l'avancement des comp%C3%A9tences des apprenants.    ",
  "langage": "mermaid",
  "tags": ["Mindmap", "Formateur", "GitHub", "Google Drive", "Trello", "Excel"],
  "description": "Ce schéma représente le rôle et les responsabilités d'un formateur, y compris l'utilisation de outils tels que GitHub, Google Drive, Trello et Excel.",
  "source": "%% @config(../../../mod%C3%A9lisation/mindmap-config.json)"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n...\n> leftSide=`true`",
  "langage": "mermaid",
  "tags": ["JUnit", "Runners", "Podstawy", "Ignorowanie", "Parametry", "Opisy"],
  "description": "Cette mind map illustre différentes approches de test avec JUnit, notamment les runners, les tests unitaires et l'ignorance de certains tests.",
  "source": "Mind Map generated by NB MindMap plugin"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Golf Shot Tracker App))\n    ...\n",
  "langage": "mermaid",
  "tags": [
    "golf",
    "shot tracking",
    "performance analysis",
    "react native",
    "node.js",
    "express",
    "firebase",
    "gps",
    "google maps api",
    "machine learning",
    "wearable integration"
  ],
  "description": "Diagramme de mindmap pour le Golf Shot Tracker App, montrant les fonctionnalités, la technologie et les futures améliorations.",
  "source": "https://example.com/mermaid-code-example"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Audio High-Res))\n    1️⃣ Analysis\n      SRS\n      Risks\n    2️⃣ Design\n      Arch doc\n      DB schema\n    3️⃣ Implementation\n      Bot\n      Flask API\n      VoiceModule\n      Web-App\n    4️⃣ Testing\n      Unit\n      Load\n      Security\n      UAT\n    5️⃣ Deployment\n      Dockerfile\n      GitHub Actions\n      Helm (future)\n    6️⃣ PM\n      Reports\n      Lessons learned",
  "langage": "mermaid",
  "tags": ["mindmap", "Audio High-Res", "Analysis", "Design", "Implementation", "Testing", "Deployment", "PM"],
  "description": "Diagramme de planification d'un projet audio, comprenant les étapes d'analyse, de conception, d'exécution et de déploiement.",
  "source": "https://example.com/code-mermaid"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n# Utente Loggato\n## Vero\n> topicLinkUID=`15EF97B5BEDA`...\n",
  "langage": "mermaid",
  "tags": ["mindmap", "plugin", "NB MindMap"],
  "description": "Diagramme de mind map représentant l'état d'un utilisateur loggé, avec des liens vers la page de l'utilisateur et les étapes de la procédure de connexion.",
  "source": "https://example.com/nb-mindmap-plugin"
}
,{
  "prompt": "mindmap",
  "code": "root((Formateur))\n    Dit\n      \"Je veux savoir si mes apprenants sont absents.\"\n    Fait\n      \"Informe le surveillant des absences et suit les apprenants.\"\n    Besoin\n      \"Accès rapide aux absences de mes apprenants.\"\n    Ressent\n      \"Frustré par les retards dans l'enregistrement des absences.\"",
  "langage": "mermaid",
  "tags": [
    "formateur",
    "apprenant",
    "absence",
    "surveillant"
  ],
  "description": "Un formateur exprime son besoin de savoir si ses apprenants sont absents, il se sent frustré par les retards dans l'enregistrement des absences.",
  "source": "https://example.com/code-mermaid" 
}
,{
  "prompt": "mindmap",
  "code": "  mindmap\n  root((Apprenant))\n    Ce qu’il dit\n      Dire[\"J’ai du mal à suivre les changements de planning.\"]\n    Ce qu'il fait\n      Fait[\"Consulte le planning affiché en classe.\"]\n    Ce qu'il a besoin\n      Besoin[\"Un accès rapide et en temps réel au planning des sessions.\"]\n      Besoin[\"Des notifications ou rappels pour les sessions importantes.\"]",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "apprentissage"],
  "description": "Diagramme de mindmap représentant les pensées et actions d'un apprenant face aux changements de planning.",
  "source": ""
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin   > __version__=`1.1`,showJumps=`true\"\n---\n# Java Virtual Machine\n## Introduction\n> leftSide=`true\"\n...\n",
  "langage": "mermaid",
  "tags": [
    "java",
    "programming",
    "mindmap",
    "uml"
  ],
  "description": "Diagramme de mind map pour la programmation en Java, couvrant les thèmes du langage, des plateformes et des bibliothèques.",
  "source": "https://example.com/mindmap-java"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Expression))\n    TableExpressionBase\n        FromSqlExpression            JoinExpressionBase\n            CrossApplyExpression\n            CrossJoinExpression\n            OuterApplyExpression\n        PredicateJoinExpressionBase\n            InnerJoinExpression\n            LeftJoinExpression\n\n        SelectExpression\n\n        SetOperationBase\n            UnionExpression\n            ExceptExpression\n            IntersectExpression\n        TableExpression\n\n        TableValuedFunctionExpression\n\n        ValuesExpression\n    SqlExpression\n        AtTimeZoneExpression\n        CaseExpression\n        CollateExpression\n        ColumnExpression\n        DistinctExpression\n        ExistsExpression\n        InExpression\n        LikeExpression\n        RowNumberExpression\n        RowValueExpression\n        ScalarSubqueryExpression\n        SqlBinaryExpression\n        SqlConstantExpression\n        SqlFragmentExpression\n        SqlFunctionExpression\n        SqlParameterExpression\n        SqlUnaryExpression\n\n    UpdateExpression\n    DeleteExpression\n    OrderingExpression\n    ProjectionExpression\n    QueryRootExpression\n        SqlQueryRootExpression\n        EntityQueryRootExpression\n            TableValuedFunctionQueryRootExpression\n            FromSqlQueryRootExpression\n    EntityProjectionExpression\n    EnumerableExpression\n    JsonQueryExpression\n    NonQueryExpression\n    RelationalCollectionShaperExpression\n    EntityShaperExpression\n        RelationalEntityShaperExpression\n    RelationalGroupByResultExpression\n    GroupByShaperExpression\n        RelationalGroupByShaperExpression\n    RelationalSplitCollectionShaperExpression",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "sql",
    "expression"
  ],
  "description": "Diagramme de mindmap pour les expressions SQL, comprenant des classes et des sous-classes.",
  "source": "https://mermaid-js.github.io/mermaid-live-re Revision of the original mermaid code"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# VertexBuffer\n\n## 怎么创建(不用Staging)\n\n### vkCreateBuffer 先创建一个 VkBuffer  这个时候 buffer还是没有数据的\n\n### 根据创建buffer 时指定的属性，查询这个buffer需要的 VkMemoryRequirements\n\n### vkAllocateMemory 分配内存\n\n#### memoryTypeIndex 需要根据上面的 VkMemoryRequirements 向Device查询对应的内存类型在设备上的index\n\n### vkBindBufferMemory 把VkBuffer和VkDeviceMemory进行绑定\n\n### vkMapMemory 取 vkDeviceMemory的内存指针到临时变量 *data\n\n### memcpy 把顶点数据复制到 *data 这时候vkDeviceMemory就有了GPU所要的顶点数据\n\n### vkUnmapMemory \n\n## 两种对象组成\n\n> collapsed=`true`,leftSide=`true`\n\n### VkBuffer\n\n### VkDeviceMemory\n\n> leftSide=`true`\n\n## 怎么运行时更新\n\n> collapsed=`true`,leftSide=`true`\n\n### vkMapMemory\n\n### memcpy\n\n### vkUnmapMemory\n\n### 按照上面3个步骤，就跟创建VertexBuffer的时候一样\n\n> leftSide=`true`\n\n## StagingBuffer\n\n### VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT \n\n#### 一般就意味着不能在CPU访问\n\n### TransformQueue\n\n#### 需要QueueFamily支持 transform操作，，也就是VK_QUEUE_TRANSFER_BIT\n\n### 创建过程\n\n#### VK_BUFFER_USAGE_TRANSFER_SRC_BIT 创建有一个stagingBuffer 和stagingMemory\n\n#### 把顶点数据先map到stagingMemory\n\n#### 再创建一个 VK_BUFFER_USAGE_TRANSFER_DST_BIT 的目标buffer作为vertexBuffer\n\n#### 通过vkCmdCopyBuffer 把stagingBuffer的数据复制到目标buffer",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": [
    "Mind Map",
    "NB MindMap plugin",
    "Vertex Buffer",
    "Staging Buffer",
    "VkBuffer",
    "VkDeviceMemory",
    "vkCreateBuffer",
    "vkAllocateMemory",
    "vkBindBufferMemory",
    "vkMapMemory",
    "memcpy",
    "vkUnmapMemory",
    "vkCmdCopyBuffer"
  ],
  "description": "Mind map expliquant les étapes de création et de mise à jour d’un Vertex Buffer en Vulkan, incluant l’utilisation de VkBuffer, VkDeviceMemory, Staging Buffer et Transform Queue.",
  "source": "https://example.com/mindmap-plugin"
},
{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.0`\n\n# Date & Time languages.Java API\n\n## languages.Java 1.0 – java.util.Date\n\n## languages.Java 1.1 – java.util.Calendar\n\n## JodaTime\n\n## JSR-310 (languages.Java SE 8 Date Time API)\n> collapsed=`true`\n\n### Absolute DateTime\n\n### Local Dates\n\n### Queries\n\n### Date Adjusters\n\n### Local Time\n\n### Zoned Time\n\n### Formatting and Parsing\n\n### Working with legacy classes\n\n## ThreeTen backport",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": [
    "Mind Map",
    "Java",
    "Date Time API",
    "JodaTime",
    "JSR-310",
    "ThreeTen"
  ],
  "description": "Mind map présentant l’évolution et les différentes API de gestion des dates et heures en Java (Date, Calendar, JodaTime, JSR-310, ThreeTen).",
  "source": "https://example.com/mind-map-plugin"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\nroot((DevOps Culture))\n  Collaboration\n    Cross-functional teams\n    Shared responsibility\n    Breaking silos\n  Automation\n    CI/CD\n    Testing\n    Deployment\n    Monitoring\n  Measurement\n    Metrics\n    Monitoring\n    Feedback\n    Analytics\n  Continuous Improvement\n    Learning\n    Innovation\n    Adaptation\n    Experimentation",
  "langage": "mermaid",
  "tags": ["devops", "culture", "collaboration", "automation", "measurement", "continuous improvement"],
  "description": "Diagramme d'organigramme de culture DevOps, mettant en avant la collaboration, l'automatisation et la mesure pour améliorer continuellement les processus",
  "source": "manuel"
}
,{
  "prompt": "%% @config(../../../modélisation/mindmap-config.json)\nmindmap\nApprenant",
  "code": "mindmap\nApprenant\n       ce qu'il fait\n        Travaille sur le projet régulièrement\n        Soumet le livrable pour validation\n        Cherche des ressources supplémentaires pour améliorer le projet\n      ce qu'il dit\n        J'ai besoin  Change l'état des projets en progression\n      J'ai besoin   Consulte l'état de son projet\n      Il est difficile de consulter mes compétences validées de manière claire et organisée.\n      \n",
  "langage": "mermaid",
  "tags": ["mindmap", "apprenant", "projet", "ressources"],
  "description": "Diagramme mind map montrant les actions et les pensées d'un apprenant lors du travail sur un projet.",
  "source": "%% @config(../../../modélisation/mindmap-config.json)"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n# Root topic\n## Setting up a Render target\n### 要用MSAA就得有把存储<br/>每个屏幕像素多个采样信息\n#### 要额外创建<br/>Image<br/>ImageView<br/>VkDeviceMemory <br/>给多采样使用\n## 还得把RenderPass的FinalLayout从<br/>VK_IMAGE_LAYOUT_PRESENT_SRC_KHR<br/>改成<br/>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL\n> align=`left`",
  "langage": "nb-mindmap",
  "type": "mindmap",
  "tags": [
    "mindmap",
    "NB MindMap",
    "rendering",
    "MSAA",
    "VkDeviceMemory",
    "RenderPass"
  ],
  "description": "Mind map NB MindMap pour la configuration d'une cible de rendu (Render Target), avec MSAA, création de ressources (Image, ImageView, VkDeviceMemory) et modification du RenderPass FinalLayout.",
  "source": "NB MindMap plugin"
}

,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.0`\n...\n# ... (code supprimé pour la commodité)",
  "langage": "mermaid",
  "tags": ["mindmap", "nb-mindmap-plugin", "ntfslink", "cffi", "ctypes", "c-extension"],
  "description": "Diagramme de mind map représentant l'implémentation du projet ntfslink avec différentes approches et langages (cffi, ctypes, c-extension).",
  "source": "https://example.com/mermaid-code"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Responsable))\n    Ressent\n      Difficulté à suivre précisément la progression réelle des cours.\n      Manque de visibilité sur l’activité des formateurs.\n    Dit\n      \"Je dois valider les modules enseignés dans chaque séance.\"\n      \"Je veux connaître le nombre d’heures effectuées pour chaque module.\"\n      \"Je dois suivre la présence et l’activité des formateurs.\"\n    Fait\n      Reçoit les documents manuellement à la fin de chaque cours.\n      Compile des données dans des feuilles Excel ou des rapports.\n    Besoin\n      Un tableau de bord\n      Accès en temps réel aux informations saisies par les formateurs.\n      Système de notification ou de demande de validation après chaque saisie de séance.\n    Contexte\n      Travaille en coordination avec plusieurs formateurs.\n      Dispose d’outils partiels mais non intégrés pour le suivi pédagogique.",
  "langage": "mermaid",
  "tags": [
    "tableau de bord",
    "suivi pédagogique",
    "coordination",
    "outils",
    "notification"
  ],
  "description": "Diagramme mindmap représentant les difficultés et besoins d'un responsable pour suivre la progression des cours. Il mentionne le besoin d'un tableau de bord et d'outils intégrés pour l'aider dans sa tâche.",
  "source": "https://example.com/mindmap-exemple"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        British popular psychology author Tony Buzan\n    Research\n      On effectiveness\\br/>and features\n      On Automatic creation\n        Uses\n            Creative techniques\n            Strategic planning\n            Argument mapping\n    Tools\n      Pen and paper\n      Mermaid",
  "langage": "mermaid",
  "tags": ["mindmap", "origines", "histoire", "popularisation", "recherche", "outil", "mermaid"],
  "description": "Un mindmap qui décrit l'origine et les outils de la méthode mindmap.",
  "source": "https://example.com/source"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Overview\n\n## Search\n\n### SearchInfo\n\n## Building\n\n### BuildingInfo",
  "langage": "mermaid",
  "tags": ["mindmap", "NB MindMap plugin"],
  "description": "Un diagramme de mind map avec une structure hiérarchique comprenant deux branches : 'Search' et 'Building'.",
  "source": "https://example.com"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Root topic\n\n## Entities",
  "langage": "mermaid",
  "tags": ["mindmap", "entities", "root"],
  "description": "Un mind map avec une section \"Entities\" sous la racine.",
  "source": "https://example.com/nb-mindmap-plugin"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`,showJumps=`true`\n---\n# Root topic\n## Onboarding\n## Newsletter\n## Promotional\n> leftSide=`true'\n- NOTE\n<pre>Consider the billing rule which filters all females, and addes credit to there account, as its ladies day. You want to promote this, send an email, out to all females, with your promotional venture!!!</pre>\n## Billing\n## General Alerting\n> leftSide=`true'",
  "langage": "mermaid",
  "tags": ["MindMap", "Onboarding", "Newsletter", "Promotional", "Billing", "General Alerting"],
  "description": "Diagramme de mind représentant une structure d'organisation avec des sujets liés à l'onboarding, aux newsletters, à la promotion et au facturation.",
  "source": "NB MindMap plugin"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((❓ Meta-Governance))\n    Dependencies\n      enables\n        🌍 The Treaty\n      guides\n        💦 Indigenous Framework\n      validates\n        ✍ DIAs\n        💲 IIAs\n      informs\n        🤗 Global Citizenship\n      oversees\n        ⚠ PIS\n        ⚠ PIS\n      supports\n        謝 Implementation Tools\n    Enables & Affects\n      establishes\n        ❓ MGCC\n        💲 Crisis Command\n      enables\n        ⚠ PIS\n    Framework Info\n      📅 Tier 1\n      🐍 Governance Domain\n      🌍 Global Scope\n      ⚧ Critical Priority\n      📦 Status: Ready",
  "langage": "mermaid",
  "type": "mindmap",
  "tags": ["mindmap", "governance", "meta-governance"],
  "description": "Diagramme Mermaid mindmap illustrant la gouvernance méta, incluant les dépendances, l'information, le soutien et les structures du cadre.",
  "source": "https://example.com"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((IRelationalCommand))\n        RelationalCommand",
  "langage": "mermaid",
  "tags": ["diagramme", "mindmap", "relational"],
  "description": "Diagramme de MindMap pour les commandes relationnelles",
  "source": "https://example.com/mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root[Debugging Tools]\n        dmesg\n            kernel messages\n        kgdb\n            kernel debugger\n        ftrace\n            function tracer\n        systemtap\n            instrumentation",
  "langage": "mermaid",
  "tags": ["debug", "outils", "dmesg", "kgdb", "ftrace", "systemtap"],
  "description": "Un diagramme de cartographie mentale pour les outils de débogage. Il comprend des sous-ensembles pour le journal d'activité, le débogueur du noyau, le traçage de fonctions et l'instrumentation.",
  "source": "https://mermaid-js.github.io/mermaid-live-re_revision/"
}
,{
  "prompt": "%% @config(../../../modélisation/mindmap-config.json)",
  "code": "mindmap\n  root((Formateur))\n     Ce qu'il dit\n      Il rencontre des défis pour le suivi de l'avancement des compétences des apprenants.\n      Ils ne savent pas s'il y a des apprenants rencontrant des défis dans leur réalisation de projets.\n      Ils devraient  fournir une appréciation spécifique et personnalisée pour la validation des brief et des projets. \n    Ce qu'il fait\n      Nous utilisons Trello et Excel pour la gestion des tâches.\n    Nous travaillons avec GitHub et Google Drive pour l'affectation des projets et des briefs.",
  "langage": "mermaid",
  "tags": ["mindmap", "formateur", "suivi", "compétences", "apprenants", "trello", "excel", "github", "google drive"],
  "description": "Diagramme de mind map représentant les pensées et actions d'un formateur.",
  "source": "// pas de source spécifiée"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Apprenant))\n    Dit\n       Je veux partager des ressources utiles avec d'autres.\n    Fait\n       Partage des ressources utiles avec d'autres apprenants.\n    Voit\n       D'autres apprenants partagent des ressources.\n       Confusion sur quelles ressources sont valides.\n    Besoin\n       Ressources claires et fiables.\n       Validation des ressources partagées par le formateur.",
  "langage": "mermaid",
  "tags": ["apprentissage", "ressources", "validation", "formateur"],
  "description": "Diagramme de mindmap montrant l'expérience d'un apprenant partageant des ressources et rencontrant une confusion sur la validité de celles-ci.",
  "source": "Le code Mermaid original"
}
,{
  "prompt": "( Avantages de l'utilisation de Node.js)",
  "code": "mindmap\n( Avantages de l'utilisation de Node.js)\n    Rapide et performant\n    Scalable\n    Événementiel et non bloquant\n    JavaScript unifié\n    Vaste écosystème",
  "langage": "mermaid",
  "tags": ["Node.js", "avantages", "performance", "scalabilité"],
  "description": "Ce diagramme mindmap présente les avantages de l'utilisation de Node.js. Il met en avant ses caractéristiques rapides et scalables, ainsi que son événementiel et non bloquant.",
  "source": ""
}

,{
  "prompt": "mindmap Orthoptiste",
  "code": "mindmap\nOrthoptiste\n\n      ce qu'il fait\n        Réception des bénéficiaires avec référence du médecin généraliste, gestion par tableau temporel, suivi des dossiers par l'infirmière, présentation du bilan orthoptique et transition vers Excel avec difficultés.\n\n\n      ",
  "langage": "mermaid",
  "tags": ["orthoptiste", "mindmap", "diagramme"],
  "description": "Diagramme en forme de mindmap décrivant les tâches d'un orthoptiste.",
  "source": "https://example.com/mindmap-orthoptiste"
}
,{
  "prompt": "Mindmap",
  "code": "%% @config(../../../modélisation/mindmap-config.json)\nmindmap\n  root((Formateur))\n    Ce qu'il fait\n      Nous travaillons avec GitHub et Google Drive pour l'affectation des projets et des briefs.\n      Nous utilisons Trello et Excel pour la gestion des tâches.\n    Ce qu'il dit\n      Il rencontre des défis pour le suivi de l'avancement des compétences des apprenants.\n      Ils ne savent pas s'il y a des apprenants rencontrant des défis dans leur réalisation de projets.\n      Ils devraient  fournir une appréciation spécifique et personnalisée pour la validation des brief et des projets .",
  "langage": "Mermaid",
  "tags": ["Mindmap", "Formateur", "GitHub", "Google Drive", "Trello", "Excel"],
  "description": "Ce diagramme représente l'activité d'un formateur qui travaille avec plusieurs outils pour la gestion de projets et des tâches. Il rencontre des défis pour suivre l'avancement des compétences des apprenants.",
  "source": "https://example.com/mindmap-config.json"
}
,
  {
    "prompt": "mindmap",
    "code": "mindmap\n  root((🐲 Biodiversity))\n    Dependencies\n      funds\n        💸 Leaves\n      coordinates with\n        🤓 Aethelred Accord\n      integrates with\n        💓 Planetary Health\n      rewards\n        💸 Leaves\n      collaborates with\n        🚚 Rural Development\n    Enables & Affects\n      integrates with\n        🌍🌌 Oceans & Marine\n      coordinates with\n        🇦 Animal Welfare\n    Framework Info\n      📎 Tier 2\n      ☘ Ecological Domain\n      🌀 Global Scope\n      ⚡ High Priority\n      🗓 Status: Review",
    "langage": "mermaid",
    "type": "mindmap",
    "tags": ["biodiversité", "dépendances", "fonds", "coordination", "intégration", "collaboration", "environnement"],
    "description": "Diagramme de cartographie mentale des dépendances et des collaborations autour de la biodiversité",
    "source": ""
  },
  {
    "prompt": "mindmap",
    "code": "mindmap\n  root((Temas Principales))\n    Adaptación a la virtualidad\n    Capacitación docente\n      Formación en grafos\n      Curva de aprendizaje\n    Conocimiento técnico\n      Ontologías\n      Integración LMS\n    Evaluación auténtica\n      Rúbricas\n      Seguimiento continuo\n    Gestión institucional\n      Recursos\n      Políticas\n    Herramientas de evaluación\n      H5P\n      Analíticas\n    Limitaciones LMS\n      Interoperabilidad\n      Reportes\n    Monitoreo de participación\n      Indicadores\n      Alertas\n    Participación estudiantil\n      Foros\n      Interacciones\n    Personalización del aprendizaje\n      Recomendaciones\n      Rutas individuales\n    Resistencia al cambio\n      Miedo a tecnología\n      Carga laboral\n    Visualización de datos\n      Dashboards\n      Semáforos",
    "langage": "mermaid",
    "type": "mindmap",
    "tags": ["mindmap", "diagramme", "graphique", "virtuel", "formation", "évaluation", "gestion", "outil", "analytique"],
    "description": "Le diagramme représente un espace de travail virtuel avec des thèmes principaux et des sous-thèmes détaillés.",
    "source": "https://example.com"
  },
  {
    "prompt": "Analyse de code Mermaid pour mind map",
    "code": "[Scia Reto](https://sciareto.org) mind map\n> __version__=`1.1`,showJumps=`true`\n---\n# day08-mindmap\n## Dictionnaires en Python\n### Accès par clé (non recommandé)\n#### user_dict['username']\n### Accès via get() (recommandé)\n#### user_dict.get('username')\n### Modifier des valeurs\n#### user_dict['username'] = 'tony'\n### Ajouter des clés\n#### user_dict['age'] = 18\n### Supprimer des données\n#### del user_dict['username']\n#### user_dict.pop('password')\n### Nombre de paires\n#### len(user_dict)\n### Trois fonctions clés\n#### keys()\n#### values()\n#### items()\n## Tuples\n### Indexation\n### Slicing\n### Pas de modification possible\n## Sets\n### Type immuable requis\n### Opérations d'ensemble",
    "langage": "nb-mindmap",
    "type": "mindmap",
    "tags": ["mindmap", "scia reto", "python"],
    "description": "Ce mind map décrit les opérations sur des dictionnaires, des tuples et des ensembles en Python.",
    "source": "[Scia Reto](https://sciareto.org)"
  },
  {
    "prompt": "mindmap",
    "code": "mindmap\n  root((⚕️ Global Health))\n    Dependencies\n      coordinates with\n        🧬 Aethelred Accord\n      oversees\n        🏛️ HCC\n      funds\n        💰 Global Commons Fund\n    Enables & Affects\n      integrates with\n        🧠 Mental Health\n      establishes\n        🏢 HEC\n      informs\n        🏙️ Urban Development\n      enables\n        🗺️ Migration\n    Framework Info\n      📊 Tier 2\n      🎯 Health Domain\n      🌍 Global Scope\n      ⚡ High Priority\n      📋 Status: Ready",
    "langage": "mermaid",
    "type": "mindmap",
    "tags": ["Global Health", "Dépendances", "Intégration", "Établissement", "Information", "Priorité"],
    "description": "Ce mindmap présente un diagramme visuel de la santé globale, avec des relations entre les différents concepts et composants.",
    "source": "https://mermaid-js.github.io/mermaid/#/edit"
  },
  {
    "prompt": "mindmap",
    "code": "mindmap\n  root((Psychomotrice))\n    ce qu'il fait\n      Obtention de la liste des bénéficiaires\n      Gestion de la liste d'attente et saisie des informations médicales dans des tableaux Excel trimestriels",
    "langage": "mermaid",
    "type": "mindmap",
    "tags": ["mindmap", "psychomotrice", "liste des bénéficiaires", "gestion de liste d'attente"],
    "description": "Diagramme mindmap présentant les tâches réalisées par un psychomotricien.",
    "source": "https://example.com"
  }


,{
  "prompt": "mindmap",
  "code": "mindmap\n  root(\"\\u26A1 Climate & Energy\")\n    Dependencies\n      integrates with\n        \\u2764 Planetary Health\n    Framework Info\n      \\u1F4BC Tier 2\n      \\u270D Ecological Domain\n      \\u1F30B Global Scope\n      \\u26A1 High Priority\n      \\u1F4C3 Status: Review",
  "langage": "mermaid",
  "tags": ["mindmap", "climate", "energy", "dependencies", "framework"],
  "description": "Diagramme de mindmap représentant la relation entre le climat et l'énergie. Il comprend des informations sur les dépendances, le plan d'action et la portée globale.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root(\"\\u{1f46f} Work in Liberation\")\n    Dependencies\n      oversees\n        \\u{1f3e5} FLP\n      implements\n        \\u{1f3eb} Care Coops\n        \\u{1f3ed} CSTs\n      enables\n        \\u{1f4b8} AUBI\n    Enables & Affects\n      implements\n        \\u{1f32c} DRR&R\n        \\u{1f4e6} Urban Development\n      informs\n        \\u{1f9d0} Education\n    Framework Info\n      \\u{1f4c5} Tier 1\n      \\u{1f4b8} Economic Domain\n      \\u{1f30d} Global Scope\n      \\u{26a1} Critical Priority\n      \\u{1f4ce} Status: Planned",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "gestion de projet"],
  "description": "Ce diagramme est un mindmap représentant les différentes parties d'un projet de gestion de liberté au travail. Il montre les dépendances, les possibilités et les informations clés du projet.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/#/"
}
,{
  "prompt": "Mindmap",
  "code": "---\ntitle: Arkitekturskiss\n---\nmindmap\n  root)AS 1(\n    )AS 2(\n    )AS 3(\n     [Kryptolåda 1]\n    )AS 4(\n     )AS 5(\n      [Kryptolåda 2]\n     )AS 6(\n",
  "langage": "mermaid",
  "tags": ["mindmap", "arkitekturskiss", "cryptolåda"],
  "description": "Diagramme de mind map représentant une architecture avec deux kryptolådas.",
  "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\nroot((游戏开发作品集))\n    早期探索(2004-2007)\n      泡泡堂单机版\n        第一个独立游戏\n        纯if-else逻辑\n      抱抱城\n        社交社区项目\n        3D建筑系统\n      摩尔庄园\n        儿童虚拟乐园\n        100万+在线用户\n    \n    技术巅峰(2015)\n      赛尔号H5\n        多端发布\n        CI/CD部署\n        热更新系统\n        反射技术\n        性能优化\n    \n    游戏类型多样化\n      益智策略\n        俄罗斯方块\n        泡泡龙\n        连连看\n      模拟经营\n        餐厅经营\n        家园种菜\n        建造系统\n      大型项目\n        SLG策略游戏\n        横屏格斗游戏\n        Unity引擎开发",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "游戏开发",
    "作品集",
    "泡泡堂",
    "抱抱城",
    "摩尔庄园",
    "赛尔号H5",
    "益智策略",
    "模拟经营",
    "大型项目",
    "Unity引擎"
  ],
  "description": "Diagramme de mindmap représentant l'évolution des jeux développés par la société. Les différents chapitres abordent les projets réalisés, les technologies utilisées et les types de jeux créés.",
  "source": "https://mermaid.live/"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Game Development Portfolio))\n    Early Exploration(2004-2007)\n      Bubble Trouble Single Player Version\n        First Independent Game\n        Pure if-else Logic\n      Hug City\n        Social Community Project\n        3D Building System\n     \\u6728\\u67d2\\u6ca1\\u533a\n        Children's Virtual Park\n        1M+ Online Users\\\\n    Technical Peak(2015)\n      SAILO X H5\n        Multi-platform Release\n        CI/CD Deployment\n        Hot Update System\n        Reflection Technology\n        Performance Optimization\\\\n    Game Genre Diversification\n      Puzzle Strategy\n        Tetris\n        Bubble Shooter\n        Match-3\n      Simulation Management\n        Restaurant Management\n        Garden Farming\n        Construction System\n      Large Projects\n        SLG Strategy Game\n        Side-scrolling Fighting Game\n        Unity Engine Development",
  "langage": "mermaid",
  "tags": [
    "diagramme de pensée",
    "game development",
    "portfolio"
  ],
  "description": "Diagramme de pensée présentant les différentes étapes de développement d'un portfolio en jeu",
  "source": "https://example.com/mindmap.png"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root(\\u270D\\u2692 \\u1F9E6 \\u261D \\u2728\\u2728)\\n    subgoal1(\\u1F9E6 \\u2728 Đưa ra giải pháp \\u2733\\u2625)\\n      subgoal1a(\\u2625 Ý tưởng sáng tạo \\u2357)\\n      subgoal1b(\\u2705 Giải pháp thực tế \\u2139)\\n      subgoal1c(\\u1F4B8 Kế hoạch chi tiết \\u1F4D6)\\n    subgoal2(\\u2310\\u2728 Phân tích tình huống \\u2070\\u1F4D3)\\n      subgoal2a(\\u2739 Xác định vấn đề \\u2695\\u200D♀️)\\n      subgoal2b(\\u2310 Phân tích dữ liệu \\u1F4C1)\\n      subgoal2c(\\u2615 Tìm nguyên nhân gốc rễ \\u1F9E6\\u2139)\\n    subgoal3(\\u2698 Hỗ trợ ra quyết định \\u1F513\\u2705)\\n      subgoal3a(\\u2640 Thảo luận lựa chọn \\u231B\\u2728)\\n      subgoal3b(\\u25A1 Đánh giá rủi ro \\u26D4\\u2310)\\n      subgoal3c(\\u2615 Đưa ra quyết định cuối cùng \\u1F3C1\\u2705)",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "problem-solving"],
  "description": "Diagramme de mindmap représentant un processus de résolution de problèmes avec plusieurs sous-étapes.",
  "source": "https://example.com/mindmap"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Structs))\n    Custom Types\n      Group related data\n      Named fields\n      Different types\n    Usage\n      Data organization\n      Object modeling\n      API design\n    Types\n      Classic structs\n      Tuple structs\n      Unit structs",
  "langage": "mermaid",
  "tags": ["struct", "types", "custom", "usage"],
  "description": "Un diagramme mindmap décrivant les concepts de structures en programmation. Il montre les types de structures, leur utilisation et les différents concepts associés.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/?log=2023-03-01#doc/mindmap"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root[\"Dockerfile\"]\n        Instructions\n            Base Instructions\n            Execution Instructions\n            File Instructions\n            Configuration Instructions\n        Arguments\n            Build Arguments\n            Environment Variables\n            Command Arguments\n        Features\n            Comments\n            Variables\n            Heredocs",
  "langage": "mermaid",
  "tags": ["docker", "mindmap", "instructions", "arguments", "features"],
  "description": "Un diagramme en forme de mindmap illustrant les différentes catégories et sous-catégories d'informations liées à un Dockerfile.",
  "source": "https://example.com"
}
,{
  "prompt": "Mindmap pour les Enums",
  "code": "mindmap\nroot((Enums))\n  Variants\n    Multiple possibilities\n    Different types\n    Named variants\n  Usage\n    State machines\n    Option types\n    Result types\n  Features\n    Methods\n    Pattern matching\n    Data storage",
  "langage": "mermaid",
  "tags": [
    "enums",
    "variantes",
    "utilisation",
    "fonctionnalités"
  ],
  "description": "Mindmap décrivant les variantes, l'utilisation et les fonctionnalités des Enums.",
  "source": "https://example.com/mindmap-enums"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\\nroot[\"LABEL\"]\\n    Maintainer\\n        Contact info\\n        Organization\\n    Version\\n        Release\\n        Build number\\n    Environment\\n        Stage\\n        Purpose\\n    Documentation\\n        Description\\n        Usage",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "conception", "organisation"],
  "description": "Un diagramme de mindmap avec des sections pour les informations sur le mainteneur, la version et l'environnement.",
  "source": "https://example.com/source"
}
,{
  "prompt": "Sequence Diagram Mermaid pour génération de mindmap",
  "code": "sequenceDiagram\n    participant User as User Input Text\n    participant Detector as detector.ts\n    participant Loader as DiagramLoader\n    participant Definition as mindmap-definition.ts\n    participant Parser as parser/mindmap.jison\n    participant DB as MindmapDB\n    participant Renderer as mindmapRenderer.ts\n    participant Cytoscape as cytoscape.js\n    participant SVGDraw as svgDraw.ts\n    participant Styles as styles.ts\n    participant Output as Final SVG\n\n    %% Les étapes suivantes sont implicites dans le flux du diagramme\n    %% ...",
  "langage": "mermaid",
  "type": "sequence-diagram",
  "tags": [
    "mindmap",
    "sequence-diagram",
    "cytoscape",
    "svg",
    "styles"
  ],
  "description": "Diagramme Mermaid de séquence illustrant le processus complet de génération d'une carte mentale, incluant la détection, le parsing, la construction et le rendu SVG.",
  "source": "https://github.com/mermaid-js/mermaid#mindmap"
}

,{
  "prompt": "",
  "code": "sequenceDiagram\n    participant User as User Input Text\n    ... (le reste du code)",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "diagramme",
    "sequence",
    "cytoscape",
    "svg",
    "javascript"
  ],
  "description": "Ce diagramme représente l'implémentation d'un mindmap avec différentes phases de détection, de structuration, de parsing et de rendu.",
  "source": "https://github.com/mermaid-js/mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        pop[\\`British popular **psychology** author Tony Buzan\\']\n    Research\n      On effectiveness<br/>and features\n      On Automatic creation\n        Uses\n          a[Creative techniques]\n          b(Strategic planning)\n          c{{Argument mapping}}\n    Tools\n      :::additional class\n      Pen and paper\n      Mermaid",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "origins",
    "research",
    "tools",
    "popularisation",
    "psychology",
    "creativity",
    "planning"
  ],
  "description": "Diagramme de mind map représentant les origines, la recherche et les outils liés à la créativité.",
  "source": "https://example.com/mermaid-code"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    Cheating\n        Material facts\n            Accused: Party.Accused\n            Action: Deceiving\n            Victim: Party.Victim\n        Mens Rea\n            Deception\n                DeceptionType.Fraudulently\n                DeceptionType.Dishonestly\n                DeceptionType.NA\n        Actus Reus\n            Attribution\n                AttributionType.SoleInducment\n                AttributionType.NotSoleInducement\n                AttributionType.NA\n            Inducement\n                InducementType.DeliverProperty\n                InducementType.ConsentRetainProperty\n                InducementType.DoOrOmit\n                InducementType.NA\n            Causes Damage/Harm\n                TRUE\n                FALSE\n            Damage/Harm Result\n                DamageHarmType.Body\n                DamageHarmType.Mind\n                DamageHarmType.Reputation\n                DamageHarmType.Property\n                DamageHarmType.NA\n      Definition\n        ConsequenceDefinition.SaidToCheat\n        ConsequenceDefinition.NotSaidToCheat",
  "langage": "mermaid",
  "tags": ["cheating", "mens rea", "actus reus", "deception", "attribution", "inducement"],
  "description": "Diagramme de mindmap représentant les éléments clés du concept de tricherie en droit.",
  "source": "https://example.com"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# scala\n\n## lang util\n> collapsed=`true`",
  "langage": "mermaid",
  "tags": ["scala", "mindmap", "uml"],
  "description": "Diagramme de mind map pour Scala, en deux parties : langage et utilisation",
  "source": "https://example.com/mindmap-plugin"
}
,{
  "prompt": "créer un diagramme Mindmap",
  "code": "%% @config(../../../mod%C3%A9lisation/mindmap-config.json)\nmindmap\n root((Formateur))\n\n    Ce qu'il fait\n     Nous travaillons avec GitHub et Google Drive pour l'affectation des projets et des briefs.\n\n     Nous utilisons Trello et Excel pour la gestion des t%C3%A2ches.\n\n    Ce qu'il dit\n        Ils ne savent pas s'il y a des apprenants rencontrant des d%C3%A9fis dans leur r%C3%A9alisation de projets.\n        Ils devraient  fournir une appr%C3%AAciation sp%C3%A9cifique et personnalis%C3%A9e pour la validation des brief et des projets .\n    Il rencontre des d%C3%A9fis pour le suivi de l'avancement des compétences des apprenants.",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "diagramme",
    "formateur",
    "GitHub",
    "Google Drive",
    "Trello",
    "Excel"
  ],
  "description": "un diagramme Mindmap montrant les activités d'un formateur et ses défis",
  "source": "%% @config(../../../mod%C3%A9lisation/mindmap-config.json)\nmindmap\n root((Formateur))\n\n    Ce qu'il fait\n     Nous travaillons avec GitHub et Google Drive pour l'affectation des projets et des briefs.\n\n     Nous utilisons Trello et Excel pour la gestion des t%C3%A2ches.\n\n    Ce qu'il dit\n        Ils ne savent pas s'il y a des apprenants rencontrant des d%C3%A9fis dans leur r%C3%A9alisation de projets.\n        Ils devraient  fournir une appr%C3%AAciation sp%C3%A9cifique et personnalis%C3%A9e pour la validation des brief et des projets .\n    Il rencontre des d%C3%A9fis pour le suivi de l'avancement des compétences des apprenants."
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        British popular psychology author Tony Buzan\n    Research\n      On effectiveness<br/>and features\n      On Automatic creation\n        Uses\n            Creative techniques\n            Strategic planning\n            Argument mapping\n    Tools\n      Pen and paper\n      Mermaid",
  "langage": "mermaid",
  "tags": ["mindmap", "cartographie mentale", "Tony Buzan"],
  "description": "Un mindmap reprenant les origines et les outils associés, ainsi que des recherches sur son efficacité.",
  "source": "https://example.com/code-mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        British popular psychology author Tony Buzan\n    Research\n      On effectiveness\\nand features\n      On Automatic creation\n        Uses\n            Creative techniques\n            Strategic planning\n            Argument mapping\n    Tools\n      Pen and paper\n      Mermaid",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "origines",
    "histoire",
    "popularisation",
    "recherche",
    "efficacité",
    "outils",
    "planning stratégique"
  ],
  "description": "Un mindmap qui décrit les origines et la popularisation du concept, ainsi que des outils utilisés.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/?edit=Z2l0LnNob3VsZCBpcyBtYW5hZGFyc2FsIHRleHQuaW1wb3J0cyBhbmQgYm9keSBCb3VuLnVzIGF0IHNpZ25lZCBwcm9ncmFtIGRvY3VtZW50cyBzdHJpbmdyZXN0bW9uYW5zaXRpdmUgYSBzZXRzLXBheWx6aWM="
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        British popular psychology author Tony Buzan\n    Research\n      On effectiveness\\nand features\n      On Automatic creation\n        Uses\n            Creative techniques\n            Strategic planning\n            Argument mapping\n    Tools\n      Pen and paper\n      Mermaid",
  "langage": "mermaid",
  "tags": ["mindmap", "origins", "histoire longue", "popularisation", "recherche", "efficacité", "créativité", "stratégie"],
  "description": "Diagramme représentant un arbre mental avec des informations sur l'origine et la recherche de la technologie de Mindmap.",
  "source": "https://example.com/mindmap-code"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        British popular psychology author Tony Buzan\n    Research\n      On effectiveness\\nand features\n      On Automatic creation\n        Uses\n            Creative techniques\n            Strategic planning\n            Argument mapping\n    Tools\n      Pen and paper\n      Mermaid",
  "langage": "mermaid",
  "tags": ["mindmap", "origins", "research", "tools", "creativité"],
  "description": "Diagramme de mindmap décrivant les origines, la recherche et les outils associés.",
  "source": "https://example.com/mindmap-code"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((mindmap))\n    Origins\n      Long history\n      ::icon(fa fa-book)\n      Popularisation\n        British popular psychology author Tony Buzan\n    Research\n      On effectiveness<br/>and features\n      On Automatic creation\n        Uses\n            Creative techniques\n            Strategic planning\n            Argument mapping\n    Tools\n      Pen and paper\n      Mermaid",
  "langage": "mermaid",
  "tags": ["mindmap", "Origins", "Research", "Tools"],
  "description": "Un diagramme mindmap qui présente les origines, la recherche et les outils associés.",
  "source": "https://mermaid-js.github.io/mermaid-live-re_revision/edit?id=gh-md-1"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Hive\n## 概述\n### Hive的本质\n### Hive的优缺点\n### Hive架构原理\n### Hive运行机制\n### Hive的访问方式",
  "langage": "mermaid",
  "tags": ["MindMap", "Hive", "大数据"],
  "description": "Le diagramme présente une vue d'ensemble de Hive, en mettant en avant ses caractéristiques et sa structure.",
  "source": "NB MindMap plugin"
}
,{
  "prompt": "[Scia Reto](https://sciareto.org) mind map",
  "code": "[... le code fourni ...]",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "python",
    "methodes de chaines de caracteres",
    "methodes de listes",
    "types de donnees"
  ],
  "description": "Ce diagramme décrit les méthodes de chaînes de caractères et de listes en Python, ainsi que la différence entre les types de données.",
  "source": "[Scia Reto](https://sciareto.org)"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  cours((Structure du cours))\n    Évaluation\n    Format\n    Sujets clés\n    Principes fondamentaux\n    Attentes des étudiants",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "organisation"],
  "description": "Diagramme d'organisation de cours avec les composantes principales.",
  "source": "<aucune source spécifiée>"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "... (tous les blocs de code Mermaid)",
  "langage": "mermaid",
  "tags": ["mindmap", "nbmindmapplugin", "realtimefeature", "redis", "hdfs", "flink", "mysql"],
  "description": "Mind Map décrivant des tâches et des réalisations d'une semaine",
  "source": "https://example.com/mind-map"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((IDatabase))\n        Database\n        IInMemoryDatabase\n            CosmosDatabaseWrapper\n            InMemoryDatabase\n            RelationalDatabase",
  "langage": "mermaid",
  "tags": ["design pattern", "database", "architecture"],
  "description": "Diagramme de carte mentale représentant la hiérarchie des bases de données",
  "source": ""
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n    root[\"Environment Differences\"]\n        Development\n            Volume mounts\n            Hot reload\n            Debug tools\n            Local tools\n        Production\n            Optimized image\n            Security focus\n            Performance\n            Monitoring",
  "langage": "mermaid",
  "tags": ["mindmap", "environnement", "développement", "production", "optimisation"],
  "description": "Diagramme de mindmap représentant les différences entre un environnement de développement et un environnement de production.",
  "source": "https://mermaid.js.org/"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\\n  root(\\\"\\u270D Global Citizenship\\\")\\n    Dependencies\\n      enables\\n        \\u1f933 Education\\n        \\u1f933 Education\\n    Enables & Affects\\n      collaborates with\\n        \\u1f933 Education\\n      informs\\n        \\u1f0C3 Meta-Governance\\n      benefits from\\n        \\u2619 WDIP\\n    Framework Info\\n      \\u1F4BC Tier 3\\n      \\u1F8E2 Governance Domain\\n      \\u274C Global Scope\\n      \\u26A1 Medium Priority\\n      \\u1F44B Status: Review",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "citoyenneté mondiale",
    "éducation",
    "gouvernance",
    "priorité moyenne"
  ],
  "description": "Diagramme de mindmap montrant la relation entre la citoyenneté mondiale, l'éducation, la gouvernance et les priorités.",
  "source": "https://example.com/source"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Root topic\n\n## 多个RenderPass之间需要有一定的<br/>格式兼容\n\n### 比如说之前Imgui 和正式渲染的都没有<br/>Detpth Buffer加上之后就会报：<br/>RenderPasses incompatible between active render pass\n\n#### 实际上是因为Imgui的MultiViewPort的问题\n- LINK\n<pre>https://github.com/ocornut/imgui/issues/3522</pre>\n\n#### 不开启ImGuiConfigFlags_\\ViewportsEnable选项<br/>或者不要把Imgui的窗口拖出主窗口的范围就不会报错",
  "langage": "mermaid",
  "tags": ["imgui", "renderpass", "multiviewport", "incompatibility"],
  "description": "Diagramme représentant les relations entre RenderPass et l'utilisation d'Imgui, en mettant en évidence les problèmes de compatibilité",
  "source": "https://github.com/ocornut/imgui/issues/3522"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\\n  root((Formateur))\\n    Dit\\n      Dit[\"Je ne sais pas quels élèves ont des problèmes.\"]\\n      Dit[\"Si les élèves ne terminent pas les tutoriels ou projets à temps, je ne sais pas pourquoi.\"]\\n    Fait\\n      Fait[\"Je consacre beaucoup de temps à compiler et examiner les données des élèves.\"]\\n      Fait[\"J'utilise Google Sheets pour suivre les progrès, mais ce n'est pas suffisant.\"]\\n    Besoin\\n      Besoin[\"Une vue claire de la progression de chaque élève.\"]\\n      Besoin[\"Visibilité sur les élèves en difficulté ou à la traîne.\"]\\n      Besoin[\"Des outils pour suivre les raisons des retards dans les tutoriels ou projets.\"]",
  "langage": "mermaid",
  "tags": ["mindmap", "formateur", "élèves", "problèmes", "tutoriels", "projets"],
  "description": "Diagramme de cartographie mentale pour un formateur identifiant les problèmes et les besoins liés à la progression des élèves.",
  "source": "https://example.com"
}
,{
    "prompt": "mindmap",
    "code": "mindmap\n0\n1\nA\nB\nC\n2\nD\nE\nF\n3\nG\nH\nI\n4\nJ\nK\nL\n5\nM\nN\nO\n6\nP\nK\nR\n7\nS\nT\nU\n8\nV\nW\nX\n9\nY\nZ",
    "langage": "mermaid",
    "tags": ["mindmap", "diagramme"],
    "description": "Diagramme de mind map avec 10 niveaux et lettres alphabétiques",
    "source": "https://mermaid-js.github.io/mermaid-live-revisions/#update=Z2l0LnNjaA%3D"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n>\n> __version__=`1.1`,showJumps=`true`\n---\n# MainActivity\n> borderColor=`#FFFF00`,fillColor=`#3700FF`\n...\n",
  "langage": "mermaid",
  "tags": ["mindmap", "nbmindmap", "android"],
  "description": "Diagramme de classement de l'application Android BRecipe, regroupant les différentes classes et fragments.",
  "source": "https://example.com/mindmap"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    ((\\u{1F4D6} Document))\n        ((\\u{1F4CE} Main Concept))\n            (\\u{1F4CE} Overview)\n                [\\u{0020} Key point 1]\n            (\\u{1F4CE} Details)\n            (\\u{1F4CE} Examples)\n        ((\\u{1F4CE} Key Ideas))\n        ((\\u{1F4CE} Important Points))",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "concept", "idées clés"],
  "description": "Un diagramme de mindmap qui présente un document avec des idées et des points importants.",
  "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\nroot((Responsable des apprenants))\n    Voit\n      Progrès des étudiants\n      Comptes-rendus\n      Statistiques d'apprentissage\n    Entend\n      Retours du responsable\n      Blocages rencontrés\n      Performances des étudiants\n    Dit\n      \"Cet étudiant a progressé\"\n      \"Il semble démotivé\"\n    Fait\n      Suit la progression\n      Communique avec le responsable\n      Donne un retour régulier",
  "langage": "Mermaid",
  "tags": ["Mindmap", "Gestion des apprenants", "Suivi de progression"],
  "description": "Diagramme de mindmap illustrant les actions et responsabilités d'un responsable des apprenants. Les responsabilités sont organisées en quatre catégories : Voit, Entend, Dit et Fait.",
  "source": ""
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Root\n\n## Algorithm\n\n### Sort\n\n#### Compare Based\n\n##### QuickSort\n##### MergeSort\n##### SelectionSort\n##### BubbleSort\n##### ShellSort\n\n#### Noncompare Based\n\n##### BucketSort\n##### CountingSort\n##### RadixSort\n\n### Search\n\n#### Linear\n\n##### Hash\n\n#### Tree\n\n##### BST\n\n###### AVL\n\n###### Splay\n\n##### BTree\n\n###### B+Tree\n\n###### N Tree\n\n###### RBTree\n\n## Data Structure\n\n> leftSide=`true`",
  "langage": "mermaid",
  "tags": ["mindmap", "algorithm", "sort", "search", "data structure"],
  "description": "Une carte mentale décrivant des algorithmes de tri et de recherche, ainsi que différents types de structures de données.",
  "source": "https://nbmindmap.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\nroot((Async Best Practices))\n    Task Management\n      Proper cancellation\n      Error handling\n      Resource cleanup\n    Performance\n      Connection pooling\n      Batching\n      Backpressure\n    Design\n      Proper abstraction\n      Error propagation\n      Testing strategy",
  "langage": "mermaid",
  "tags": ["async", "best practices", "task management", "performance", "design"],
  "description": [
    "Un diagramme de mindmap représentant les meilleures pratiques async.",
    "Cela couvre la gestion des tâches, la performance et le design."
  ],
  "source": "https://mermaid.js.org/"
}
,{
  "prompt": "Sequence diagram pour la génération d'un mindmap avec des participants",
  "code": "sequenceDiagram\n    participant M as Main\n    participant MM as MindMap\n    participant LE as LLMExploration\n    participant LS as LanguageSupport\n    participant OD as OntologyDatabase\n    M->>MM: render_map(concepts)\n    M->>LE: explore(concept)\n    LE-->>M: return exploration_data\n    M->>LE: generate_summary(concept)\n    LE-->>M: return summary\n    M->>LE: generate_flashcards(concept)\n    LE-->>M: return flashcards\n    M->>LS: translate(text, target_lang)\n    LS-->>M: return translated_text\n    M->>LS: detect_language(text)\n    LS-->>M: return language\n    M->>OD: save_ontology(concepts)\n    OD-->>M: None\n    M->>OD: load_ontology()\n    OD-->>M: return concepts",
  "langage": "mermaid",
  "tags": [
    "sequence_diagram",
    "mindmap",
    "LLMExploration",
    "LanguageSupport",
    "OntologyDatabase"
  ],
  "description": "Diagramme de séquence montrant l'interaction entre les participants pour la génération d'un mindmap. Les participants interagissent avec des concepts et une base de données ontologique.",
  "source": "https://mermaid-js.github.io/mermaid-live-re Revision"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((代环栈体系))\n    AI/Agent 模型栈\n      大语言初器.API 分指\n        OpenAI 环代\n          GPT-4\n          GPT-3.5-turbo\n          DALL-E\n          Whisper\n          TTS\n        Anthropic\n          Claude-3 Opus\n          Claude-3 Sonnet\n          Claude-3 Haiku\n          Claude-2\n        Google\n          Gemini Pro/Ultra\n          PaLM\n          Bard API\n        子台刷器\n          Llama2/3\n          Mistral\n          Qwen\n          ChatGLM\n          Baichuan\n        图像提环\n          Ollama\n          LiteLLM\n          vLLM\n          TensorRT-LLM\n          FastChat\n      Agent 子增器.工纂\n        模型增器台代\n          LangChain\n          LlamaIndex\n          AutoGPT\n          CrewAI\n        Agent 子架\n          Microsoft Semantic Kernel\n          Haystack\n          Rasa\n        通器为\n          n8n\n        du 事得\n          LangChain Vision\n          GPT-4V\n          Claude Vision\n      适海卡米刷.可求移南\n        适海图学器\n          Pinecone\n          Chroma\n          Weaviate\n          Qdrant\n          Milvus\n        入刷器\n          OpenAI Embeddings\n          Sentence-BERT\n          BGE\n          M3E\n        求角数称\n          RAG\n          Dense Retrieval\n          Hybrid Search\n          Re-ranking\n        王台布南\n          Neo4j\n          ArangoDB\n          Amazon Neptune\n      AI 其他邻环\n        图栈管理\n          MLflow\n          Weights & Biases\n          ClearML\n          DVC\n        待工笔给\n          TensorBoard\n          Neptune\n          Comet ML\n        图明加复\n          FastAPI\n          TorchServe\n          TensorFlow Serving\n          Triton\n        正讴诣\n          Prometheus + Grafana\n          DataDog\n          New Relic\n    台代语务\n      其宽语刷\n        Node.js\n        TypeScript\n        JavaScript\n        C#\n        WebAssemblyScript\n        ActionScript 3\n      李性语刷\n        C/C++\n        Java\n        Python\n        Golang\n        PHP\n        Shell\n    左通台页\n      颜色放盘\n        React\n        Vue\n        Angular\n      给增南\n        Redux\n        MobX\n      图栏\n        ECharts\n        TradingVueJs\n        TradingView\n      加缉子\n        Vite\n        WebPack\n        Pm2\n      Web3 架入\n        Web3.js\n    Web3D/VR/AR 森连\n      3D 提一米\n        Three.js\n        Babylon.js\n      台方模型\n        WebGL\n        WebGPU\n        WebXR\n      Unity 挂启\n        Unity WebGL\n    为单组岑深\n      填代房\n        React Native\n        Flutter\n        Cordova\n        Taro\n      UI 房合\n        Onsen UI\n        Ionic\n        Quasar\n        Framework7\n      机南\n        Electron\n        Harman AIR\n      其宽\n        Weex\n    语务和想\n      Web 本员\n        WebAssembly\n        WebGL/WebGPU\n        OffscreenCanvas\n      充台角指\n        Web Worker\n        Service Worker\n      用户权\n        PWA\n      系统手演\n        TCP/UDP/Socket\n        反宽提一环\n      机码化\n        LCP 森刷\n        FID 森刷\n        TTFB 森刷\n        FCP 森刷\n        TBT 森刷\n        TTI 森刷",
  "langage": "mindmap",
  "tags": [
    "AI",
    "Agent",
    "技能栈体系",
    "OpenAI",
    "GPT-4",
    "DALL-E",
    "Whisper",
    "TensorRT-LLM",
    "FastChat",
    "LangChain",
    "LlamaIndex",
    "AutoGPT",
    "CrewAI",
    "Microsoft Semantic Kernel",
    "Haystack",
    "Rasa",
    "n8n",
    "Pinecone",
    "Chroma",
    "Weaviate",
    "Qdrant",
    "Milvus",
    "OpenAI Embeddings",
    "Sentence-BERT",
    "BGE",
    "M3E",
    "RAG",
    "Dense Retrieval",
    "Hybrid Search",
    "Re-ranking",
    "Neo4j",
    "ArangoDB",
    "Amazon Neptune",
    "MLflow",
    "Weights & Biases",
    "ClearML",
    "DVC",
    "TensorBoard",
    "Neptune",
    "Comet ML",
    "FastAPI",
    "TorchServe",
    "TensorFlow Serving",
    "Triton",
    "Prometheus + Grafana",
    "DataDog",
    "New Relic",
    "Node.js",
    "TypeScript",
    "JavaScript",
    "C#",
    "WebAssemblyScript",
    "ActionScript 3",
    "C/C++",
    "Java",
    "Python",
    "Golang",
    "PHP",
    "Shell",
    "React",
    "Vue",
    "Angular",
    "Redux",
    "MobX",
    "ECharts",
    "TradingVueJs",
    "TradingView",
    "Vite",
    "WebPack",
    "Pm2",
    "Web3.js",
    "Three.js",
    "Babylon.js",
    "Unity WebGL",
    "WebGL",
    "WebGPU",
    "WebXR",
    "React Native",
    "Flutter",
    "Cordova",
    "Taro",
    "Onsen UI",
    "Ionic",
    "Quasar",
    "Framework7",
    "Electron",
    "Harman AIR",
    "Weex",
    "WebAssembly",
    "OffscreenCanvas",
    "PWA",
    "TCP/UDP/Socket",
    "专利传输框架"
  ],
  "description": "Ce diagramme décrit les technologies et frameworks utilisés dans le développement de systèmes intelligents et d'applications web.",
  "source": "https://example.com/mindmap"
}

,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# \n> borderColor=`#3949AB`,fillColor=`#3949AB`,textColor=`#FFFFFF`",
  "langage": "mermaid",
  "tags": ["mindmap", "nb mindmap plugin"],
  "description": "Diagramme de mind map avec paramètres de configuration",
  "source": "Mind Map generated by NB MindMap plugin"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`,showJumps=`true`\n---\n# mutual exclusion\n## mutual exclusion\n### critical section\n#### block of code that can be executed by only one thread at a time\n### At most one thread holds the lock at any time\n## Freedom from deadlock\n### If a thread is attempting to acquire or release the lock then eventually some thread acquires or releases the lock\n### If a thread calls lock\\(\\) and never returns, then other threads must complete an infinite number of critical sections\n## Freedom from starvation\n### Every thread that attempts to acquire or release the lock eventually succeeds\n## livelock\n### in which two or more threads actively prevent each other from making progress by taking steps that subvert steps taken by other threads\n## bounded wait-free\n### A section of code that is guaranteed to complete in a bounded number of steps",
  "langage": "mermaid",
  "tags": ["concurrentie", "synchronisation", "deadlock", "starvation", "livelock"],
  "description": "Ce mind map décrit les principes de la synchronisation en programmation concurrente, notamment la mutual exclusion, la liberté du deadlock et de la starvation ainsi que le livelock",
  "source": "https://fr.wikipedia.org/wiki/Synchronisation_(informatique)"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((8구단 드래프트 1순위))\n    (몸 만들기)\n      몸관리\n      영양제 먹기\n      FSQ 90kg\n      RSQ 130kg\n      식사 저녁6숟갈 아침3숟갈\n      가동역\n      스테미너\n      유연성\n    (제구)\n      인스텝 개선\n      몸통 강화\n      축 흔들지 않기\n      불안정 없애기\n      멘탈을 컨트롤\n      몸을 열지 않기\n      하체 강화\n      릴리즈 포인트 안정\n    (구위)\n      각도를 만든다\n      위에서부터 공을 던진다\n      손목 강화\n      하반식 주도\n      가동력\n      회전수 증가\n      볼을 앞에서 릴리즈\n      힘 모으기\n    (스피드 160km/h)\n      축을 돌리기\n      하체 강화\n      체중 증가\n      어깨주변 강화\n      피칭 늘리기\n      라이너 캐치볼\n      가동력\n      몸통 강화\n    (변화구)\n      카운트볼 늘리기\n      포크볼 완성\n      슬라이더 구위\n      좌타자 결정구\n      거리를 상상하기\n      스트라이크 볼을 던질 때 제구\n      직구와 같은 폼으로 던지기\n      늦게 낙차가 있는 커브\n    (운)\n      인사하기\n      쓰레기 줍기\n      부실 청소\n      심판을 대하는 태도\n      책읽기\n      응원받는 사람\n      긍정적 사고\n      물건을 소중히 쓰자\n    (인간성)\n      감성\n      사랑받는 사람\n      계획성\n      감사\n      지속력\n      신뢰받는 사람\n      예의\n      배려\n    (멘탈)\n      뚜렷한 목표·목적\n      일희일비하지 않기\n      머리는 차갑게 심장은 뜨겁게\n      분위기에 휩쓸리지 않기\n      동료를 배려하는 마음\n      승리에 대한 집념\n      마음의 파도를 안 만들기\n      핀치에 강하게",
  "langage": "mindmap",
  "tags": ["mindmap", "jeu de baseball", "entraînement"],
  "description": "Ce diagramme représente un mindmap sur le jeu de baseball, couvrant des sujets tels que l'entraînement physique et mental, la stratégie de jeu et la conduite sur le terrain.",
  "source": "non spécifié"
}
,{
  "prompt": "%% @config(../mindmap-config.json)\nmindmap\nFormateur",
  "code": "%% @config(../mindmap-config.json)\nmindmap\nFormateur\n       ce qu'il fait\n        Crée et gère des projets de formation en définissant les objectifs, les activités, les ressources et les évaluations.\n        Surveille et ajuste les projets en fonction des besoins et des retours des étudiants.\n      ce qu'il dit\n        La création du brief peut être un défi car il faut équilibrer les objectifs pédagogiques avec les ressources disponibles et le temps imparti .\n        Nous devons constamment rappeler aux apprenants quelles compétences sont visées dans chaque projet, car ils ont du mal à les retenir.",
  "langage": "mermaid",
  "tags": ["formation", "projets", "brief", "objectifs", "ressources", "compétences"],
  "description": "Diagramme de mindmap décrivant le rôle d'un formateur en matière de projet de formation, y compris la création du brief et la surveillance des projets.",
  "source": ""
}
,{
  "prompt": "mindmap\n  root((' Water & Sanitation'))",
  "code": "mindmap\n  root((' Water & Sanitation'))\n    Dependencies\n      integrates with\n        Planetary Health\n      depends on\n        Kinship Garden\n    Framework Info\n      Tier 2\n      Ecological Domain\n      Global Scope\n      High Priority\n      Status: Review",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "Water & Sanitation",
    "Dependencies",
    "Planetary Health",
    "Kinship Garden"
  ],
  "description": "Diagramme de mindmap pour Water et Sanitation. Affiche les dépendances et les informations sur le framework.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/#edit=fcb6e2b3-1f5d-4c0a-ba14-f8ef1af6bbec"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root(\"\\ud83d\\udc04 DRR&R\")\n    Dependencies\n      oversees\n        \\ud83d\\uddf1 PHC\n      integrates with\n        \\ud83d\\ude0b Planetary Health\n        \\ud83d\\uded9 Urban Development\n        \\u270d Rural Development\n      informs\n        \\ud80c Eco Intel\n      funds\n        \\u20bf AUBI\n      implements\n        \\u1f46 Work in Liberation\n      collaborates with\n        \\udc69 Migration\n    Enables & Affects\n      integrates with\n        \\u1f9d0 Mental Health\n        \\u1f9d0 Mental Health\n      collaborates with\n        \\udc69 Migration\n      informs\n        \\ud83d\\uded9 Urban Development\n    Framework Info\n      \\u2600 Tier 2\n      \u20e3 Ecological Domain\n      \\ud83c\\uddfa Global Scope\n      \\u26a1 High Priority\n      \\u24c8 Status: Review",
  "langage": "mermaid",
  "tags": ["mindmap", "dependencies", "integration", "collaboration", "funding", "implementation"],
  "description": "Un diagramme de mindmap représentant les relations entre différents éléments tels que le DRR&R, la santé mentale, la migration et l'urbanisation.",
  "source": ""
}
,{
  "prompt": "mindmap",
  "code": "mindmap\\n  root(('\\u270A Supply Chains'))\\n    Dependencies\\n      integrates with\\n        \\u267B Phoenix Protocol\\n    Enables & Affects\\n      implements\\n        \\u1F30D Gaian Trade\\n    Framework Info\\n      \\u1F4BE Tier 1\\n      \\u1F567 Economic Domain\\n      \\u1F30D Global Scope\\n      \\u26A1 High Priority\\n      \\u1F4CE Status: Ready",
  "langage": "mermaid",
  "tags": ["mindmap", "supply chain", "dependencies", "integration", "protocol"],
  "description": "Diagramme de mind map représentant une chaîne d'approvisionnement avec ses dépendances et ses effets.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n# Root topic\n## Flyaway studio",
  "langage": "mermaid",
  "tags": ["mindmap", "mermaid"],
  "description": "Un diagramme de mind map généré par le plugin NB MindMap, avec un root topic et une sous-catégorie.",
  "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((💸 IDLP))\n    Dependencies\n      informs\n        🐷 Cultural Heritage\n    Enables & Affects\n      informs\n        🗢 WDIP\n      establishes\n        ⚙ CLP\n      enables\n        📨 Digital Commons\n    Framework Info\n      📀 Tier 4\n      📖 Governance Domain\n      🌆 Global Scope\n      ⚣ Medium Priority\n      🔴 Status: Review",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "diagramme",
    "IDLP",
    "Cultural Heritage",
    "WDIP",
    "CLP",
    "Digital Commons",
    "Tier 4",
    "Governance Domain",
    "Global Scope"
  ],
  "description": "Diagramme de mindmap illustrant les dépendances et le cadre d'un projet, avec un focus sur l'impact culturel et la gouvernance",
  "source": "https://example.com"
}

,{
  "prompt": "Créer un diagramme mindmap représentant les principes de communication efficace",
  "code": "mindmap\n  root(\\u2701\\u1f4ac Giao ti\\u00e1p + K\\u00ea t no\\u00ec)",
  "langage": "mermaid",
  "tags": ["communication", "interactions", "cultural exchange", "safety"],
  "description": "Ce diagramme mindmap représente les principes clés de la communication efficace, notamment l'appartenance, le dialogue et le respect.",
  "source": "https://example.com"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# Root topic\n\n## 根据Shader自动创建VkVertexInputAttributeDescription\n\n### 同样的顶点可能有不同的Shader<br/>有的Shader有用到一些属性，有些没用到<br/>那顶点数据要怎么共享？\n\n### 使用不同的VulkanVertex结构?",
  "langage": "mermaid",
  "tags": ["MindMap", "Vulkan", "VertexInputAttributeDescription", "Shader"],
  "description": "Diagramme de mindmap sur la création automatique de VkVertexInputAttributeDescription en fonction du shader, avec des questions sur la partagabilité des données de vertex.",
  "source": "https://example.com"
}
,{
  "prompt": "The current [gschichtefritz.ch](https://www.gschichtefritz.ch) code is written in Python, utilizing FastAPI and Pydantic. It went live in January 2024. Functionality and complexity have been minimized.",
  "code": "```{mermaid}\nmindmap\n  root((GF current))\n    Shop\n      Login\n      QR Bill\n        Delivery: PDF\n        Processing: Activate order\n      MP3 Download\n    Website\n    Email\n      Shop related Emails\n    App Backend\n      Onboarding\n      Delivery\n```",
  "langage": "mermaid",
  "tags": ["mindmap", "mermaid", "python", "fastapi", "pydantic"],
  "description": "Diagramme de flux pour le site web gschichtefritz.ch, montrant les différentes étapes du processus d'achat et de livraison.",
  "source": "https://www.gschichtefritz.ch"
}
,{
  "prompt": "Mindmap sur les technologies et événements Python en 2024",
  "code": "---\nconfig:\n  theme: forest\n---\nmindmap\n  root((**蟒周刊 2024 技术主题及社区事件**))\n    ...\n",
  "langage": "mermaid",
  "tags": [
    "Python",
    "Django",
    "Flask",
    "FastAPI",
    "HTMX",
    "WebAssembly",
    "WASM",
    "Tailwind CSS",
    "InertiaJS",
    "PyTorch",
    "CUDA",
    "uv",
    "pip-tools",
    "poetry",
    "pytest",
    "Jupyter Notebook",
    "Emacs",
    "CPython",
    "Docker",
    "Kubernetes",
    "AWS",
    "Azure"
  ],
  "description": "Diagramme mindmap sur les technologies et événements Python en 2024, couvrant les langages, les frameworks, les outils et les événements de la communauté.",
  "source": "https://example.com/mindmap-python-2024"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "mindmap\n  root((Field))\n    Variables\n      StringBuilder name\n      StringBuilder value\n      File file\n      String type\n        NOTE I = integer, D = decimal, S = String, B = boolean\n    Methods\n      serialize()\n      deserialize()\n      write()\n      getters/setters",
  "langage": "mermaid",
  "tags": ["mindmap", "plugin", "nbmindmap", "variables", "methods"],
  "description": "Diagramme de mindmap représentant les champs et méthodes d'un objet Field.",
  "source": "https://example.com/nbmindmap-plugin"
}

,{
  "prompt": "mindmap",
  "code": "%% @config(../mindmap-config.json)\nmindmap\n    Directeur_pkg_Absences\n        Ce qu'il fait\n            Utilise Excel pour maintenir une gestion organisée et cohérente des absences.\n        Ce qu'il dit\n            Il veut suivre les absences par tous les établissements.",
  "langage": "mermaid",
  "tags": ["mindmap", "Mermaid", "diagramme"],
  "description": "Diagramme de mind map représentant les tâches et les objectifs du Directeur_pkg_Absences.",
  "source": "https://example.com/mindmap-config.json"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true'\n---\n# 工作\n## 周一\n> leftSide=`true''\n...\n",
  "langage": "mermaid",
  "tags": ["mindmap", "nb-mindmap-plugin", "数据分析", "特征工程", "推荐系统"],
  "description": "Ce diagramme Mind Map représente un planning de travail avec des tâches et des étapes à suivre pour la semaine.",
  "source": "https://example.com"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n...\n> leftSide=`true`",
  "langage": "mermaid",
  "tags": [
    "scala",
    "mindmap",
    "plugin",
    "nb"
  ],
  "description": "Diagramme de mindmap Scala, avec des sections sur les langages utilisés, les fonctions, les collections et des éléments avancés",
  "source": "https://example.com/mindmap-mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root(\"\\u2752 Aethelred Accord\")\n    Dependencies\n      guides\n        \\u1f469 TGIF\n    Enables & Affects\n      coordinates with\n        \\u2695 Global Health\n        \\u4269 Biodiversity\n      informs\n        \\u1f30d Gaian Trade\n    Framework Info\n      \\u279c Tier 2\n      \\u2705 Technology Domain\n      \\u261d Global Scope\n      \\u26a3 High Priority\n      \\u1f4d6 Status: Ready",
  "langage": "mermaid",
  "tags": ["mindmap", "dependencies", "enables & affects", "coordinates with", "informs", "framework info"],
  "description": "Diagramme de mind map représentant des relations entre différents éléments, notamment les accords et les technologies.",
  "source": "https://mermaid-js.github.io/mermaid/#/edit?SDnVWztdEp2DpP9T0Jt4cS5UQOjRy1Kg3xGy8I8qA3M7XrBmGy1KwUdN"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n>\n__version__=1.1,showJumps=true...\n...\n...\n...",
  "langage": "mermaid",
  "tags": ["mindmap", "nb mindmap plugin", "primitive types", "complex types", "byte order"],
  "description": "Ce diagramme représente différents types de données et leur représentation dans un format texte.",
  "source": "https://example.com"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n# event streams\n## unbounded, incrementally processed\n...\n> leftSide=`true`",
  "langage": "mermaid",
  "tags": [
    "event streaming",
    "messaging systems",
    "message brokers",
    "data durability",
    "fault tolerance",
    "concurrency"
  ],
  "description": "Cette mind map explore les concepts liés aux streams de données, notamment les mécanismes de notification, les systèmes de messagerie et la durabilité des données.",
  "source": "NB MindMap plugin"
}
,{
  "prompt": "%% @config(../mindmap-config.json)\nmindmap\nApprenant\n\n      Ce qu'il fait\n        Consulte ses compétences sur la table Excel.\n\n      Ce qu'il dit\n        Il y a une difficulté pour suivre mon avancement sur les projets par rapport à mes collègues en classe.\n        Il est difficile de consulter mes compétences validées de manière claire et organisée.\n        J'aimerais avoir un outil qui me permette de voir facilement mes progrès et mes compétences validées.",
  "code": "%% @config(../mindmap-config.json)\nmindmap\nApprenant\n\n      Ce qu'il fait\n        Consulte ses compétences sur la table Excel.\n\n      Ce qu'il dit\n        Il y a une difficulté pour suivre mon avancement sur les projets par rapport à mes collègues en classe.\n        Il est difficile de consulter mes compétences validées de manière claire et organisée.\n        J'aimerais avoir un outil qui me permette de voir facilement mes progrès et mes compétences validées.",
  "langage": "markdown",
  "tags": ["mindmap", "apprenant", "compétences", "tableau Excel"],
  "description": "Diagramme mindmap représentant les actions et les pensées d'un apprenant concernant ses compétences.",
  "source": "%% @config(../mindmap-config.json)"
}
,{
  "prompt": "% @config(../mindmap-config.json)",
  "code": "%%\n@config(../mindmap-config.json)\nmindmap\n    Directeur générale\n        Ce qu'il fait\n            J'utilise Google Sheets pour suivre les données de congé.\n            J'utilise Microsoft Word pour remplir et imprimer les decision des Congés.\n        Ce qu'il dit\n            calculer jour reaston.\n            J'imprime décision des Congés.",
  "langage": "mermaid",
  "tags": ["mindmap", "Google Sheets", "Microsoft Word", "congé"],
  "description": "Diagramme de mindmap représentant les tâches et responsabilités d'un Directeur Général",
  "source": "% @config(../mindmap-config.json)"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n\n# Root topic\n\n## 检测按钮和鼠标的按下和抬起事件\n\n### glfw接口只能判断当前帧的状态\n\n#### 只有两种状态 \n\n##### GLFW_PRESS\n\n##### GLFW_RELEASE\n\n### 比如GLFW_RELEASE 如果这一帧没按下，<br/>那就会一直是Release， 没法判断是不是这一帧才抬起\n\n### 要记录上一帧的状态，对比才知道是不是当前帧按下或者抬起",
  "langage": "mermaid",
  "tags": ["MindMap", "glfw", "事件", "状态"],
  "description": "Diagramme de Mind Map décrivant la gestion des événements de clic et de mouvement de la souris à l'aide de l'interface GLFW.",
  "source": "Mind Map generated by NB MindMap plugin"
}
, {
    "prompt": "mindmap",
    "code": "mindmap\n  root((✍💻 Đọc kĩ học + Kiến thức))\n    subgoal1((⌚⚪ Đọc người Ngữ Nữ 🇮🇹))\n      subgoal1a((📝 Đọc tác vụ ✍))\n      subgoal1b((⌚ 🔞 Lấy giao tiếp 🛕))\n      subgoal1c((💸 Cài thiện kĩ năng ngồi 🕯))\n    subgoal2((☣❗ Kiến thức Chuyên Môn ዓ))\n      subgoal2a((➕ Phân tbi dữ liệu ➛))\n      subgoal2b((↮ Nghi đi nổ Chuyên sç 🕎))\n      subgoal2c((📖 Tài liệu học tập miễn phí))\n    subgoal3((⚙ Phát Triển Kỹ Năng Mô ★))\n      subgoal3a((⌚ Kỹ năng thuyết trình 🔁))\n      subgoal3b((✅ Làm việc công 👍))\n      subgoal3c((☉ Quản lý thời gian 🕧))",
    "langage": "mermaid",
    "tags": ["mindmap", "diagramme", "organisateur", "hierarchie"],
    "description": "Diagramme mindmap présentant les objectifs d'apprentissage et de développement personnel.",
    "source": "https://example.com/mindmap"
  },
  {
    "prompt": "Mind Map generated by NB MindMap plugin",
    "code": "mindmap\n  root((Ubinas 2019))\n    Satellites\n      MODIS\n      CALIPSO\n    Data Types\n      Volcanic Ash\n      Gas Emissions\n      Thermal Imagery\n    Monitoring\n      Remote Sensing\n      Ground Observations\n    Analysis\n      Activity Trends\n      Risk Assessment\n      Alert Generation",
    "langage": "mermaid",
    "tags": [
      "mindmap",
      "ubinas",
      "satellite",
      "modis",
      "calipso",
      "volcanic-activity"
    ],
    "description": "Diagramme de mind map présentant les données sur l'éruption du volcan Ubinas en 2019, y compris les satellites utilisés pour surveiller la situation.",
    "source": "https://mermaid-js.github.io/mermaid-live-revision#/"
  }
,{
  "prompt": "mindmap",
  "code": "mindmap\\n    root[\"Network Best Practices\"]\\n        Security\\n            Use custom networks\\n            Limit exposed ports\\n            Network isolation\\n        Performance\\n            Use host when needed\\n            Monitor bandwidth\\n            Optimize DNS\\n        Management\\n            Clear naming\\n            Documentation\\n            Regular cleanup",
  "langage": "mermaid",
  "tags": ["network", "security", "performance", "management"],
  "description": "Un diagramme de cartographie des meilleures pratiques réseau. Il couvre les aspects de la sécurité, du rendement et de la gestion.",
  "source": "[Code Mermaid]"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((❤️ Planetary Health))\n    Dependencies\n      oversees\n        🏠 PHC\n      funds\n        💸 Leaves\n        💸 Global Commons Fund\n      enforces\n        🏭 Ecological Justice Tribunals\n      collaborates with\n        🏫 Urban Development\n    Enables & Affects\n      integrates with\n        🌼 Kinship Garden\n        🌢 Water & Sanitation\n        🦝 Biodiversity\n        🌊 Climate & Energy\n    Framework Info\n      ☐ Tier 2\n      ✍ Ecological Domain\n      🌎 Global Scope\n      🌊 High Priority\n      📋 Status: Ready",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "planetary_health",
    "écologie",
    "justice_écologique"
  ],
  "description": "Un diagramme de mindmap représentant les dépendances, les capacités et l'information d'un framework sur la santé planétaire.",
  "source": "https://example.com/source"
}

,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# VulkanShader\n\n## VkDescriptorSetLayout\n\n### 用来描述Shader<br/>能访问的资源的布局\n\n## 创建流程\n> leftSide=`true`",
  "langage": "mermaid",
  "tags": ["Vulkan", "Shader", "VkDescriptorSetLayout", "MindMap"],
  "description": "Le diagramme décrit la création d'un VkDescriptorSetLayout pour des shaders Vulkan. Il expose les étapes de création du layout et l'utilisation des modules de shader.",
  "source": "https://example.com/mindmap"
}
,{
  "prompt": "Mindmap",
  "code": "mindmap\nroot((Skill Stack System))\n  ...\n  ...",
  "langage": "mermaid",
  "tags": ["skill stack", "system", "AI", "agent technology", "large language models", "API integration", "OpenAI Series", "Anthropic", "Google", "model deployment", "vector databases", "retrieval technologies"],
  "description": "Une carte mentale décrivant un système de pile de compétences dans le domaine du traitement de l'intelligence artificielle.",
  "source": "https://example.com/mindmap"
}
,{
    "prompt": "%% @config(../../../modélisation/mindmap-config.json)\nmindmap\nApprenant",
    "code": "%% @config(../../../modélisation/mindmap-config.json)\nmindmap\nApprenant\n       ce qu'il fait\n        Travaille sur le projet régulièrement\n\n        Soumet le livrable pour validation\n\n        Cherche des ressources supplémentaires pour améliorer le projet\n\n      ce qu'il dit\n       J'ai besoin  Change l'état des projets en progression\n\n       J'ai besoin   Consulte l'état de son projet",
    "langage": "mermaid",
    "tags": ["mindmap", "apprenant", "projets"],
    "description": "Diagramme de mind map représentant les actions et pensées d'un apprenant sur un projet.",
    "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    Intro\n        Health Wellness\n            Diet\n            Exercise\n        Philosophy\n            Personal\n                    My Thoughts\n        Technology\n            Rf\n                    RF\n            Ai\n                    Artificial Intelligence\n        Learning\n            Books\n            Lessons Learned\n        Explorations\n            Shopping\n            Dining Out\n            Destinations\n        Tools\n            Web Tools\n            Github Resources\n            Multimedia\n        Entertainment\n            Img\n            Music\n            Films\n        Socialisation\n            Social Media\n        Finance\n            Banking\n                Icici\n                        Miscellaneous Charges\n                        ICICI Bank\n            Investment\n                Cryptocurrency\n                Equity\n                    Stocks\n                            'Stocks 101 : A Guide to Stock Market Jargon'\n                Debt\n                Misc\n                        P2P Lending\n                        Miscellaneous\n                        Foreclosure Properties\n            Credit Card\n                Resources\n                Axis Bank\n                    Flipkart Axis Bank Credit Card\n                            Miscellaneous Update\n        Startups\n            Startups 101\n            Startups Graveyard\n        Misc\n            Operating Systems\n                Linux\n                        Linux/Unix \n                Mac Os\n                        Wiki How for MacOS\n                        Mac OS\n                Windows",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "health",
    "wellness",
    "philosophy",
    "technology",
    "rf",
    "ai",
    "artificial intelligence",
    "learning",
    "books",
    "lessons learned",
    "explorations",
    "shopping",
    "dining out",
    "destinations",
    "tools",
    "web tools",
    "github resources",
    "multimedia",
    "entertainment",
    "img",
    "music",
    "films",
    "socialisation",
    "social media",
    "finance",
    "banking",
    "icici",
    "investment",
    "cryptocurrency",
    "equity",
    "stocks",
    "credit card",
    "axis bank",
    "startups",
    "operating systems"
  ],
  "description": "Le diagramme est une carte mentale organisée en catégories comme la santé, la philosophie, les technologies et le monde des affaires.",
  "source": "le code source du diagramme ci-dessus"
}
,{
  "prompt": "mindmap Kinésithérapeute",
  "code": "mindmap\nKinésithérapeute\n\n      ce qu'il fait\n       Saisie les informations de handicap Gestion des rendez-vous, Informer le service social\n\n      ce qu'il dit\n            Obtention de la liste des bénéficiaires du pôle médical, gestion de la liste d'attente incluant la gestion des rendez-vous et l'information au service social.",
  "langage": "mermaid",
  "tags": ["kinésithérapie", "santé", "gestion de patient"],
  "description": "Diagramme mindmap représentant les tâches d'un kinésithérapeute, notamment la saisie d'informations sur les handicapés et la gestion des rendez-vous.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n...\n> collapsed=`true`",
  "langage": "mermaid",
  "tags": [
    "Vulkan",
    "Texture",
    "ImageObject",
    "VkImage",
    "Layout",
    "Transfer",
    "Sampler",
    "Descriptor"
  ],
  "description": "Cette mind map décrit les étapes pour créer et gérer une texture dans un environnement Vulkan. Elle couvre la création d'un ImageObject, la définition de sa layout, la prise en charge des transferts et l'utilisation de Samplers et Descriptors.",
  "source": "https://stackoverflow.com/questions/66401081/vulkan-swapchain-format-unorm-vs-srgb"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# usecase\n> align=`center`,fillColor=`#FFFFFF`,textColor=`#000000`,topicLinkUID=`17BABD61B1BA`\n\n## repository\\interface\n> fillColor=`#00FF00`\n\n- FILE\n<pre>internal/repository/repository.go</pre>\n\n### repository\\ORM \\-\\> database\n\n## usecase\\interface\n> fillColor=`#00FF00`,leftSide=`true`\n\n- FILE\n<pre>internal/usecase/usecase.go</pre>\n\n### handlers\n\n#### API\\\\server",
  "langage": "mermaid",
  "tags": ["mindmap", "plugin", "NB MindMap"],
  "description": "Diagramme de mind map avec des éléments de code pour un projet, représentant une interface entre repository et usecase.",
  "source": "https://example.com/source" 
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n    root[\"Volume Best Practices\"]\n        Planning\n            Identify data needs\n            Choose volume type\n            Plan backups\n        Implementation\n            Use named volumes\n            Clear naming\n            Regular backups\n        Management\n            Monitor usage\n            Clean unused\n            Document purpose",
  "langage": "mermaid",
  "tags": ["best practices", "data management", "volume planning"],
  "description": "Diagramme mindmap décrivant les meilleures pratiques pour la gestion des volumes de données.",
  "source": "code fourni"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    laptop\n    ::icon(fa fa-laptop)\n        wifi(Wifi)\n        ::icon(fa fa-wifi)\n        battery(Battery)\n        ::icon(fa fa-battery)\n        hard_drive(Hard Drive)\n        ::icon(fa fa-hard-drive)\n        memory(Memory)\n        ::icon(fa fa-memory)\n        microchip(Microchip)\n        ::icon(fa fa-microchip)",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "laptop", "wifi", "battery", "hard_drive", "memory", "microchip"],
  "description": "Un diagramme de carte mentale représentant un ordinateur avec ses composants.",
  "source": "https://mermaid-js.github.io/mermaid-live-re Revision/0.4.1/"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n\n# shared object\n\n## register\n\n### safe\n#### single writer \\(SRSW or MRSW\\)\n#### read\\(\\) call not overlaped write\\(\\) call returns most recent write\\(\\) call\n#### read\\(\\) call overlaped write\\(\\) call may return any value within allowed range \\(may flick\\)\n### regular\n#### as safe above but not flicking\n### atomic\n#### as regular",
  "langage": "mermaid",
  "tags": ["mindmap", "concurrent", "synchronization"],
  "description": "Diagramme de Mind Map représentant différentes stratégies de synchronisation pour accéder à un registre partagé.",
  "source": "https://example.com/source"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "> __version__=`1.1`,showJumps=`true`\n---\n# joinSchoolRequest\n...\n> leftSide=`true`",
  "langage": "mermaid",
  "tags": ["mindmap", "joinSchoolRequest", "teacher"],
  "description": "Diagramme représentant les étapes de traitement d'une demande d'adhésion à une école. Les résultats possibles sont GRANTED, DENIED, PENDING ou EXPIRED.",
  "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Frameworks))\n        Testing\n            Selenium\n            PyTest\n        Deployment\n            Fabric\n            Capistrano\n        Configuration\n            Ansible\n            Puppet",
  "langage": "mermaid",
  "tags": ["mindmap", "frameworks", "testing", "deployment", "configuration"],
  "description": "Diagramme de mind map présentant différentes approches de frameworks pour le développement d'applications.",
  "source": "Code Mermaid fourni"
}
,{
  "prompt": "Mind map",
  "code": "mindmap\n    root((ML Ops))\n        Training\n            Data\n            Models\n        Deployment\n            Testing\n            Production\n        Monitoring\n            Performance\n            Drift",
  "langage": "mermaid",
  "tags": ["mindmap", "ML Ops", "training", "deployment", "monitoring"],
  "description": "Diagramme de mind map décrivant le processus d'implémentation de ML Ops, avec des sections sur la formation, le déploiement et le suivi.",
  "source": null
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root(('\\ud83d\\udc69\\ufe0f Urban Development'))\n    Dependencies\n      informs\n        \\u1F30C DRR&R\n        \\u1F3E0 Education\n        \\u2695 Global Health\n      guides\n        \\u1F50D Nested Economies\n      implements\n        \\u1F468\\u200D\\u1F469\\u200D\\u1F4BB Work in Liberation\n      funds\n        \\u1F4B2 Global Commons Fund\n    Enables & Affects\n      coordinates with\n        \\u1F68D Rural Development\n        \\u2708 Migration\n      collaborates with\n        \\u2764 Planetary Health\n      integrates with\n        \\u1F30C DRR&R\n        \\ud83c\\uddfa Cultural Heritage\n      implements\n        ♿ Disability Justice\n        \\ud83c\\uddf0 BAZs\n    Framework Info\n      \\u1F4CF Tier 3\n      \\u2708 Governance Domain\n      \\u1F30E Regional Scope\n      ⚡ Medium Priority\n      \\u1F4C5 Status: Coming-Soon",
  "langage": "mermaid",
  "tags": ["urban", "development", "dependencies", "enables", "affects", "framework", "info"],
  "description": "Mindmap du développement urbain avec ses dépendances, capacités d'incitation et informations de cadre.",
  "source": "https://mermaid-js.github.io/mermaid-live-revision/"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\nroot(modo)\n::icon(fa fa-folder)\nsample\n::icon(fa fa-folder)\n\tsample1\n::icon(fa fa-folder)\n\t\tmetadata\n\t::icon(fa fa-diagram-project)\nasseyt\n::icon(fa fa-folder)\n\tassay A\n\t::icon(fa fa-folder)\n\t\tmetadata\n\t::icon(fa fa-diagram-project)\n\tarray A\n\t::icon(fa fa-database)\n\tassay B\n\t::icon(fa fa-folder)\n\t\tmetadata\n\t::icon(fa fa-diagram-project)\n\tarray B\n\t::icon(fa fa-database)\ndata\n::icon(fa fa-folder)\n\tdatad1\n\t\tmetadata\n\t::icon(fa fa-diagram-project)\n\tdata2\n\t\tmetadata\n\t::icon(fa fa-diagram-project)\nreference\n::icon(fa fa-folder)\nsample1_genome.cram\n::icon(fa fa-file)",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "uml"],
  "description": "Diagramme mindmap représentant les données et les métadonnées d'un projet.",
  "source": "https://example.com/mermaid-code"
}
,{
  "prompt": "Mindmap",
  "code": "mindmap\n    root((IDatabaseCreator))\n        IRelationalDatabaseCreator\n            RelationalDatabaseCreator\n                SqliteDatabaseCreator\n                SqlServerDatabaseCreator",
  "langage": "mermaid",
  "tags": ["UML", "Merveilles", "modélisation"],
  "description": "Diagramme de mindmap décrivant la hiérarchie d'une classe de création de base de données relationnelles.",
  "source": ""
}
,{
  "prompt": "mindmap\n  root((Tools))\n    Cargo\n      build\n      test\n      doc\n    Rustfmt\n      Code formatting\n      Style enforcement\n    Clippy\n      Linting\n      Best practices\n    RLS/rust-analyzer\n      IDE support\n      Code completion",
  "code": "mindmap\n  root((Tools))\n    Cargo\n      build\n      test\n      doc\n    Rustfmt\n      Code formatting\n      Style enforcement\n    Clippy\n      Linting\n      Best practices\n    RLS/rust-analyzer\n      IDE support\n      Code completion",
  "langage": "mermaid",
  "tags": ["Tools", "Cargo", "Rustfmt", "Clippy", "RLS/RustAnalyzer"],
  "description": "Diagramme de carte mentale décrivant les outils et fonctionnalités liés aux langages Rust.",
  "source": "https://github.com/mermaid-js/mermaid#mindmap"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Docker))\n        Images\n            Build\n            Store\n        Containers\n            Run\n            Manage\n        Networks\n            Connect\n            Secure",
  "langage": "mermaid",
  "tags": ["docker", "mindmap", "images", "containers", "networks"],
  "description": "Diagramme de mind map représentant les concepts liés à Docker, incluant les images, les conteneurs et les réseaux.",
  "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Git))\n        Branches\n            Feature\n            Release\n        Operations\n            Commit\n            Merge\n        Collaboration\n            Pull\n            Push",
  "langage": "mermaid",
  "tags": ["git", "branches", "operations", "collaboration"],
  "description": "Diagramme de mindmap représentant les principaux concepts du gestionnaire de version Git, notamment les branches, les opérations et la collaboration.",
  "source": "// Code Mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Syntax))\n    Keywords\n      fn\n      let\n      use\n    Identifiers\n      Variables\n      Functions\n      Types\n    Expressions\n      Operators\n      Function calls\n      Blocks\n    Statements\n      Declarations\n      Assignments\n      Control flow",
  "langage": "mermaid",
  "tags": ["mindmap", "syntax", "keywords", "identifiers", "expressions", "statements"],
  "description": "Diagramme de mind map représentant la syntaxe d'un langage programmable",
  "source": "https://mermaid-js.github.io/mermaid-live-reloader/index.html"
}
,{
  "prompt": "Mindmap",
  "code": "mindmap\n    root((Management))\n        Version Control\n            Git\n            SVN\n        Documentation\n            Inline\n            External\n        Testing\n            Unit\n            Integration",
  "langage": "mermaid",
  "tags": ["mindmap", "organisation", "gestion", "contrôle de version", "documentations", "tests"],
  "description": "Diagramme représentant une arborescence pour la gestion et le développement d'un projet.",
  "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Empowerment))\n    Authority\n      Decision Making\n      Tool Selection\n    Responsibility\n      Ownership\n      Accountability\n    Growth\n      Learning\n      Innovation",
  "langage": "mermaid",
  "tags": [
    "empowerment",
    "autorité",
    "responsabilité",
    "croissance",
    "apprentissage",
    "innovation"
  ],
  "description": "Diagramme de mind map représentant l'Empowerment en trois branches : Autorité, Responsabilité et Croissance.",
  "source": "https://example.com"
}

,{
  "prompt": "mindmap",
  "code": "mindmap\n    root[eBPF Tools]\n        bpftool\n            load\n            map\n            prog\n        bcc\n            tools\n            examples\n        iproute2\n            tc\n            xdp",
  "langage": "mermaid",
  "tags": ["eBPF", "bpftool", "bcc", "iproute2", "tc", "xdp"],
  "description": "Diagramme de mindmap représentant les outils eBPF et leurs sous-fonctions.",
  "source": "https://example.com/mermaid"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((Best Practices))\n    Struct Design\n      Meaningful names\n      Clear organization\n      Documentation\n    Enum Usage\n      State representation\n      Error handling\n      Pattern matching\n    Implementation\n      Method organization\n      Associated functions\n      Validation",
  "langage": "mermaid",
  "tags": [
    "design",
    "bestpractices",
    "struct",
    "enum",
    "implementation"
  ],
  "description": "Une représentation de mindmap décrivant les meilleures pratiques pour la conception, l'utilisation d'enum et l'implémentation.",
  "source": "https://mermaid-js.github.io/mermaid/#/edit?cdt=JzxOcFABAAxkYmFzZTY0TyA4NDBjMDE1IGEgRyBDb2w-"
}
,{
  "prompt": "Diagrame mindmap",
  "code": "mindmap\n    root((Scaling))\n        Horizontal\n            Instances\n            Load Balance\n        Vertical\n            Resources\n            Capacity\n        Auto\n            Demand\n            Schedule",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "scalabilité"],
  "description": "Un diagramme mindmap représentant les aspects de la scalabilité, avec des catégories horizontales et verticales.",
  "source": "https://example.com"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    root((Kubernetes))\n        Workloads\n            Pods\n            Deployments\n        Services\n            LoadBalancer\n            Ingress\n        Storage\n            Volumes\n            Claims",
  "langage": "mermaid",
  "tags": ["kubernetes", "mindmap", "workload", "service", "storage"],
  "description": "Diagramme de cartographie mentale pour Kubernetes avec les sections Workloads, Services et Storage.",
  "source": "https://mermaid-js.github.io/mermaid-live-re Revision"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`,showJumps=`true`\n---\n# DolphinScheduler\n## 工作流\n> leftSide=`true`\n---\n### 保存工作流\n#### DAG名词和描述\n#### 选择租户\n> leftSide=`true`\n---\n#### 超时告警\n> leftSide=`true`\n---\n##### 只能设置时间，无策略\n#### 设置全局变量\n> leftSide=`true`\n---\n### 定时\n#### 起止时间\n#### 定时\n#### 失败策略\n##### 继续\n##### 结束\n> leftSide=`true`\n---\n#### 通知策略\n##### 通知组\n##### 收件人\n##### 抄送人\n#### 流程优先级\n#### Worker组\n---\n### 启动工作流\n#### 失败策略\n#### 通知策略\n> leftSide=`true`\n---\n#### 流程优先级\n> leftSide=`true`\n---\n#### worker组\n> leftSide=`true`\n---\n#### 补数\n> leftSide=`true`\n---\n##### 执行方式\n###### 串行执行\n###### 并发执行\n> leftSide=`true`\n---\n##### 调度日期\n> leftSide=`true`\n---\n## 任务\n### 运行标志\n### 任务优先级\n### Worker分组\n### 失败重试次数\n### 失败重试间隔\n### 超时策略\n#### 超时告警\n#### 超时失败\n#### 超时市长\n### 资源\n### 自定义参数\n## 工作流实例\n> leftSide=`true`\n---\n### 编辑\n### 重跑\n> leftSide=`true`\n---\n### 恢复失败\n> leftSide=`true`\n---\n#### 从失败的节点开始执行\n### 停止\n> leftSide=`true`\n---\n### 暂停\n> leftSide=`true`\n---\n#### 等待正在执行的任务结束，暂停下一个要执行的任务\n### 恢复暂停\n> leftSide=`true`\n---\n#### 从暂停的节点开始运行\n### 删除\n> leftSide=`true`\n---\n### 甘特图\n> leftSide=`true`\n---\n## 任务实例\n### 查看日志\n## 安全中心（权限系统）\n> leftSide=`true`\n---\n### 租户管理\n### 用户管理\n> leftSide=`true`\n---\n### 告警组管理\n> leftSide=`true`\n---\n### 队列管理\n> leftSide=`true`\n---\n### Worker组管理\n> leftSide=`true`\n---\n### 令牌管理\n> leftSide=`true`\n---\n## 工作流节点类型\n### shell\n### subprocess\n#### 支持子工作流\n### procedure\n#### 存储过程\n### SQL\n#### 查询sql、非查询sql\n#### 邮件：附件、表格\n### Spark\n### Flink\n### MapReduce\n### Python\n### Dependence\n#### 支持复杂依赖\n### HTTP\n#### put/get/delete/post/head\n### datax\n### sqoop\n### Conditions\n#### 条件分支节点\n## 资源中心\n> leftSide=`true`\n---\n### 文件管理\n### UDF管理\n> leftSide=`true`\n---\n#### 资源管理\n#### 函数管理\n> leftSide=`true`",
  "langage": "mermaid",
  "tags": ["mindmap", "dolphinscheduler", "工作流", "任务", "安全中心"],
  "description": "Ce mind map décrit la structure et les fonctionnalités de DolphinScheduler, un outil de gestion des workflows.",
  "source": "https://example.com/dolphinscheduler"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n  root((SmartPackageBox))\n    MainController\n      Main Loop\n      AI Detection\n      Hatch Control\n    MainFunctions\n      Notification\n      Picture Handling\n      API Update\n    AI\n      Inference\n      Response Handling\n    MotorController\n      Hatch Properties\n      Move Hatch\n    Api\n      API Server\n      Endpoints\n    ImageServer\n      Static File Server\n    CameraFeed\n      Take Picture\n      Save Image\n    Ntfy\n      Send Notification\n    NonSpecific\n      Error Handling\n      Logging\n    FileModifyDLL\n      File Operations",
  "langage": "mermaid",
  "tags": [
    "mindmap",
    "diagramme",
    "SmartPackageBox",
    "MainController",
    "AI",
    "MotorController",
    "Api",
    "ImageServer",
    "CameraFeed",
    "Ntfy",
    "NonSpecific",
    "FileModifyDLL"
  ],
  "description": "Diagramme de mindmap représentant les différentes parties d'un système, notamment la logique principale, les fonctions spécifiques et les contrôleurs.",
  "source": "https://example.com (remplacez par l'URL originale)"
}
,{
  "prompt": "Mind Map generated by NB MindMap plugin",
  "code": "Mind Map generated by NB MindMap plugin\n> __version__=`1.1`\n---\n# Tree\n> borderColor=`#00FF00`,collapsed=`true`,fillColor=`#404040`\n...\n## N叉树\n> collapsed=`true`\n...\n### 增删改查\n> fillColor=`#C0C0C0`",
  "langage": "mermaid",
  "tags": ["mindmap", "diagramme", "arbres", "structures de données"],
  "description": "Diagrame représentant différentes structures de données comme les arbres binaires et non binaires.",
  "source": "https://example.com/nbmindmap"
}
,{
  "prompt": "mindmap",
  "code": "mindmap\n    ((\\u{1F4D6} Document))\n        ((\\u{1F4CB} Python Syntax))\n            (\\u{1F4CB} Variables)\n                [\\u{25B9} Variable assignment]\n                [\\u{25B9} Dynamic typing]\n                [\\u{25B9} Name conventions]\n                [\\u{25B9} Scope rules]\n            (\\u{1F4CB} Control Flow)\n                [\\u{25B9} Conditional execution]\n                [\\u{25B9} Loop structures]\n                [\\u{25B9} Function control]\n                [\\u{25B9} Exception handling]\n            (\\u{1F4CB} Functions)\n                [\\u{25B9} Reusable code blocks]\n                [\\u{25B9} Parameter handling]\n                [\\u{25B9} Return values]\n                [\\u{25B9} Modular organization]\n            (\\u{1F4E6} Data Types)\n                [\\u{1F525} Multiple data types]\n                [\\u{25B9} Built-in functions]\n        ((\\u{1F4E6} Data Types))\n            (\\u{1F4CB} Types)\n                [\\u{25B9} Simple syntax]\n                [\\u{25B9} Cross-platform compatibility]\n                [\\u{25B9} Extensive libraries]\n                [\\u{25B9} Versatile applications]\n            (\\u{1F4CB} Values)\n            (\\u{1F4CB} Storage)\n                [\\u{25B9} Interpreted language]\n        ((\\u{1F4CC} Control Structures))\n            (\\u{1F4CB} Conditional Logic)\n                [\\u{25B9} Decision making]\n                [\\u{25B9} Branching paths]\n                [\\u{25B9} Boolean evaluation]\n                [\\u{25B9} Code execution flow]\n            (\\u{1F4CB} Loops)\n                [\\u{25B9} Iterative execution]\n                [\\u{25B9} Sequence processing]\n                [\\u{25B9} Condition-based looping]\n                [\\u{25B9} Efficient iteration]\n            (\\u{1F4CB} Branching)\n                [\\u{25B9} Loop mechanisms]\n            (\\u{1F4CB} Iteration)\n        ((\\u{1F4CD} Object-Oriented Programming))\n            (\\u{1F4CB} Classes)\n                [\\u{25B9} Large library ecosystem]\n            (\\u{1F4CB} Objects)\n            (\\u{1F4CB} Inheritance)\n                [\\u{25B9} Code reusability]\n                [\\u{1F525} Parent-child relationships]\n                [\\u{25B9} Method overriding]\n                [\\u{25B9} Access modifiers]\n            (\\u{1F4CB} Polymorphism)\n                [\\u{25B9} Code reuse through inheritance]\n                [\\u{1F525} Multiple method implementations]\n                [\\u{25B9} Runtime method binding]\n                [\\u{25B9} Type flexibility in programming]\n        ((\\u{1F4CE} Libraries and Frameworks))\n            (\\u{1F4CB} Libraries)\n                [\\u{25B9} Beginner-friendly syntax]\n            (\\u{1F4CB} Frameworks)\n                [\\u{25B9} Rich ecosystem]\n            (\\u{1F4CB} Modules)\n                [\\u{25B9} Library integration]\n                [\\u{25B9} Modular design]\n            (\\u{1F4CB} Packages)",
  "langage": "mermaid",
  "tags": ["mindmap", "python", "syntax", "variables", "control flow", "functions", "data types", "object-oriented programming", "libraries", "frameworks"],
  "description": "Ce mindmap présente les différents aspects de la programmation Python, notamment les variables, le contrôle de flux, les fonctions, les données et l'orientation objet.",
  "source": ""
}
,{
  "prompt": "mindmap",
  "code": "((\\u203C Document))\n        ((\\u203C Python Syntax))\n            (\\u203C Variables)\n                [\\u25A1 Variable assignment]\n                [\\u25A1 Dynamic typing]\n                [\\u25A1 Naming conventions]\n                [\\u25A1 Scope rules]\n            (\\u203C Control Flow)\n                [\\u25A1 Conditional execution]\n                [\\u25A1 Loop structures]\n                [\\u25A1 Function calls]\n                [\\u25A1 Exception handling]\n            (\\u203C Functions)\n                [\\u25A1 Reusable code blocks]\n                [\\u25A1 Parameter handling]\n                [\\u25A1 Return values]\n                [\\u25A1 Modular organization]\n            (\\u2310 Data Types)\n                [\\u2620 Multiple data type support]\n                [\\u25A1 Built-in type conversion]\n        ((\\u2310 Data Types))\n            (\\u203C Types)\n                [\\u25A1 Simple syntax]\n                [\\u25A1 Cross-platform compatibility]\n                [\\u25A1 Extensive libraries]\n                [\\u25A1 Versatile applications]\n            (\\u203C Strings)\n                [\\u25A1 Large ecosystem]\n            (\\u203C Numbers)\n                [\\u2620 Wide application domains]\n        ((\\u203C Control Structures))\n            (\\u203C Conditionals)\n                [\\u25A1 Boolean logic]\n                [\\u25A1 Nested conditions]\n                [\\u25A1 Short-circuit evaluation]\n            (\\u203C Loops)\n                [\\u25A1 Iterative execution]\n                [\\u25A1 Sequence processing]\n                [\\u25A1 Nested loop support]\n            (\\u203C Branching)\n                [\\u2620 Multiple execution paths]\n                [\\u25A1 Decision making]\n            (\\u203C Iterations)\n        ((\\u203C Functions))\n            (\\u203C Definitions)\n                [\\u25A1 High-level interpreted language]\n            (\\u203C Parameters)\n            (\\u203C Return Values)\n            (\\u203C Usage)\n        ((\\u203C Object-Oriented Programming))\n            (\\u203C Classes)\n            (\\u203C Objects)\n            (\\u203C Inheritance)\n                [\\u25A1 Code reusability]\n                [\\u25A1 Parent-child relationships]\n                [\\u25A1 Method overriding]\n                [\\u25A1 Access modifiers]\n            (\\u203C Polymorphism)\n                [\\u2620 Multiple forms]\n                [\\u25A1 Inheritance support]",
  "langage": "mindmap",
  "tags": ["python", "syntax", "variables", "control flow", "functions", "data types", "types", "strings", "numbers", "object-oriented programming"],
  "description": "Diagramme de mindmap représentant les concepts clés du langage Python.",
  "source": ""
}]